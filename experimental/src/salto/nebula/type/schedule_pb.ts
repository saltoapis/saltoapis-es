// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/type/schedule.proto (package salto.nebula.type, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { DayType } from "./day_type_pb";
import { file_salto_nebula_type_day_type } from "./day_type_pb";
import type { DayOfWeek } from "@saltoapis/type";
import { file_salto_type_day_of_week } from "@saltoapis/type";
import type { TimeOfDay } from "@saltoapis/type";
import { file_salto_type_time_of_day } from "@saltoapis/type";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file salto/nebula/type/schedule.proto.
 */
export const file_salto_nebula_type_schedule: GenFile = /*@__PURE__*/
  fileDesc("CiBzYWx0by9uZWJ1bGEvdHlwZS9zY2hlZHVsZS5wcm90bxIRc2FsdG8ubmVidWxhLnR5cGUi7gEKCFNjaGVkdWxlEi0KBGRheXMYASADKAsyHy5zYWx0by5uZWJ1bGEudHlwZS5TY2hlZHVsZS5EYXkSKQoKc3RhcnRfdGltZRgCIAEoCzIVLnNhbHRvLnR5cGUuVGltZU9mRGF5EicKCGVuZF90aW1lGAMgASgLMhUuc2FsdG8udHlwZS5UaW1lT2ZEYXkaXwoDRGF5EiwKCGRheV90eXBlGAEgASgOMhouc2FsdG8ubmVidWxhLnR5cGUuRGF5VHlwZRIqCgtkYXlfb2Zfd2VlaxgCIAEoDjIVLnNhbHRvLnR5cGUuRGF5T2ZXZWVrQsoBChljb20uc2FsdG9hcGlzLm5lYnVsYS50eXBlQg1TY2hlZHVsZVByb3RvUAFaSGdpdGh1Yi5jb20vc2FsdG9hcGlzLWludGVybmFsL3NhbHRvYXBpcy1nby9uZWJ1bGEvdHlwZS9zY2hlZHVsZTtzY2hlZHVsZaoCFVNhbHRvYXBpcy5OZWJ1bGEuVHlwZcoCFVNhbHRvYXBpc1xOZWJ1bGFcVHlwZeICIUdQQk1ldGFkYXRhXFNhbHRvYXBpc1xOZWJ1bGFcVHlwZWIGcHJvdG8z", [file_salto_nebula_type_day_type, file_salto_type_day_of_week, file_salto_type_time_of_day]);

/**
 * Represents an schedule.
 *
 * @generated from message salto.nebula.type.Schedule
 */
export type Schedule = Message<"salto.nebula.type.Schedule"> & {
  /**
   * Days when it's valid.
   *
   * @generated from field: repeated salto.nebula.type.Schedule.Day days = 1;
   */
  days: Schedule_Day[];

  /**
   * Start time of day when schedule starts being valid.
   *
   * @generated from field: salto.type.TimeOfDay start_time = 2;
   */
  startTime?: TimeOfDay;

  /**
   * End time of day when schedule ends being valid.
   *
   * @generated from field: salto.type.TimeOfDay end_time = 3;
   */
  endTime?: TimeOfDay;
};

/**
 * Describes the message salto.nebula.type.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_salto_nebula_type_schedule, 0);

/**
 * Day of the week
 *
 * @generated from message salto.nebula.type.Schedule.Day
 */
export type Schedule_Day = Message<"salto.nebula.type.Schedule.Day"> & {
  /**
   * Day type
   *
   * @generated from field: salto.nebula.type.DayType day_type = 1;
   */
  dayType: DayType;

  /**
   * In case `day_type` is `NORMAL`, the specific day of the week.
   *
   * @generated from field: salto.type.DayOfWeek day_of_week = 2;
   */
  dayOfWeek: DayOfWeek;
};

/**
 * Describes the message salto.nebula.type.Schedule.Day.
 * Use `create(Schedule_DaySchema)` to create a new message.
 */
export const Schedule_DaySchema: GenMessage<Schedule_Day> = /*@__PURE__*/
  messageDesc(file_salto_nebula_type_schedule, 0, 0);

