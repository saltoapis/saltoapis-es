// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/longrunning/v1/operation.proto (package salto.longrunning.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelOperationRequest, DeleteOperationRequest, GetOperationRequest, ListOperationsRequest, ListOperationsResponse, Operation } from "./operation_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * Manages long-running operations with an API service.
 *
 * When an API method normally takes long time to complete, it can be designed
 * to return [`Operation`][salto.longrunning.v1.Operation] to the client, and the
 * client can use this interface to receive the real response asynchronously by
 * polling the operation resource, or pass the operation resource to another API
 * to receive the response. Any API service that returns long-running operations
 * should implement the `OperationService` interface so developers can have a
 * consistent client experience.
 *
 * @generated from service salto.longrunning.v1.OperationService
 */
export const OperationService = {
  typeName: "salto.longrunning.v1.OperationService",
  methods: {
    /**
     * Get a operation
     *
     * Retrieves an existing long-running operation.
     *
     * @generated from rpc salto.longrunning.v1.OperationService.GetOperation
     */
    getOperation: {
      name: "GetOperation",
      I: GetOperationRequest,
      O: Operation,
      kind: MethodKind.Unary,
    },
    /**
     * List operations
     *
     * Returns a list of long-running operations that have been previously created.
     *
     * @generated from rpc salto.longrunning.v1.OperationService.ListOperations
     */
    listOperations: {
      name: "ListOperations",
      I: ListOperationsRequest,
      O: ListOperationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an operation
     *
     * Permanently deletes a long-running operation. This cannot be undone.
     *
     * @generated from rpc salto.longrunning.v1.OperationService.DeleteOperation
     */
    deleteOperation: {
      name: "DeleteOperation",
      I: DeleteOperationRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel an operation
     *
     * Starts asynchronous cancellation on a long-running operation. The server
     * makes a best effort to cancel the operation, but success is not
     * guaranteed. Clients can use
     * [OperationService.GetOperation][salto.longrunning.v1.OperationService.GetOperation]
     * or other methods to check whether the cancellation succeeded or whether
     * the operation completed despite cancellation. On successful cancellation,
     * the operation is not deleted; instead, it becomes an operation with an
     * [Operation.error][salto.longrunning.v1.Operation.error] value with a
     * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
     * `Code.CANCELLED`.
     *
     * @generated from rpc salto.longrunning.v1.OperationService.CancelOperation
     */
    cancelOperation: {
      name: "CancelOperation",
      I: CancelOperationRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

