// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/emergencykey/v1/emergency_key.proto (package salto.nebula.emergencykey.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";

/**
 * The emergency key object
 *
 * @generated from message salto.nebula.emergencykey.v1.EmergencyKey
 */
export class EmergencyKey extends Message<EmergencyKey> {
  /**
   * Resource name of the emergency key. It must have the format
   * `installations/*\/emergency-keys/*`. For example:
   * `installations/surelock-homes-hq/emergency-keys/firefighters`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the emergency key.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Unique identifier of the physical card. Length dependent of technology.
   * Max length for ISO14443-3 is 10 bytes.
   *
   * @generated from field: string uid = 3;
   */
  uid = "";

  constructor(data?: PartialMessage<EmergencyKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.EmergencyKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmergencyKey {
    return new EmergencyKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmergencyKey {
    return new EmergencyKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmergencyKey {
    return new EmergencyKey().fromJsonString(jsonString, options);
  }

  static equals(a: EmergencyKey | PlainMessage<EmergencyKey> | undefined, b: EmergencyKey | PlainMessage<EmergencyKey> | undefined): boolean {
    return proto3.util.equals(EmergencyKey, a, b);
  }
}

/**
 * The request message for [`CreateEmergencyKey`][salto.nebula.emergencykey.v1.EmergencyKeyService.CreateEmergencyKey].
 *
 * @generated from message salto.nebula.emergencykey.v1.CreateEmergencyKeyRequest
 */
export class CreateEmergencyKeyRequest extends Message<CreateEmergencyKeyRequest> {
  /**
   * Resource name of the parent resource where the access right is to be
   * created. For example: Ã¬nstallations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The emergency key resource to be created. Client must not set the
   * `EmergencyKey.name` field.
   *
   * @generated from field: salto.nebula.emergencykey.v1.EmergencyKey emergency_key = 3;
   */
  emergencyKey?: EmergencyKey;

  constructor(data?: PartialMessage<CreateEmergencyKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.CreateEmergencyKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "emergency_key", kind: "message", T: EmergencyKey },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEmergencyKeyRequest {
    return new CreateEmergencyKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEmergencyKeyRequest {
    return new CreateEmergencyKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEmergencyKeyRequest {
    return new CreateEmergencyKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEmergencyKeyRequest | PlainMessage<CreateEmergencyKeyRequest> | undefined, b: CreateEmergencyKeyRequest | PlainMessage<CreateEmergencyKeyRequest> | undefined): boolean {
    return proto3.util.equals(CreateEmergencyKeyRequest, a, b);
  }
}

/**
 * The request message for [`GetEmergencyKey`][salto.nebula.emergencykey.v1.EmergencyKeyService.GetEmergencyKey].
 *
 * @generated from message salto.nebula.emergencykey.v1.GetEmergencyKeyRequest
 */
export class GetEmergencyKeyRequest extends Message<GetEmergencyKeyRequest> {
  /**
   * The name of the requested emergency key resource. For example:
   * `installations/surelock-homes-hq/emergency-keys/firefighters`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetEmergencyKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.GetEmergencyKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEmergencyKeyRequest {
    return new GetEmergencyKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEmergencyKeyRequest {
    return new GetEmergencyKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEmergencyKeyRequest {
    return new GetEmergencyKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetEmergencyKeyRequest | PlainMessage<GetEmergencyKeyRequest> | undefined, b: GetEmergencyKeyRequest | PlainMessage<GetEmergencyKeyRequest> | undefined): boolean {
    return proto3.util.equals(GetEmergencyKeyRequest, a, b);
  }
}

/**
 * The request message for [`ListEmergencyKeys`][salto.nebula.emergencykey.v1.EmergencyKeyService.ListEmergencyKeys].
 *
 * @generated from message salto.nebula.emergencykey.v1.ListEmergencyKeysRequest
 */
export class ListEmergencyKeysRequest extends Message<ListEmergencyKeysRequest> {
  /**
   * The parent resource name. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List`` request, if any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which emergency keys to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  constructor(data?: PartialMessage<ListEmergencyKeysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.ListEmergencyKeysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEmergencyKeysRequest {
    return new ListEmergencyKeysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEmergencyKeysRequest {
    return new ListEmergencyKeysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEmergencyKeysRequest {
    return new ListEmergencyKeysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEmergencyKeysRequest | PlainMessage<ListEmergencyKeysRequest> | undefined, b: ListEmergencyKeysRequest | PlainMessage<ListEmergencyKeysRequest> | undefined): boolean {
    return proto3.util.equals(ListEmergencyKeysRequest, a, b);
  }
}

/**
 * The response message for [`ListEmergencyKeys`][salto.nebula.emergencykey.v1.EmergencyKeyService.ListEmergencyKeys].
 *
 * @generated from message salto.nebula.emergencykey.v1.ListEmergencyKeysResponse
 */
export class ListEmergencyKeysResponse extends Message<ListEmergencyKeysResponse> {
  /**
   * The field name should match the noun `emergency_keys` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.emergencykey.v1.EmergencyKey emergency_keys = 1;
   */
  emergencyKeys: EmergencyKey[] = [];

  /**
   * The token to retrieve the next page of emergency keys.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListEmergencyKeysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.ListEmergencyKeysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "emergency_keys", kind: "message", T: EmergencyKey, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEmergencyKeysResponse {
    return new ListEmergencyKeysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEmergencyKeysResponse {
    return new ListEmergencyKeysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEmergencyKeysResponse {
    return new ListEmergencyKeysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEmergencyKeysResponse | PlainMessage<ListEmergencyKeysResponse> | undefined, b: ListEmergencyKeysResponse | PlainMessage<ListEmergencyKeysResponse> | undefined): boolean {
    return proto3.util.equals(ListEmergencyKeysResponse, a, b);
  }
}

/**
 * The request message for [`UpdateEmergencyKey`][salto.nebula.emergencykey.v1.EmergencyKeyService.UpdateEmergencyKey].
 *
 * @generated from message salto.nebula.emergencykey.v1.UpdateEmergencyKeyRequest
 */
export class UpdateEmergencyKeyRequest extends Message<UpdateEmergencyKeyRequest> {
  /**
   * The emergency key resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.emergencykey.v1.EmergencyKey emergency_key = 1;
   */
  emergencyKey?: EmergencyKey;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateEmergencyKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.UpdateEmergencyKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "emergency_key", kind: "message", T: EmergencyKey },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEmergencyKeyRequest {
    return new UpdateEmergencyKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEmergencyKeyRequest {
    return new UpdateEmergencyKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEmergencyKeyRequest {
    return new UpdateEmergencyKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEmergencyKeyRequest | PlainMessage<UpdateEmergencyKeyRequest> | undefined, b: UpdateEmergencyKeyRequest | PlainMessage<UpdateEmergencyKeyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateEmergencyKeyRequest, a, b);
  }
}

/**
 * The request message for [`DeleteEmergencyKey`][salto.nebula.emergencykey.v1.EmergencyKeyService.DeleteEmergencyKey].
 *
 * @generated from message salto.nebula.emergencykey.v1.DeleteEmergencyKeyRequest
 */
export class DeleteEmergencyKeyRequest extends Message<DeleteEmergencyKeyRequest> {
  /**
   * The resource name of the emergency key to delete. For example:
   * `installations/surelock-homes-hq/emergency-keys/firefighters`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteEmergencyKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.emergencykey.v1.DeleteEmergencyKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEmergencyKeyRequest {
    return new DeleteEmergencyKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEmergencyKeyRequest {
    return new DeleteEmergencyKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEmergencyKeyRequest {
    return new DeleteEmergencyKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEmergencyKeyRequest | PlainMessage<DeleteEmergencyKeyRequest> | undefined, b: DeleteEmergencyKeyRequest | PlainMessage<DeleteEmergencyKeyRequest> | undefined): boolean {
    return proto3.util.equals(DeleteEmergencyKeyRequest, a, b);
  }
}

