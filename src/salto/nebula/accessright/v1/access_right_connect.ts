// @generated by protoc-gen-connect-es v1.3.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/accessright/v1/access_right.proto (package salto.nebula.accessright.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AccessRight, AccessRightAccessPoint, AccessRightAccessPointGroup, CreateAccessRightAccessPointGroupRequest, CreateAccessRightAccessPointRequest, CreateAccessRightRequest, DeleteAccessRightAccessPointGroupRequest, DeleteAccessRightAccessPointRequest, DeleteAccessRightRequest, GetAccessRightAccessPointGroupRequest, GetAccessRightAccessPointRequest, GetAccessRightRequest, ListAccessRightAccessPointGroupsRequest, ListAccessRightAccessPointGroupsResponse, ListAccessRightAccessPointsRequest, ListAccessRightAccessPointsResponse, ListAccessRightsRequest, ListAccessRightsResponse, UpdateAccessRightAccessPointGroupRequest, UpdateAccessRightAccessPointRequest, UpdateAccessRightRequest } from "./access_right_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * Access rights simplify the management of access permissions for large
 * sets of users with similar access profiles. An access right can contain
 * multiple access points. Access rights determine who can enter where, and
 * when. This service is responsible for managing access right resources as well
 * as their association with access points.
 *
 * @generated from service salto.nebula.accessright.v1.AccessRightService
 */
export const AccessRightService = {
  typeName: "salto.nebula.accessright.v1.AccessRightService",
  methods: {
    /**
     * Create an access right
     *
     * Creates a new access right.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.CreateAccessRight
     */
    createAccessRight: {
      name: "CreateAccessRight",
      I: CreateAccessRightRequest,
      O: AccessRight,
      kind: MethodKind.Unary,
    },
    /**
     * Get an access right
     *
     * Retrieves an existing access right.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.GetAccessRight
     */
    getAccessRight: {
      name: "GetAccessRight",
      I: GetAccessRightRequest,
      O: AccessRight,
      kind: MethodKind.Unary,
    },
    /**
     * List access rights
     *
     * Returns a list of access rights that have been previously created.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.ListAccessRights
     */
    listAccessRights: {
      name: "ListAccessRights",
      I: ListAccessRightsRequest,
      O: ListAccessRightsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update an access right
     *
     * Updates an existing access right.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.UpdateAccessRight
     */
    updateAccessRight: {
      name: "UpdateAccessRight",
      I: UpdateAccessRightRequest,
      O: AccessRight,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an access right
     *
     * Permanently deletes an access right. This cannot be undone.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.DeleteAccessRight
     */
    deleteAccessRight: {
      name: "DeleteAccessRight",
      I: DeleteAccessRightRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Create an access point
     *
     * Creates an access right's access point association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.CreateAccessRightAccessPoint
     */
    createAccessRightAccessPoint: {
      name: "CreateAccessRightAccessPoint",
      I: CreateAccessRightAccessPointRequest,
      O: AccessRightAccessPoint,
      kind: MethodKind.Unary,
    },
    /**
     * Get an access point
     *
     * Retrieves an existing access right's access point association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.GetAccessRightAccessPoint
     */
    getAccessRightAccessPoint: {
      name: "GetAccessRightAccessPoint",
      I: GetAccessRightAccessPointRequest,
      O: AccessRightAccessPoint,
      kind: MethodKind.Unary,
    },
    /**
     * List access points
     *
     * Lists an existing access right's access point associations.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.ListAccessRightAccessPoints
     */
    listAccessRightAccessPoints: {
      name: "ListAccessRightAccessPoints",
      I: ListAccessRightAccessPointsRequest,
      O: ListAccessRightAccessPointsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update an access point
     *
     * Updates an existing access right's access point association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.UpdateAccessRightAccessPoint
     */
    updateAccessRightAccessPoint: {
      name: "UpdateAccessRightAccessPoint",
      I: UpdateAccessRightAccessPointRequest,
      O: AccessRightAccessPoint,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an access point
     *
     * Deletes an access right's access point association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.DeleteAccessRightAccessPoint
     */
    deleteAccessRightAccessPoint: {
      name: "DeleteAccessRightAccessPoint",
      I: DeleteAccessRightAccessPointRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Create an access point group
     *
     * Creates an access right's access point group association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.CreateAccessRightAccessPointGroup
     */
    createAccessRightAccessPointGroup: {
      name: "CreateAccessRightAccessPointGroup",
      I: CreateAccessRightAccessPointGroupRequest,
      O: AccessRightAccessPointGroup,
      kind: MethodKind.Unary,
    },
    /**
     * Get an access point group
     *
     * Retrieves an existing access right's access point group association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.GetAccessRightAccessPointGroup
     */
    getAccessRightAccessPointGroup: {
      name: "GetAccessRightAccessPointGroup",
      I: GetAccessRightAccessPointGroupRequest,
      O: AccessRightAccessPointGroup,
      kind: MethodKind.Unary,
    },
    /**
     * List access point groups
     *
     * Lists an existing access right's access point group associations.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.ListAccessRightAccessPointGroups
     */
    listAccessRightAccessPointGroups: {
      name: "ListAccessRightAccessPointGroups",
      I: ListAccessRightAccessPointGroupsRequest,
      O: ListAccessRightAccessPointGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update an access point group
     *
     * Updates an existing access right's access point group association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.UpdateAccessRightAccessPointGroup
     */
    updateAccessRightAccessPointGroup: {
      name: "UpdateAccessRightAccessPointGroup",
      I: UpdateAccessRightAccessPointGroupRequest,
      O: AccessRightAccessPointGroup,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an access point group
     *
     * Deletes an access right's access point group association.
     *
     * @generated from rpc salto.nebula.accessright.v1.AccessRightService.DeleteAccessRightAccessPointGroup
     */
    deleteAccessRightAccessPointGroup: {
      name: "DeleteAccessRightAccessPointGroup",
      I: DeleteAccessRightAccessPointGroupRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

