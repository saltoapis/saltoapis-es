// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/accessright/v1/access_right.proto (package salto.nebula.accessright.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Schedule } from "@saltoapis/nebula-type";

/**
 * The access right object
 *
 * @generated from message salto.nebula.accessright.v1.AccessRight
 */
export class AccessRight extends Message<AccessRight> {
  /**
   * Resource name of the access right. It must have the format
   * of `installations/*\/access-rights/*`. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the access right.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Activation time independent of any time zone or calendar.
   *
   * @generated from field: google.protobuf.Timestamp activate_time = 3;
   */
  activateTime?: Timestamp;

  /**
   * Expiration time independent of any time zone or calendar.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 4;
   */
  expireTime?: Timestamp;

  /**
   * Schedules in which this access right is applied.
   *
   * @generated from field: repeated salto.nebula.type.Schedule schedules = 5;
   */
  schedules: Schedule[] = [];

  constructor(data?: PartialMessage<AccessRight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.AccessRight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "activate_time", kind: "message", T: Timestamp },
    { no: 4, name: "expire_time", kind: "message", T: Timestamp },
    { no: 5, name: "schedules", kind: "message", T: Schedule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccessRight {
    return new AccessRight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccessRight {
    return new AccessRight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccessRight {
    return new AccessRight().fromJsonString(jsonString, options);
  }

  static equals(a: AccessRight | PlainMessage<AccessRight> | undefined, b: AccessRight | PlainMessage<AccessRight> | undefined): boolean {
    return proto3.util.equals(AccessRight, a, b);
  }
}

/**
 * The access right's access point association
 *
 * @generated from message salto.nebula.accessright.v1.AccessRightAccessPoint
 */
export class AccessRightAccessPoint extends Message<AccessRightAccessPoint> {
  /**
   * Resource name of the access right's access point association. It must
   * have the format of `installations/*\/access-rights/*\/access-points/*`.
   * For example:
   * `installations/surelock-homes-hq/access-rights/baskerville/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The access point resource name to bind as an association to the parent
   * access right. For example:
   * `installations/surelock-homes-hq/access-points/baker-street-entrance`.
   *
   * @generated from field: string access_point = 2;
   */
  accessPoint = "";

  /**
   * Display name of the associated entity. In this case an access point.
   *
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  constructor(data?: PartialMessage<AccessRightAccessPoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.AccessRightAccessPoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_point", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccessRightAccessPoint {
    return new AccessRightAccessPoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccessRightAccessPoint {
    return new AccessRightAccessPoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccessRightAccessPoint {
    return new AccessRightAccessPoint().fromJsonString(jsonString, options);
  }

  static equals(a: AccessRightAccessPoint | PlainMessage<AccessRightAccessPoint> | undefined, b: AccessRightAccessPoint | PlainMessage<AccessRightAccessPoint> | undefined): boolean {
    return proto3.util.equals(AccessRightAccessPoint, a, b);
  }
}

/**
 * The access right's access point group association
 *
 * @generated from message salto.nebula.accessright.v1.AccessRightAccessPointGroup
 */
export class AccessRightAccessPointGroup extends Message<AccessRightAccessPointGroup> {
  /**
   * Resource name of the access right's access point group association. It
   * must have the format of
   * `installations/*\/access-rights/*\/access-point-groups/*`. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville/access-point-groups/common-accesses`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The access point group resource name to bind as an association to the
   * parent access right. For example:
   * `installations/surelock-homes-hq/access-point-groups/common-accesses`.
   *
   * @generated from field: string access_point_group = 2;
   */
  accessPointGroup = "";

  /**
   * Display name of the associated entity. In this case an access point group.
   *
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  constructor(data?: PartialMessage<AccessRightAccessPointGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.AccessRightAccessPointGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_point_group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccessRightAccessPointGroup {
    return new AccessRightAccessPointGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccessRightAccessPointGroup {
    return new AccessRightAccessPointGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccessRightAccessPointGroup {
    return new AccessRightAccessPointGroup().fromJsonString(jsonString, options);
  }

  static equals(a: AccessRightAccessPointGroup | PlainMessage<AccessRightAccessPointGroup> | undefined, b: AccessRightAccessPointGroup | PlainMessage<AccessRightAccessPointGroup> | undefined): boolean {
    return proto3.util.equals(AccessRightAccessPointGroup, a, b);
  }
}

/**
 * The request message for [`CreateAccessRight`][salto.nebula.accessright.v1.AccessRightService.CreateAccessRight]
 *
 * @generated from message salto.nebula.accessright.v1.CreateAccessRightRequest
 */
export class CreateAccessRightRequest extends Message<CreateAccessRightRequest> {
  /**
   * Resource name of the parent resource where the access right is to be
   * created. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The access right ID to use for this access right. In case it's
   * empty the server will autogenerate a unique identifier.
   *
   * @generated from field: optional string access_right_id = 2;
   */
  accessRightId?: string;

  /**
   * The access right resource to be created. Client must not set the
   * `AccessRight.name` field.
   *
   * @generated from field: salto.nebula.accessright.v1.AccessRight access_right = 3;
   */
  accessRight?: AccessRight;

  constructor(data?: PartialMessage<CreateAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.CreateAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_right_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "access_right", kind: "message", T: AccessRight },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccessRightRequest {
    return new CreateAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccessRightRequest {
    return new CreateAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccessRightRequest {
    return new CreateAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccessRightRequest | PlainMessage<CreateAccessRightRequest> | undefined, b: CreateAccessRightRequest | PlainMessage<CreateAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`GetAccessRight`][salto.nebula.accessright.v1.AccessRightService.GetAccessRight]
 *
 * @generated from message salto.nebula.accessright.v1.GetAccessRightRequest
 */
export class GetAccessRightRequest extends Message<GetAccessRightRequest> {
  /**
   * The name of the requested access right resource. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.GetAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccessRightRequest {
    return new GetAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccessRightRequest {
    return new GetAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccessRightRequest {
    return new GetAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccessRightRequest | PlainMessage<GetAccessRightRequest> | undefined, b: GetAccessRightRequest | PlainMessage<GetAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(GetAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessRights`][salto.nebula.accessright.v1.AccessRightService.ListAccessRights]
 *
 * @generated from message salto.nebula.accessright.v1.ListAccessRightsRequest
 */
export class ListAccessRightsRequest extends Message<ListAccessRightsRequest> {
  /**
   * The parent resource name. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which access rights to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListAccessRightsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.ListAccessRightsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessRightsRequest {
    return new ListAccessRightsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessRightsRequest {
    return new ListAccessRightsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessRightsRequest {
    return new ListAccessRightsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessRightsRequest | PlainMessage<ListAccessRightsRequest> | undefined, b: ListAccessRightsRequest | PlainMessage<ListAccessRightsRequest> | undefined): boolean {
    return proto3.util.equals(ListAccessRightsRequest, a, b);
  }
}

/**
 * The response message for [`ListAccessRights`][salto.nebula.accessright.v1.AccessRightService.ListAccessRights]
 *
 * @generated from message salto.nebula.accessright.v1.ListAccessRightsResponse
 */
export class ListAccessRightsResponse extends Message<ListAccessRightsResponse> {
  /**
   * The field name should match the noun `access_rights` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.accessright.v1.AccessRight access_rights = 1;
   */
  accessRights: AccessRight[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListAccessRightsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.ListAccessRightsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_rights", kind: "message", T: AccessRight, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessRightsResponse {
    return new ListAccessRightsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessRightsResponse {
    return new ListAccessRightsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessRightsResponse {
    return new ListAccessRightsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessRightsResponse | PlainMessage<ListAccessRightsResponse> | undefined, b: ListAccessRightsResponse | PlainMessage<ListAccessRightsResponse> | undefined): boolean {
    return proto3.util.equals(ListAccessRightsResponse, a, b);
  }
}

/**
 * The request message for [`UpdateAccessRight`][salto.nebula.accessright.v1.AccessRightService.UpdateAccessRight]
 *
 * @generated from message salto.nebula.accessright.v1.UpdateAccessRightRequest
 */
export class UpdateAccessRightRequest extends Message<UpdateAccessRightRequest> {
  /**
   * The access right resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.accessright.v1.AccessRight access_right = 1;
   */
  accessRight?: AccessRight;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.UpdateAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_right", kind: "message", T: AccessRight },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccessRightRequest {
    return new UpdateAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccessRightRequest {
    return new UpdateAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccessRightRequest {
    return new UpdateAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAccessRightRequest | PlainMessage<UpdateAccessRightRequest> | undefined, b: UpdateAccessRightRequest | PlainMessage<UpdateAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`DeleteAccessRight`][salto.nebula.accessright.v1.AccessRightService.DeleteAccessRight]
 *
 * @generated from message salto.nebula.accessright.v1.DeleteAccessRightRequest
 */
export class DeleteAccessRightRequest extends Message<DeleteAccessRightRequest> {
  /**
   * The resource name of the access point to be deleted. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.DeleteAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccessRightRequest {
    return new DeleteAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccessRightRequest {
    return new DeleteAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccessRightRequest {
    return new DeleteAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAccessRightRequest | PlainMessage<DeleteAccessRightRequest> | undefined, b: DeleteAccessRightRequest | PlainMessage<DeleteAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`CreateAccessRightAccessPoint`][salto.nebula.accessright.v1.AccessRightService.CreateAccessRightAccessPoint]
 *
 * @generated from message salto.nebula.accessright.v1.CreateAccessRightAccessPointRequest
 */
export class CreateAccessRightAccessPointRequest extends Message<CreateAccessRightAccessPointRequest> {
  /**
   * Resource name of the parent resource where the access right's access
   * point association is to be created. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The access right's access point association resource to be created.
   * Client must not set the `AccessRightAccessPoint.name` field.
   *
   * @generated from field: salto.nebula.accessright.v1.AccessRightAccessPoint access_right_access_point = 2;
   */
  accessRightAccessPoint?: AccessRightAccessPoint;

  constructor(data?: PartialMessage<CreateAccessRightAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.CreateAccessRightAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_right_access_point", kind: "message", T: AccessRightAccessPoint },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccessRightAccessPointRequest {
    return new CreateAccessRightAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccessRightAccessPointRequest {
    return new CreateAccessRightAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccessRightAccessPointRequest {
    return new CreateAccessRightAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccessRightAccessPointRequest | PlainMessage<CreateAccessRightAccessPointRequest> | undefined, b: CreateAccessRightAccessPointRequest | PlainMessage<CreateAccessRightAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccessRightAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`GetAccessRightAccessPoint`][salto.nebula.accessright.v1.AccessRightService.GetAccessRightAccessPoint]
 *
 * @generated from message salto.nebula.accessright.v1.GetAccessRightAccessPointRequest
 */
export class GetAccessRightAccessPointRequest extends Message<GetAccessRightAccessPointRequest> {
  /**
   * The name of the requested access right's access point association
   * resource. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetAccessRightAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.GetAccessRightAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccessRightAccessPointRequest {
    return new GetAccessRightAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccessRightAccessPointRequest {
    return new GetAccessRightAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccessRightAccessPointRequest {
    return new GetAccessRightAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccessRightAccessPointRequest | PlainMessage<GetAccessRightAccessPointRequest> | undefined, b: GetAccessRightAccessPointRequest | PlainMessage<GetAccessRightAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(GetAccessRightAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessRightAccessPoints`][salto.nebula.accessright.v1.AccessRightService.ListAccessRightAccessPoints]
 *
 * @generated from message salto.nebula.accessright.v1.ListAccessRightAccessPointsRequest
 */
export class ListAccessRightAccessPointsRequest extends Message<ListAccessRightAccessPointsRequest> {
  /**
   * The parent resource name. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which access right's access point
   * associations to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListAccessRightAccessPointsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.ListAccessRightAccessPointsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessRightAccessPointsRequest {
    return new ListAccessRightAccessPointsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointsRequest {
    return new ListAccessRightAccessPointsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointsRequest {
    return new ListAccessRightAccessPointsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessRightAccessPointsRequest | PlainMessage<ListAccessRightAccessPointsRequest> | undefined, b: ListAccessRightAccessPointsRequest | PlainMessage<ListAccessRightAccessPointsRequest> | undefined): boolean {
    return proto3.util.equals(ListAccessRightAccessPointsRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessRightAccessPoints`][salto.nebula.accessright.v1.AccessRightService.ListAccessRightAccessPoints]
 *
 * @generated from message salto.nebula.accessright.v1.ListAccessRightAccessPointsResponse
 */
export class ListAccessRightAccessPointsResponse extends Message<ListAccessRightAccessPointsResponse> {
  /**
   * The field name should match the noun `access_right_access_points` in the
   * method name. There will be a maximum number of items returned based on
   * the `page_size` field in the request.
   *
   * @generated from field: repeated salto.nebula.accessright.v1.AccessRightAccessPoint access_right_access_points = 1;
   */
  accessRightAccessPoints: AccessRightAccessPoint[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListAccessRightAccessPointsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.ListAccessRightAccessPointsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_right_access_points", kind: "message", T: AccessRightAccessPoint, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessRightAccessPointsResponse {
    return new ListAccessRightAccessPointsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointsResponse {
    return new ListAccessRightAccessPointsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointsResponse {
    return new ListAccessRightAccessPointsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessRightAccessPointsResponse | PlainMessage<ListAccessRightAccessPointsResponse> | undefined, b: ListAccessRightAccessPointsResponse | PlainMessage<ListAccessRightAccessPointsResponse> | undefined): boolean {
    return proto3.util.equals(ListAccessRightAccessPointsResponse, a, b);
  }
}

/**
 * The request message for [`UpdateAccessRightAccessPoint`][salto.nebula.accessright.v1.AccessRightService.UpdateAccessRightAccessPoint]
 *
 * @generated from message salto.nebula.accessright.v1.UpdateAccessRightAccessPointRequest
 */
export class UpdateAccessRightAccessPointRequest extends Message<UpdateAccessRightAccessPointRequest> {
  /**
   * The access right's access point resource which replaces the resource on
   * the server.
   *
   * @generated from field: salto.nebula.accessright.v1.AccessRightAccessPoint access_right_access_point = 1;
   */
  accessRightAccessPoint?: AccessRightAccessPoint;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateAccessRightAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.UpdateAccessRightAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_right_access_point", kind: "message", T: AccessRightAccessPoint },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccessRightAccessPointRequest {
    return new UpdateAccessRightAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccessRightAccessPointRequest {
    return new UpdateAccessRightAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccessRightAccessPointRequest {
    return new UpdateAccessRightAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAccessRightAccessPointRequest | PlainMessage<UpdateAccessRightAccessPointRequest> | undefined, b: UpdateAccessRightAccessPointRequest | PlainMessage<UpdateAccessRightAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAccessRightAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`DeleteAccessRightAccessPoint`][salto.nebula.accessright.v1.AccessRightService.DeleteAccessRightAccessPoint]
 *
 * @generated from message salto.nebula.accessright.v1.DeleteAccessRightAccessPointRequest
 */
export class DeleteAccessRightAccessPointRequest extends Message<DeleteAccessRightAccessPointRequest> {
  /**
   * The resource name of the access right's access point association to be
   * deleted. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteAccessRightAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.DeleteAccessRightAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccessRightAccessPointRequest {
    return new DeleteAccessRightAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccessRightAccessPointRequest {
    return new DeleteAccessRightAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccessRightAccessPointRequest {
    return new DeleteAccessRightAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAccessRightAccessPointRequest | PlainMessage<DeleteAccessRightAccessPointRequest> | undefined, b: DeleteAccessRightAccessPointRequest | PlainMessage<DeleteAccessRightAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAccessRightAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`CreateAccessRightAccessPointGroup`][salto.nebula.accessright.v1.AccessRightService.CreateAccessRightAccessPointGroup]
 *
 * @generated from message salto.nebula.accessright.v1.CreateAccessRightAccessPointGroupRequest
 */
export class CreateAccessRightAccessPointGroupRequest extends Message<CreateAccessRightAccessPointGroupRequest> {
  /**
   * Resource name of the parent resource where the access right's access
   * point group association is to be created. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The access right's access point group association resource to be created.
   * Client must not set the `AccessRightAccessPointGroup.name` field.
   *
   * @generated from field: salto.nebula.accessright.v1.AccessRightAccessPointGroup access_right_access_point_group = 2;
   */
  accessRightAccessPointGroup?: AccessRightAccessPointGroup;

  constructor(data?: PartialMessage<CreateAccessRightAccessPointGroupRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.CreateAccessRightAccessPointGroupRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_right_access_point_group", kind: "message", T: AccessRightAccessPointGroup },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccessRightAccessPointGroupRequest {
    return new CreateAccessRightAccessPointGroupRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccessRightAccessPointGroupRequest {
    return new CreateAccessRightAccessPointGroupRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccessRightAccessPointGroupRequest {
    return new CreateAccessRightAccessPointGroupRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccessRightAccessPointGroupRequest | PlainMessage<CreateAccessRightAccessPointGroupRequest> | undefined, b: CreateAccessRightAccessPointGroupRequest | PlainMessage<CreateAccessRightAccessPointGroupRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccessRightAccessPointGroupRequest, a, b);
  }
}

/**
 * The request message for [`GetAccessRightAccessPointGroup`][salto.nebula.accessright.v1.AccessRightService.GetAccessRightAccessPointGroup]
 *
 * @generated from message salto.nebula.accessright.v1.GetAccessRightAccessPointGroupRequest
 */
export class GetAccessRightAccessPointGroupRequest extends Message<GetAccessRightAccessPointGroupRequest> {
  /**
   * The name of the requested access right's access point group association
   * resource. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville/access-point-groups/common-accesses`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetAccessRightAccessPointGroupRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.GetAccessRightAccessPointGroupRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccessRightAccessPointGroupRequest {
    return new GetAccessRightAccessPointGroupRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccessRightAccessPointGroupRequest {
    return new GetAccessRightAccessPointGroupRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccessRightAccessPointGroupRequest {
    return new GetAccessRightAccessPointGroupRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccessRightAccessPointGroupRequest | PlainMessage<GetAccessRightAccessPointGroupRequest> | undefined, b: GetAccessRightAccessPointGroupRequest | PlainMessage<GetAccessRightAccessPointGroupRequest> | undefined): boolean {
    return proto3.util.equals(GetAccessRightAccessPointGroupRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessRightAccessPointGroups`][salto.nebula.accessright.v1.AccessRightService.ListAccessRightAccessPointGroups]
 *
 * @generated from message salto.nebula.accessright.v1.ListAccessRightAccessPointGroupsRequest
 */
export class ListAccessRightAccessPointGroupsRequest extends Message<ListAccessRightAccessPointGroupsRequest> {
  /**
   * The parent resource name. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which access right's access point group
   * associations to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListAccessRightAccessPointGroupsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.ListAccessRightAccessPointGroupsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessRightAccessPointGroupsRequest {
    return new ListAccessRightAccessPointGroupsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointGroupsRequest {
    return new ListAccessRightAccessPointGroupsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointGroupsRequest {
    return new ListAccessRightAccessPointGroupsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessRightAccessPointGroupsRequest | PlainMessage<ListAccessRightAccessPointGroupsRequest> | undefined, b: ListAccessRightAccessPointGroupsRequest | PlainMessage<ListAccessRightAccessPointGroupsRequest> | undefined): boolean {
    return proto3.util.equals(ListAccessRightAccessPointGroupsRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessRightAccessPointGroups`][salto.nebula.accessright.v1.AccessRightService.ListAccessRightAccessPointGroups]
 *
 * @generated from message salto.nebula.accessright.v1.ListAccessRightAccessPointGroupsResponse
 */
export class ListAccessRightAccessPointGroupsResponse extends Message<ListAccessRightAccessPointGroupsResponse> {
  /**
   * The field name should match the noun `access_right_access_point_groups`
   * in the method name. There will be a maximum number of items returned
   * based on the `page_size` field in the request.
   *
   * @generated from field: repeated salto.nebula.accessright.v1.AccessRightAccessPointGroup access_right_access_point_groups = 1;
   */
  accessRightAccessPointGroups: AccessRightAccessPointGroup[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListAccessRightAccessPointGroupsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.ListAccessRightAccessPointGroupsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_right_access_point_groups", kind: "message", T: AccessRightAccessPointGroup, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessRightAccessPointGroupsResponse {
    return new ListAccessRightAccessPointGroupsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointGroupsResponse {
    return new ListAccessRightAccessPointGroupsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessRightAccessPointGroupsResponse {
    return new ListAccessRightAccessPointGroupsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessRightAccessPointGroupsResponse | PlainMessage<ListAccessRightAccessPointGroupsResponse> | undefined, b: ListAccessRightAccessPointGroupsResponse | PlainMessage<ListAccessRightAccessPointGroupsResponse> | undefined): boolean {
    return proto3.util.equals(ListAccessRightAccessPointGroupsResponse, a, b);
  }
}

/**
 * The request message for [`UpdateAccessRightAccessPointGroup`][salto.nebula.accessright.v1.AccessRightService.UpdateAccessRightAccessPointGroup]
 *
 * @generated from message salto.nebula.accessright.v1.UpdateAccessRightAccessPointGroupRequest
 */
export class UpdateAccessRightAccessPointGroupRequest extends Message<UpdateAccessRightAccessPointGroupRequest> {
  /**
   * The access right's access point group resource which replaces the
   * resource on the server.
   *
   * @generated from field: salto.nebula.accessright.v1.AccessRightAccessPointGroup access_right_access_point_group = 1;
   */
  accessRightAccessPointGroup?: AccessRightAccessPointGroup;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateAccessRightAccessPointGroupRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.UpdateAccessRightAccessPointGroupRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_right_access_point_group", kind: "message", T: AccessRightAccessPointGroup },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccessRightAccessPointGroupRequest {
    return new UpdateAccessRightAccessPointGroupRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccessRightAccessPointGroupRequest {
    return new UpdateAccessRightAccessPointGroupRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccessRightAccessPointGroupRequest {
    return new UpdateAccessRightAccessPointGroupRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAccessRightAccessPointGroupRequest | PlainMessage<UpdateAccessRightAccessPointGroupRequest> | undefined, b: UpdateAccessRightAccessPointGroupRequest | PlainMessage<UpdateAccessRightAccessPointGroupRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAccessRightAccessPointGroupRequest, a, b);
  }
}

/**
 * The request message for [`DeleteAccessRightAccessPointGroup`][salto.nebula.accessright.v1.AccessRightService.DeleteAccessRightAccessPointGroup]
 *
 * @generated from message salto.nebula.accessright.v1.DeleteAccessRightAccessPointGroupRequest
 */
export class DeleteAccessRightAccessPointGroupRequest extends Message<DeleteAccessRightAccessPointGroupRequest> {
  /**
   * The resource name of the access right's access point group association to
   * be deleted. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville/access-point-groups/common-accesses`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteAccessRightAccessPointGroupRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accessright.v1.DeleteAccessRightAccessPointGroupRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccessRightAccessPointGroupRequest {
    return new DeleteAccessRightAccessPointGroupRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccessRightAccessPointGroupRequest {
    return new DeleteAccessRightAccessPointGroupRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccessRightAccessPointGroupRequest {
    return new DeleteAccessRightAccessPointGroupRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAccessRightAccessPointGroupRequest | PlainMessage<DeleteAccessRightAccessPointGroupRequest> | undefined, b: DeleteAccessRightAccessPointGroupRequest | PlainMessage<DeleteAccessRightAccessPointGroupRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAccessRightAccessPointGroupRequest, a, b);
  }
}

