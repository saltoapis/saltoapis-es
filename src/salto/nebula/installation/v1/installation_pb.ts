// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/installation/v1/installation.proto (package salto.nebula.installation.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, FieldMask, Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { Color } from "@saltoapis/type";
import { Date } from "@saltoapis/type";

/**
 * The installation object
 *
 * @generated from message salto.nebula.installation.v1.Installation
 */
export class Installation extends Message<Installation> {
  /**
   * Resource name of the installation. It must have the format
   * of `installations/*`. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the installation.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * The file resource name for the installation photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   *
   * @generated from field: optional string photo = 3;
   */
  photo?: string;

  /**
   * The URI to view the installation photo.
   *
   * @generated from field: string photo_uri = 4;
   */
  photoUri = "";

  /**
   * Unstructured address.
   *
   * For example: "1600 Amphitheatre Pkwy, Mountain View, CA 94043,
   * Sunnyvale, California."
   *
   * @generated from field: string address = 5;
   */
  address = "";

  /**
   * Time zone where the installation is located. It must follow the IANA Time
   * Zone Database format. For example, "America/New_York."
   *
   * @generated from field: string time_zone = 6;
   */
  timeZone = "";

  /**
   * The digital key art configuration resource that belongs to the installation.
   *
   * @generated from field: salto.nebula.installation.v1.Installation.DigitalKeyArt digital_key_art = 7;
   */
  digitalKeyArt?: Installation_DigitalKeyArt;

  /**
   * Current state of the ownership transfer. Client must not set the
   * `Installation.transfer_ownership_state` field. This data is only
   * visible to the current installation owner.
   *
   * @generated from field: salto.nebula.installation.v1.Installation.TransferOwnershipState transfer_ownership_state = 8;
   */
  transferOwnershipState?: Installation_TransferOwnershipState;

  /**
   * The time when the installation was soft deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 12;
   */
  deleteTime?: Timestamp;

  /**
   * The information of the partner who created the installation.
   *
   * @generated from field: optional salto.nebula.installation.v1.Installation.PartnerInfo partner_info = 9;
   */
  partnerInfo?: Installation_PartnerInfo;

  /**
   * The time when the installation was blocked.
   *
   * @generated from field: optional google.protobuf.Timestamp block_time = 11;
   */
  blockTime?: Timestamp;

  /**
   * The length of time a key remains valid before requiring renewal. This
   * duration defines the effective lifespan of a key, after which it must be
   * updated to maintain access privileges. The duration is crucial for
   * ensuring security in the system, as it determines how frequently keys
   * need to be renewed.
   *
   * @generated from field: google.protobuf.Duration key_renewal_duration = 10;
   */
  keyRenewalDuration?: Duration;

  constructor(data?: PartialMessage<Installation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Installation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "photo", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "photo_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "time_zone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "digital_key_art", kind: "message", T: Installation_DigitalKeyArt },
    { no: 8, name: "transfer_ownership_state", kind: "message", T: Installation_TransferOwnershipState },
    { no: 12, name: "delete_time", kind: "message", T: Timestamp },
    { no: 9, name: "partner_info", kind: "message", T: Installation_PartnerInfo, opt: true },
    { no: 11, name: "block_time", kind: "message", T: Timestamp, opt: true },
    { no: 10, name: "key_renewal_duration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Installation {
    return new Installation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Installation {
    return new Installation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Installation {
    return new Installation().fromJsonString(jsonString, options);
  }

  static equals(a: Installation | PlainMessage<Installation> | undefined, b: Installation | PlainMessage<Installation> | undefined): boolean {
    return proto3.util.equals(Installation, a, b);
  }
}

/**
 * The digital key art configuration object associated to the installation
 *
 * @generated from message salto.nebula.installation.v1.Installation.DigitalKeyArt
 */
export class Installation_DigitalKeyArt extends Message<Installation_DigitalKeyArt> {
  /**
   * The file resource name for the digital key background image. It must
   * have the format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   *
   * @generated from field: optional string background_image = 1;
   */
  backgroundImage?: string;

  /**
   * The URI to view the digital key background image.
   *
   * @generated from field: string background_image_uri = 2;
   */
  backgroundImageUri = "";

  /**
   * The color used to display the installation name text on top of the background image.
   *
   * @generated from field: optional salto.type.Color text_color = 3;
   */
  textColor?: Color;

  constructor(data?: PartialMessage<Installation_DigitalKeyArt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Installation.DigitalKeyArt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "background_image", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "background_image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "text_color", kind: "message", T: Color, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Installation_DigitalKeyArt {
    return new Installation_DigitalKeyArt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Installation_DigitalKeyArt {
    return new Installation_DigitalKeyArt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Installation_DigitalKeyArt {
    return new Installation_DigitalKeyArt().fromJsonString(jsonString, options);
  }

  static equals(a: Installation_DigitalKeyArt | PlainMessage<Installation_DigitalKeyArt> | undefined, b: Installation_DigitalKeyArt | PlainMessage<Installation_DigitalKeyArt> | undefined): boolean {
    return proto3.util.equals(Installation_DigitalKeyArt, a, b);
  }
}

/**
 * Represents the current state of the ownership transfer.
 *
 * @generated from message salto.nebula.installation.v1.Installation.TransferOwnershipState
 */
export class Installation_TransferOwnershipState extends Message<Installation_TransferOwnershipState> {
  /**
   * Email address for the proposed installation owner.
   *
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * Expiration time of the transfer proposal.
   * (-- api-linter: core::0214::resource-expiry=disabled  --)
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;

  constructor(data?: PartialMessage<Installation_TransferOwnershipState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Installation.TransferOwnershipState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expire_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Installation_TransferOwnershipState {
    return new Installation_TransferOwnershipState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Installation_TransferOwnershipState {
    return new Installation_TransferOwnershipState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Installation_TransferOwnershipState {
    return new Installation_TransferOwnershipState().fromJsonString(jsonString, options);
  }

  static equals(a: Installation_TransferOwnershipState | PlainMessage<Installation_TransferOwnershipState> | undefined, b: Installation_TransferOwnershipState | PlainMessage<Installation_TransferOwnershipState> | undefined): boolean {
    return proto3.util.equals(Installation_TransferOwnershipState, a, b);
  }
}

/**
 * The partner info object.
 *
 * @generated from message salto.nebula.installation.v1.Installation.PartnerInfo
 */
export class Installation_PartnerInfo extends Message<Installation_PartnerInfo> {
  /**
   * The identifier of the partner who created the installation.
   *
   * @generated from field: string partner_id = 1;
   */
  partnerId = "";

  /**
   * The currency code the partner used for the installation (ISO 4217 format).
   *
   * @generated from field: string currency_code = 2;
   */
  currencyCode = "";

  constructor(data?: PartialMessage<Installation_PartnerInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Installation.PartnerInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "partner_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "currency_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Installation_PartnerInfo {
    return new Installation_PartnerInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Installation_PartnerInfo {
    return new Installation_PartnerInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Installation_PartnerInfo {
    return new Installation_PartnerInfo().fromJsonString(jsonString, options);
  }

  static equals(a: Installation_PartnerInfo | PlainMessage<Installation_PartnerInfo> | undefined, b: Installation_PartnerInfo | PlainMessage<Installation_PartnerInfo> | undefined): boolean {
    return proto3.util.equals(Installation_PartnerInfo, a, b);
  }
}

/**
 * The subscription information
 *
 * @generated from message salto.nebula.installation.v1.Subscription
 */
export class Subscription extends Message<Subscription> {
  /**
   * Output only. Resource name of the subscription. It must have the format of
   * `installations/*\/subscription`. For example:
   * `installations/surelock-homes-hq/subscription`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * End of the trial period for the subscription.
   *
   * @generated from field: optional google.protobuf.Timestamp trial_end_time = 3;
   */
  trialEndTime?: Timestamp;

  /**
   * The billing information of the subscription.
   *
   * @generated from field: salto.nebula.installation.v1.BillingInfo billing_info = 4;
   */
  billingInfo?: BillingInfo;

  /**
   * The payment method of the subscription.
   *
   * @generated from field: salto.nebula.installation.v1.PaymentMethod payment_method = 5;
   */
  paymentMethod?: PaymentMethod;

  /**
   * The coupons applied to the subscription.
   *
   * @generated from field: repeated salto.nebula.installation.v1.Coupon coupons = 6;
   */
  coupons: Coupon[] = [];

  constructor(data?: PartialMessage<Subscription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Subscription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "trial_end_time", kind: "message", T: Timestamp, opt: true },
    { no: 4, name: "billing_info", kind: "message", T: BillingInfo },
    { no: 5, name: "payment_method", kind: "message", T: PaymentMethod },
    { no: 6, name: "coupons", kind: "message", T: Coupon, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Subscription {
    return new Subscription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Subscription {
    return new Subscription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Subscription {
    return new Subscription().fromJsonString(jsonString, options);
  }

  static equals(a: Subscription | PlainMessage<Subscription> | undefined, b: Subscription | PlainMessage<Subscription> | undefined): boolean {
    return proto3.util.equals(Subscription, a, b);
  }
}

/**
 * Billing info object, belonging to a subscription
 *
 * @generated from message salto.nebula.installation.v1.BillingInfo
 */
export class BillingInfo extends Message<BillingInfo> {
  /**
   * Resource name of the subscription's billing info. It must have the format of
   * `installations/*\/subscription/billing-info`. For example:
   * `installations/surelock-homes-hq/subscription/billing-info`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The company name.
   *
   * @generated from field: string company = 2;
   */
  company = "";

  /**
   * The lines of the address. The first line may include the street name,
   * number, P.O. box, and further lines can include information such as
   * an apartment number, suite or unit.
   *
   * @generated from field: repeated string address = 3;
   */
  address: string[] = [];

  /**
   * The region, country or territory code. Must be in ISO 3166-1 format.
   *
   * @generated from field: string region_code = 4;
   */
  regionCode = "";

  /**
   * The city, district, suburb, town, or village name.
   *
   * @generated from field: string city = 5;
   */
  city = "";

  /**
   * The state or province code. Must be in ISO 3166-2 format.
   * Mandatory for the following countries: USA, Canada and India.
   * For the rest of the countries, it will be ignored.
   *
   * @generated from field: optional string state_code = 6;
   */
  stateCode?: string;

  /**
   * The ZIP or postal code.
   *
   * @generated from field: string zip = 7;
   */
  zip = "";

  /**
   * The VAT or Tax Registration Number (TRN).
   *
   * @generated from field: optional string vat_number = 8;
   */
  vatNumber?: string;

  constructor(data?: PartialMessage<BillingInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.BillingInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "company", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "region_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "state_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "zip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "vat_number", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BillingInfo {
    return new BillingInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BillingInfo {
    return new BillingInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BillingInfo {
    return new BillingInfo().fromJsonString(jsonString, options);
  }

  static equals(a: BillingInfo | PlainMessage<BillingInfo> | undefined, b: BillingInfo | PlainMessage<BillingInfo> | undefined): boolean {
    return proto3.util.equals(BillingInfo, a, b);
  }
}

/**
 * Representation of a payment method, belonging to a subscription
 *
 * @generated from message salto.nebula.installation.v1.PaymentMethod
 */
export class PaymentMethod extends Message<PaymentMethod> {
  /**
   * Resource name of the subscription's payment method. It must have the format of
   * `installations/*\/subscription/payment-method`. For example:
   * `installations/surelock-homes-hq/subscription/payment-method`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The accepted payment method for the installation.
   *
   * @generated from oneof salto.nebula.installation.v1.PaymentMethod.method
   */
  method: {
    /**
     * Card details.
     *
     * @generated from field: salto.nebula.installation.v1.PaymentMethod.Card card = 2;
     */
    value: PaymentMethod_Card;
    case: "card";
  } | {
    /**
     * Direct debit details.
     *
     * @generated from field: salto.nebula.installation.v1.PaymentMethod.DirectDebit direct_debit = 3;
     */
    value: PaymentMethod_DirectDebit;
    case: "directDebit";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PaymentMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.PaymentMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "card", kind: "message", T: PaymentMethod_Card, oneof: "method" },
    { no: 3, name: "direct_debit", kind: "message", T: PaymentMethod_DirectDebit, oneof: "method" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethod {
    return new PaymentMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethod {
    return new PaymentMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethod {
    return new PaymentMethod().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentMethod | PlainMessage<PaymentMethod> | undefined, b: PaymentMethod | PlainMessage<PaymentMethod> | undefined): boolean {
    return proto3.util.equals(PaymentMethod, a, b);
  }
}

/**
 * Card object
 *
 * @generated from message salto.nebula.installation.v1.PaymentMethod.Card
 */
export class PaymentMethod_Card extends Message<PaymentMethod_Card> {
  /**
   * The date the card expires.
   *
   * @generated from field: salto.type.Date expire_date = 1;
   */
  expireDate?: Date;

  /**
   * The last four digits of the card.
   *
   * @generated from field: string last_four = 2;
   */
  lastFour = "";

  /**
   * The card brand. For example: visa, mastercard, american_express, other.
   *
   * @generated from field: string brand = 3;
   */
  brand = "";

  constructor(data?: PartialMessage<PaymentMethod_Card>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.PaymentMethod.Card";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "expire_date", kind: "message", T: Date },
    { no: 2, name: "last_four", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "brand", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethod_Card {
    return new PaymentMethod_Card().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethod_Card {
    return new PaymentMethod_Card().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethod_Card {
    return new PaymentMethod_Card().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentMethod_Card | PlainMessage<PaymentMethod_Card> | undefined, b: PaymentMethod_Card | PlainMessage<PaymentMethod_Card> | undefined): boolean {
    return proto3.util.equals(PaymentMethod_Card, a, b);
  }
}

/**
 * Direct debit object
 *
 * @generated from message salto.nebula.installation.v1.PaymentMethod.DirectDebit
 */
export class PaymentMethod_DirectDebit extends Message<PaymentMethod_DirectDebit> {
  /**
   * The direct debit scheme.
   *
   * @generated from oneof salto.nebula.installation.v1.PaymentMethod.DirectDebit.scheme
   */
  scheme: {
    /**
     * SEPA details.
     *
     * @generated from field: salto.nebula.installation.v1.PaymentMethod.DirectDebit.SEPA sepa = 1;
     */
    value: PaymentMethod_DirectDebit_SEPA;
    case: "sepa";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PaymentMethod_DirectDebit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.PaymentMethod.DirectDebit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sepa", kind: "message", T: PaymentMethod_DirectDebit_SEPA, oneof: "scheme" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethod_DirectDebit {
    return new PaymentMethod_DirectDebit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethod_DirectDebit {
    return new PaymentMethod_DirectDebit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethod_DirectDebit {
    return new PaymentMethod_DirectDebit().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentMethod_DirectDebit | PlainMessage<PaymentMethod_DirectDebit> | undefined, b: PaymentMethod_DirectDebit | PlainMessage<PaymentMethod_DirectDebit> | undefined): boolean {
    return proto3.util.equals(PaymentMethod_DirectDebit, a, b);
  }
}

/**
 * The SEPA object
 *
 * @generated from message salto.nebula.installation.v1.PaymentMethod.DirectDebit.SEPA
 */
export class PaymentMethod_DirectDebit_SEPA extends Message<PaymentMethod_DirectDebit_SEPA> {
  /**
   * The last four digits of the bank account number used for direct
   * debit.
   *
   * @generated from field: string last_four = 1;
   */
  lastFour = "";

  /**
   * The name of the person or business that owns the bank account.
   *
   * @generated from field: string account_holder = 2;
   */
  accountHolder = "";

  /**
   * The IBAN (International Bank Account Number) of the bank account.
   *
   * @generated from field: string iban = 3;
   */
  iban = "";

  constructor(data?: PartialMessage<PaymentMethod_DirectDebit_SEPA>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.PaymentMethod.DirectDebit.SEPA";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "last_four", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_holder", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "iban", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethod_DirectDebit_SEPA {
    return new PaymentMethod_DirectDebit_SEPA().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethod_DirectDebit_SEPA {
    return new PaymentMethod_DirectDebit_SEPA().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethod_DirectDebit_SEPA {
    return new PaymentMethod_DirectDebit_SEPA().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentMethod_DirectDebit_SEPA | PlainMessage<PaymentMethod_DirectDebit_SEPA> | undefined, b: PaymentMethod_DirectDebit_SEPA | PlainMessage<PaymentMethod_DirectDebit_SEPA> | undefined): boolean {
    return proto3.util.equals(PaymentMethod_DirectDebit_SEPA, a, b);
  }
}

/**
 * The coupon object
 *
 * @generated from message salto.nebula.installation.v1.Coupon
 */
export class Coupon extends Message<Coupon> {
  /**
   * Resource name of the coupon. It must have the format of
   * `installations/*\/subscription/coupons/*`. For example:
   * `installations/salto-hq/subscription/coupons/01HCD0YB`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<Coupon>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Coupon";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coupon {
    return new Coupon().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coupon {
    return new Coupon().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coupon {
    return new Coupon().fromJsonString(jsonString, options);
  }

  static equals(a: Coupon | PlainMessage<Coupon> | undefined, b: Coupon | PlainMessage<Coupon> | undefined): boolean {
    return proto3.util.equals(Coupon, a, b);
  }
}

/**
 * The invoice object used for billing
 *
 * @generated from message salto.nebula.installation.v1.Invoice
 */
export class Invoice extends Message<Invoice> {
  /**
   * Resource name of the invoice. It must have the format of
   * `installations/*\/subscription/invoices/*`. For example:
   * `installations/salto-hq/subscription/invoices/2023-000015`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Start time of the invoice. It must be past time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * End time of the invoice.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * The line items included in the invoice. Must include at least one
   * item and no more than 50.
   *
   * @generated from field: repeated salto.nebula.installation.v1.Invoice.LineItem line_items = 4;
   */
  lineItems: Invoice_LineItem[] = [];

  /**
   * The total cost of the invoice.
   * The value is in the minor unit of the currency. (for example: cents).
   *
   * @generated from field: int64 total = 5;
   */
  total = protoInt64.zero;

  /**
   * Indicates whether this invoice has been paid or not.
   *
   * @generated from field: salto.nebula.installation.v1.Invoice.State state = 6;
   */
  state = Invoice_State.STATE_UNSPECIFIED;

  constructor(data?: PartialMessage<Invoice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Invoice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_time", kind: "message", T: Timestamp },
    { no: 3, name: "end_time", kind: "message", T: Timestamp },
    { no: 4, name: "line_items", kind: "message", T: Invoice_LineItem, repeated: true },
    { no: 5, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "state", kind: "enum", T: proto3.getEnumType(Invoice_State) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Invoice {
    return new Invoice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Invoice {
    return new Invoice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Invoice {
    return new Invoice().fromJsonString(jsonString, options);
  }

  static equals(a: Invoice | PlainMessage<Invoice> | undefined, b: Invoice | PlainMessage<Invoice> | undefined): boolean {
    return proto3.util.equals(Invoice, a, b);
  }
}

/**
 * State for a invoice.
 *
 * @generated from enum salto.nebula.installation.v1.Invoice.State
 */
export enum Invoice_State {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted,
   * or is not applicable.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The invoice is unpaid.
   *
   * @generated from enum value: UNPAID = 1;
   */
  UNPAID = 1,

  /**
   * The invoice has been paid.
   *
   * @generated from enum value: PAID = 2;
   */
  PAID = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(Invoice_State)
proto3.util.setEnumType(Invoice_State, "salto.nebula.installation.v1.Invoice.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "UNPAID" },
  { no: 2, name: "PAID" },
]);

/**
 * The line item object.
 *
 * @generated from message salto.nebula.installation.v1.Invoice.LineItem
 */
export class Invoice_LineItem extends Message<Invoice_LineItem> {
  /**
   * The line item ID belonging to the subscription. For example:
   * `elevators`.
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * The quantity of the line item used.
   *
   * @generated from field: int32 quantity = 2;
   */
  quantity = 0;

  /**
   * The cost of the item price when the pricing model is flat fee.
   * When the pricing model is per unit, it is the price per unit quantity of the item.
   * The value is in the minor unit of the currency. (for example: cents).
   *
   * @generated from field: int64 price = 3;
   */
  price = protoInt64.zero;

  constructor(data?: PartialMessage<Invoice_LineItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Invoice.LineItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Invoice_LineItem {
    return new Invoice_LineItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Invoice_LineItem {
    return new Invoice_LineItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Invoice_LineItem {
    return new Invoice_LineItem().fromJsonString(jsonString, options);
  }

  static equals(a: Invoice_LineItem | PlainMessage<Invoice_LineItem> | undefined, b: Invoice_LineItem | PlainMessage<Invoice_LineItem> | undefined): boolean {
    return proto3.util.equals(Invoice_LineItem, a, b);
  }
}

/**
 * The IAM policy object
 *
 * @generated from message salto.nebula.installation.v1.Policy
 */
export class Policy extends Message<Policy> {
  /**
   * Output only. Resource name of the policy. It must have the format of
   * `installations/*\/iam-policies`. For example:
   * `installations/surelock-homes-hq/iam-policies/standard`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Specifies the identity requesting access to this resource.
   *
   * @generated from field: string member = 2;
   */
  member = "";

  /**
   * The names of the roles this policy grants.
   *
   * @generated from field: repeated string roles = 3;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<Policy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.Policy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "member", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Policy {
    return new Policy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Policy {
    return new Policy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Policy {
    return new Policy().fromJsonString(jsonString, options);
  }

  static equals(a: Policy | PlainMessage<Policy> | undefined, b: Policy | PlainMessage<Policy> | undefined): boolean {
    return proto3.util.equals(Policy, a, b);
  }
}

/**
 * The request message for [`CreateInstallation`][salto.nebula.installation.v1.InstallationService.CreateInstallation]
 *
 * @generated from message salto.nebula.installation.v1.CreateInstallationRequest
 */
export class CreateInstallationRequest extends Message<CreateInstallationRequest> {
  /**
   * The installation ID to use for this installation. In case it's
   * empty the server will autogenerate a unique identifier.
   *
   * @generated from field: optional string installation_id = 1;
   */
  installationId?: string;

  /**
   * The installation resource to be created. Client must not set the
   * `Installation.name` field.
   *
   * @generated from field: salto.nebula.installation.v1.Installation installation = 2;
   */
  installation?: Installation;

  /**
   * If set, validate the request but do not actually create the installation.
   *
   * @generated from field: optional bool validate_only = 5;
   */
  validateOnly?: boolean;

  constructor(data?: PartialMessage<CreateInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.CreateInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "installation", kind: "message", T: Installation },
    { no: 5, name: "validate_only", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateInstallationRequest {
    return new CreateInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateInstallationRequest {
    return new CreateInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateInstallationRequest {
    return new CreateInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateInstallationRequest | PlainMessage<CreateInstallationRequest> | undefined, b: CreateInstallationRequest | PlainMessage<CreateInstallationRequest> | undefined): boolean {
    return proto3.util.equals(CreateInstallationRequest, a, b);
  }
}

/**
 * The request message for [`GetInstallation`][salto.nebula.installation.v1.InstallationService.GetInstallation]
 *
 * @generated from message salto.nebula.installation.v1.GetInstallationRequest
 */
export class GetInstallationRequest extends Message<GetInstallationRequest> {
  /**
   * The name of the requested installation resource. For example:
   * `installations/surelock-homes-hq`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.GetInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInstallationRequest {
    return new GetInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInstallationRequest {
    return new GetInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInstallationRequest {
    return new GetInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetInstallationRequest | PlainMessage<GetInstallationRequest> | undefined, b: GetInstallationRequest | PlainMessage<GetInstallationRequest> | undefined): boolean {
    return proto3.util.equals(GetInstallationRequest, a, b);
  }
}

/**
 * The request message for [`ListInstallations`][salto.nebula.installation.v1.InstallationService.ListInstallations]
 *
 * @generated from message salto.nebula.installation.v1.ListInstallationsRequest
 */
export class ListInstallationsRequest extends Message<ListInstallationsRequest> {
  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  /**
   * A filter that chooses which installations to return.
   *
   * @generated from field: string filter = 3;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 4;
   */
  orderBy = "";

  /**
   * Show deleted installations.
   *
   * @generated from field: bool show_deleted = 5;
   */
  showDeleted = false;

  constructor(data?: PartialMessage<ListInstallationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ListInstallationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "show_deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInstallationsRequest {
    return new ListInstallationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInstallationsRequest {
    return new ListInstallationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInstallationsRequest {
    return new ListInstallationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListInstallationsRequest | PlainMessage<ListInstallationsRequest> | undefined, b: ListInstallationsRequest | PlainMessage<ListInstallationsRequest> | undefined): boolean {
    return proto3.util.equals(ListInstallationsRequest, a, b);
  }
}

/**
 * The response message for [`ListInstallations`][salto.nebula.installation.v1.InstallationService.ListInstallations]
 *
 * @generated from message salto.nebula.installation.v1.ListInstallationsResponse
 */
export class ListInstallationsResponse extends Message<ListInstallationsResponse> {
  /**
   * The field name should match the noun `installations` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.installation.v1.Installation installations = 1;
   */
  installations: Installation[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListInstallationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ListInstallationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installations", kind: "message", T: Installation, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInstallationsResponse {
    return new ListInstallationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInstallationsResponse {
    return new ListInstallationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInstallationsResponse {
    return new ListInstallationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListInstallationsResponse | PlainMessage<ListInstallationsResponse> | undefined, b: ListInstallationsResponse | PlainMessage<ListInstallationsResponse> | undefined): boolean {
    return proto3.util.equals(ListInstallationsResponse, a, b);
  }
}

/**
 * The request message for [`UpdateInstallation`][salto.nebula.installation.v1.InstallationService.UpdateInstallation]
 *
 * @generated from message salto.nebula.installation.v1.UpdateInstallationRequest
 */
export class UpdateInstallationRequest extends Message<UpdateInstallationRequest> {
  /**
   * The installation resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.installation.v1.Installation installation = 1;
   */
  installation?: Installation;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UpdateInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation", kind: "message", T: Installation },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateInstallationRequest {
    return new UpdateInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateInstallationRequest {
    return new UpdateInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateInstallationRequest {
    return new UpdateInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateInstallationRequest | PlainMessage<UpdateInstallationRequest> | undefined, b: UpdateInstallationRequest | PlainMessage<UpdateInstallationRequest> | undefined): boolean {
    return proto3.util.equals(UpdateInstallationRequest, a, b);
  }
}

/**
 * The request message for [`DeleteInstallation`][salto.nebula.installation.v1.InstallationService.DeleteInstallation]
 *
 * @generated from message salto.nebula.installation.v1.DeleteInstallationRequest
 */
export class DeleteInstallationRequest extends Message<DeleteInstallationRequest> {
  /**
   * The resource name of the installation to be soft deleted. For example:
   * `installations/surelock-homes-hq`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * If set, validate the request but do not actually delete the installation.
   *
   * @generated from field: optional bool validate_only = 2;
   */
  validateOnly?: boolean;

  /**
   * The number of hours to wait before permanently deleting the installation.
   *
   * @generated from field: optional int32 delay_hours = 3;
   */
  delayHours?: number;

  constructor(data?: PartialMessage<DeleteInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.DeleteInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validate_only", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "delay_hours", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteInstallationRequest {
    return new DeleteInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteInstallationRequest {
    return new DeleteInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteInstallationRequest {
    return new DeleteInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteInstallationRequest | PlainMessage<DeleteInstallationRequest> | undefined, b: DeleteInstallationRequest | PlainMessage<DeleteInstallationRequest> | undefined): boolean {
    return proto3.util.equals(DeleteInstallationRequest, a, b);
  }
}

/**
 * The request message for [`UndeleteInstallation`][salto.nebula.installation.v1.InstallationService.UndeleteInstallation]
 *
 * @generated from message salto.nebula.installation.v1.UndeleteInstallationRequest
 */
export class UndeleteInstallationRequest extends Message<UndeleteInstallationRequest> {
  /**
   * The resource name of the installation to be undeleted. For example:
   * `installations/surelock-homes-hq`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<UndeleteInstallationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UndeleteInstallationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UndeleteInstallationRequest {
    return new UndeleteInstallationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UndeleteInstallationRequest {
    return new UndeleteInstallationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UndeleteInstallationRequest {
    return new UndeleteInstallationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UndeleteInstallationRequest | PlainMessage<UndeleteInstallationRequest> | undefined, b: UndeleteInstallationRequest | PlainMessage<UndeleteInstallationRequest> | undefined): boolean {
    return proto3.util.equals(UndeleteInstallationRequest, a, b);
  }
}

/**
 * The request message for [`CreatePolicy`][salto.nebula.installation.v1.InstallationService.CreatePolicy]
 *
 * @generated from message salto.nebula.installation.v1.CreatePolicyRequest
 */
export class CreatePolicyRequest extends Message<CreatePolicyRequest> {
  /**
   * Resource name of the parent resource where to create the IAM policy. For
   * example: `installations/salto-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The policy ID to use for the IAM policy. In case it's empty the server
   * will autogenerate a unique identifier.
   *
   * @generated from field: string policy_id = 2;
   */
  policyId = "";

  /**
   * The policy resource to be created. Client must not set the `Policy.name`
   * field.
   *
   * @generated from field: salto.nebula.installation.v1.Policy policy = 3;
   */
  policy?: Policy;

  constructor(data?: PartialMessage<CreatePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.CreatePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "policy_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "policy", kind: "message", T: Policy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePolicyRequest {
    return new CreatePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePolicyRequest {
    return new CreatePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePolicyRequest {
    return new CreatePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePolicyRequest | PlainMessage<CreatePolicyRequest> | undefined, b: CreatePolicyRequest | PlainMessage<CreatePolicyRequest> | undefined): boolean {
    return proto3.util.equals(CreatePolicyRequest, a, b);
  }
}

/**
 * The request message for [`GetPolicy`][salto.nebula.installation.v1.InstallationService.GetPolicy]
 *
 * @generated from message salto.nebula.installation.v1.GetPolicyRequest
 */
export class GetPolicyRequest extends Message<GetPolicyRequest> {
  /**
   * The name of the requested policy resource. For example:
   * `installations/surelock-homes-hq/iam-policies/standard`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.GetPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPolicyRequest {
    return new GetPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPolicyRequest {
    return new GetPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPolicyRequest {
    return new GetPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPolicyRequest | PlainMessage<GetPolicyRequest> | undefined, b: GetPolicyRequest | PlainMessage<GetPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPolicyRequest, a, b);
  }
}

/**
 * The request message for [`ListPolicies`][salto.nebula.installation.v1.InstallationService.ListPolicies]
 *
 * @generated from message salto.nebula.installation.v1.ListPoliciesRequest
 */
export class ListPoliciesRequest extends Message<ListPoliciesRequest> {
  /**
   * The parent resource name. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which installations to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListPoliciesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ListPoliciesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPoliciesRequest {
    return new ListPoliciesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPoliciesRequest {
    return new ListPoliciesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPoliciesRequest {
    return new ListPoliciesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListPoliciesRequest | PlainMessage<ListPoliciesRequest> | undefined, b: ListPoliciesRequest | PlainMessage<ListPoliciesRequest> | undefined): boolean {
    return proto3.util.equals(ListPoliciesRequest, a, b);
  }
}

/**
 * The response message for [`ListPolicies`][salto.nebula.installation.v1.InstallationService.ListPolicies]
 *
 * @generated from message salto.nebula.installation.v1.ListPoliciesResponse
 */
export class ListPoliciesResponse extends Message<ListPoliciesResponse> {
  /**
   * The field name should match the noun `policies` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.installation.v1.Policy policies = 1;
   */
  policies: Policy[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListPoliciesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ListPoliciesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policies", kind: "message", T: Policy, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPoliciesResponse {
    return new ListPoliciesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPoliciesResponse {
    return new ListPoliciesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPoliciesResponse {
    return new ListPoliciesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPoliciesResponse | PlainMessage<ListPoliciesResponse> | undefined, b: ListPoliciesResponse | PlainMessage<ListPoliciesResponse> | undefined): boolean {
    return proto3.util.equals(ListPoliciesResponse, a, b);
  }
}

/**
 * The request message for [`UpdatePolicy`][salto.nebula.installation.v1.InstallationService.UpdatePolicy]
 *
 * @generated from message salto.nebula.installation.v1.UpdatePolicyRequest
 */
export class UpdatePolicyRequest extends Message<UpdatePolicyRequest> {
  /**
   * The policy resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.installation.v1.Policy policy = 1;
   */
  policy?: Policy;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdatePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UpdatePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policy", kind: "message", T: Policy },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePolicyRequest {
    return new UpdatePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePolicyRequest {
    return new UpdatePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePolicyRequest {
    return new UpdatePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePolicyRequest | PlainMessage<UpdatePolicyRequest> | undefined, b: UpdatePolicyRequest | PlainMessage<UpdatePolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePolicyRequest, a, b);
  }
}

/**
 * The request message for [`DeletePolicy`][salto.nebula.installation.v1.InstallationService.DeletePolicy]
 *
 * @generated from message salto.nebula.installation.v1.DeletePolicyRequest
 */
export class DeletePolicyRequest extends Message<DeletePolicyRequest> {
  /**
   * The resource name of the policy to be deleted. For example:
   * `installations/surelock-homes-hq/iam-policies/standard`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeletePolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.DeletePolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePolicyRequest {
    return new DeletePolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePolicyRequest {
    return new DeletePolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePolicyRequest {
    return new DeletePolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePolicyRequest | PlainMessage<DeletePolicyRequest> | undefined, b: DeletePolicyRequest | PlainMessage<DeletePolicyRequest> | undefined): boolean {
    return proto3.util.equals(DeletePolicyRequest, a, b);
  }
}

/**
 * The request message for [`TestPermissions`][salto.nebula.installation.v1.InstallationService.TestPermissions]
 *
 * @generated from message salto.nebula.installation.v1.TestPermissionsRequest
 */
export class TestPermissionsRequest extends Message<TestPermissionsRequest> {
  /**
   * The resource name for which the policy detail is being requested. For
   * example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string installation = 1;
   */
  installation = "";

  /**
   * The set of permissions to check for the `resource_name`. Permissions with
   * wildcards (such as '*' or 'nebula.access-point.*') are not allowed.
   *
   * @generated from field: repeated string permissions = 2;
   */
  permissions: string[] = [];

  constructor(data?: PartialMessage<TestPermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.TestPermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permissions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPermissionsRequest {
    return new TestPermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPermissionsRequest {
    return new TestPermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPermissionsRequest {
    return new TestPermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TestPermissionsRequest | PlainMessage<TestPermissionsRequest> | undefined, b: TestPermissionsRequest | PlainMessage<TestPermissionsRequest> | undefined): boolean {
    return proto3.util.equals(TestPermissionsRequest, a, b);
  }
}

/**
 * The response message for [`TestPermissions`][salto.nebula.installation.v1.InstallationService.TestPermissions]
 *
 * @generated from message salto.nebula.installation.v1.TestPermissionsResponse
 */
export class TestPermissionsResponse extends Message<TestPermissionsResponse> {
  /**
   * A subset of `TestPermissionsRequest.permissions` that the caller is
   * allowed.
   *
   * @generated from field: repeated string permissions = 1;
   */
  permissions: string[] = [];

  constructor(data?: PartialMessage<TestPermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.TestPermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPermissionsResponse {
    return new TestPermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPermissionsResponse {
    return new TestPermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPermissionsResponse {
    return new TestPermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TestPermissionsResponse | PlainMessage<TestPermissionsResponse> | undefined, b: TestPermissionsResponse | PlainMessage<TestPermissionsResponse> | undefined): boolean {
    return proto3.util.equals(TestPermissionsResponse, a, b);
  }
}

/**
 * The request message for [`TransferInstallationOwnership`][salto.nebula.installation.v1.InstallationService.TransferInstallationOwnership]
 *
 * @generated from message salto.nebula.installation.v1.TransferInstallationOwnershipRequest
 */
export class TransferInstallationOwnershipRequest extends Message<TransferInstallationOwnershipRequest> {
  /**
   * The resource name for which the transfer ownership is being requested.
   * For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string installation = 1;
   */
  installation = "";

  /**
   * Email address for the proposed installation owner.
   *
   * @generated from field: string email = 2;
   */
  email = "";

  constructor(data?: PartialMessage<TransferInstallationOwnershipRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.TransferInstallationOwnershipRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferInstallationOwnershipRequest {
    return new TransferInstallationOwnershipRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferInstallationOwnershipRequest {
    return new TransferInstallationOwnershipRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferInstallationOwnershipRequest {
    return new TransferInstallationOwnershipRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TransferInstallationOwnershipRequest | PlainMessage<TransferInstallationOwnershipRequest> | undefined, b: TransferInstallationOwnershipRequest | PlainMessage<TransferInstallationOwnershipRequest> | undefined): boolean {
    return proto3.util.equals(TransferInstallationOwnershipRequest, a, b);
  }
}

/**
 * The response message for [`TransferInstallationOwnership`][salto.nebula.installation.v1.InstallationService.TransferInstallationOwnership]
 *
 * @generated from message salto.nebula.installation.v1.TransferInstallationOwnershipResponse
 */
export class TransferInstallationOwnershipResponse extends Message<TransferInstallationOwnershipResponse> {
  constructor(data?: PartialMessage<TransferInstallationOwnershipResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.TransferInstallationOwnershipResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferInstallationOwnershipResponse {
    return new TransferInstallationOwnershipResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferInstallationOwnershipResponse {
    return new TransferInstallationOwnershipResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferInstallationOwnershipResponse {
    return new TransferInstallationOwnershipResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TransferInstallationOwnershipResponse | PlainMessage<TransferInstallationOwnershipResponse> | undefined, b: TransferInstallationOwnershipResponse | PlainMessage<TransferInstallationOwnershipResponse> | undefined): boolean {
    return proto3.util.equals(TransferInstallationOwnershipResponse, a, b);
  }
}

/**
 * The request message for [`AcceptInstallationOwnership`][salto.nebula.installation.v1.InstallationService.AcceptInstallationOwnership]
 *
 * @generated from message salto.nebula.installation.v1.AcceptInstallationOwnershipRequest
 */
export class AcceptInstallationOwnershipRequest extends Message<AcceptInstallationOwnershipRequest> {
  /**
   * The resource name for which the accept ownership is being requested.
   * For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string installation = 1;
   */
  installation = "";

  /**
   * The billing info resource for the subscription billing.
   *
   * @generated from field: optional salto.nebula.installation.v1.BillingInfo billing_info = 2;
   */
  billingInfo?: BillingInfo;

  constructor(data?: PartialMessage<AcceptInstallationOwnershipRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.AcceptInstallationOwnershipRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "installation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "billing_info", kind: "message", T: BillingInfo, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptInstallationOwnershipRequest {
    return new AcceptInstallationOwnershipRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptInstallationOwnershipRequest {
    return new AcceptInstallationOwnershipRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptInstallationOwnershipRequest {
    return new AcceptInstallationOwnershipRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AcceptInstallationOwnershipRequest | PlainMessage<AcceptInstallationOwnershipRequest> | undefined, b: AcceptInstallationOwnershipRequest | PlainMessage<AcceptInstallationOwnershipRequest> | undefined): boolean {
    return proto3.util.equals(AcceptInstallationOwnershipRequest, a, b);
  }
}

/**
 * The response message for [`AcceptInstallationOwnership`][salto.nebula.installation.v1.InstallationService.AcceptInstallationOwnership]
 *
 * @generated from message salto.nebula.installation.v1.AcceptInstallationOwnershipResponse
 */
export class AcceptInstallationOwnershipResponse extends Message<AcceptInstallationOwnershipResponse> {
  constructor(data?: PartialMessage<AcceptInstallationOwnershipResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.AcceptInstallationOwnershipResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptInstallationOwnershipResponse {
    return new AcceptInstallationOwnershipResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptInstallationOwnershipResponse {
    return new AcceptInstallationOwnershipResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptInstallationOwnershipResponse {
    return new AcceptInstallationOwnershipResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AcceptInstallationOwnershipResponse | PlainMessage<AcceptInstallationOwnershipResponse> | undefined, b: AcceptInstallationOwnershipResponse | PlainMessage<AcceptInstallationOwnershipResponse> | undefined): boolean {
    return proto3.util.equals(AcceptInstallationOwnershipResponse, a, b);
  }
}

/**
 * The request message for [`GetSubscription`][salto.nebula.installation.v1.InstallationService.GetSubscription]
 *
 * @generated from message salto.nebula.installation.v1.GetSubscriptionRequest
 */
export class GetSubscriptionRequest extends Message<GetSubscriptionRequest> {
  /**
   * The name of the requested subscription resource. For example:
   * `installations/surelock-homes-hq/subscription`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetSubscriptionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.GetSubscriptionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSubscriptionRequest {
    return new GetSubscriptionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSubscriptionRequest {
    return new GetSubscriptionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSubscriptionRequest {
    return new GetSubscriptionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSubscriptionRequest | PlainMessage<GetSubscriptionRequest> | undefined, b: GetSubscriptionRequest | PlainMessage<GetSubscriptionRequest> | undefined): boolean {
    return proto3.util.equals(GetSubscriptionRequest, a, b);
  }
}

/**
 * (-- api-linter: core::0134::request-mask-required=disabled
 *     aip.dev/not-precedent: We need to do this to simplify the update operation. --)
 * The request message for [`UpdateBillingInfo`][salto.nebula.installation.v1.InstallationService.UpdateBillingInfo]
 *
 * @generated from message salto.nebula.installation.v1.UpdateBillingInfoRequest
 */
export class UpdateBillingInfoRequest extends Message<UpdateBillingInfoRequest> {
  /**
   * The billing info resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.installation.v1.BillingInfo billing_info = 1;
   */
  billingInfo?: BillingInfo;

  constructor(data?: PartialMessage<UpdateBillingInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UpdateBillingInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "billing_info", kind: "message", T: BillingInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBillingInfoRequest {
    return new UpdateBillingInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBillingInfoRequest {
    return new UpdateBillingInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBillingInfoRequest {
    return new UpdateBillingInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateBillingInfoRequest | PlainMessage<UpdateBillingInfoRequest> | undefined, b: UpdateBillingInfoRequest | PlainMessage<UpdateBillingInfoRequest> | undefined): boolean {
    return proto3.util.equals(UpdateBillingInfoRequest, a, b);
  }
}

/**
 * (-- api-linter: core::0134::request-mask-required=disabled
 *     aip.dev/not-precedent: We need to do this to simplify the update operation. --)
 * The request message for [`UpdatePaymentMethod`][salto.nebula.installation.v1.InstallationService.UpdatePaymentMethod]
 *
 * @generated from message salto.nebula.installation.v1.UpdatePaymentMethodRequest
 */
export class UpdatePaymentMethodRequest extends Message<UpdatePaymentMethodRequest> {
  /**
   * The payment method resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.installation.v1.PaymentMethod payment_method = 1;
   */
  paymentMethod?: PaymentMethod;

  constructor(data?: PartialMessage<UpdatePaymentMethodRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UpdatePaymentMethodRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payment_method", kind: "message", T: PaymentMethod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePaymentMethodRequest {
    return new UpdatePaymentMethodRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePaymentMethodRequest {
    return new UpdatePaymentMethodRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePaymentMethodRequest {
    return new UpdatePaymentMethodRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePaymentMethodRequest | PlainMessage<UpdatePaymentMethodRequest> | undefined, b: UpdatePaymentMethodRequest | PlainMessage<UpdatePaymentMethodRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePaymentMethodRequest, a, b);
  }
}

/**
 * The request message for [`UpdateCard`][salto.nebula.installation.v1.InstallationService.UpdateCard]
 *
 * @generated from message salto.nebula.installation.v1.UpdateCardRequest
 */
export class UpdateCardRequest extends Message<UpdateCardRequest> {
  /**
   * The resource name of the subscription's payment method for which the card is being
   * requested to be updated. For example:
   * `installations/surelock-homes-hq/subscription/payment-method`.
   *
   * @generated from field: string payment_method = 1;
   */
  paymentMethod = "";

  /**
   * The token provided for the operation.
   *
   * @generated from field: string token = 2;
   */
  token = "";

  constructor(data?: PartialMessage<UpdateCardRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UpdateCardRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payment_method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCardRequest {
    return new UpdateCardRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCardRequest {
    return new UpdateCardRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCardRequest {
    return new UpdateCardRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCardRequest | PlainMessage<UpdateCardRequest> | undefined, b: UpdateCardRequest | PlainMessage<UpdateCardRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCardRequest, a, b);
  }
}

/**
 * The response message for [`UpdateCard`][salto.nebula.installation.v1.InstallationService.UpdateCard]
 *
 * @generated from message salto.nebula.installation.v1.UpdateCardResponse
 */
export class UpdateCardResponse extends Message<UpdateCardResponse> {
  constructor(data?: PartialMessage<UpdateCardResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UpdateCardResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCardResponse {
    return new UpdateCardResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCardResponse {
    return new UpdateCardResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCardResponse {
    return new UpdateCardResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCardResponse | PlainMessage<UpdateCardResponse> | undefined, b: UpdateCardResponse | PlainMessage<UpdateCardResponse> | undefined): boolean {
    return proto3.util.equals(UpdateCardResponse, a, b);
  }
}

/**
 * (-- api-linter: core::0158::request-page-size-field=disabled
 *     aip.dev/not-precedent: We need to do this because there is no paging yet. --)
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because there is no paging yet. --)
 * The request message for [`ListInvoices`][salto.nebula.installation.v1.InstallationService.ListInvoices]
 *
 * @generated from message salto.nebula.installation.v1.ListInvoicesRequest
 */
export class ListInvoicesRequest extends Message<ListInvoicesRequest> {
  /**
   * The parent resource name. It must have the format of
   * `installations/*\/subscription`. For example: `installations/surelock-homes-hq/subscription`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  constructor(data?: PartialMessage<ListInvoicesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ListInvoicesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInvoicesRequest {
    return new ListInvoicesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInvoicesRequest {
    return new ListInvoicesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInvoicesRequest {
    return new ListInvoicesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListInvoicesRequest | PlainMessage<ListInvoicesRequest> | undefined, b: ListInvoicesRequest | PlainMessage<ListInvoicesRequest> | undefined): boolean {
    return proto3.util.equals(ListInvoicesRequest, a, b);
  }
}

/**
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because there is no paging yet. --)
 * The response message for [`ListInvoices`][salto.nebula.installation.v1.InstallationService.ListInvoices]
 *
 * @generated from message salto.nebula.installation.v1.ListInvoicesResponse
 */
export class ListInvoicesResponse extends Message<ListInvoicesResponse> {
  /**
   * The field name should match the noun `invoices` in the method name.
   *
   * @generated from field: repeated salto.nebula.installation.v1.Invoice invoices = 1;
   */
  invoices: Invoice[] = [];

  constructor(data?: PartialMessage<ListInvoicesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ListInvoicesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "invoices", kind: "message", T: Invoice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInvoicesResponse {
    return new ListInvoicesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInvoicesResponse {
    return new ListInvoicesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInvoicesResponse {
    return new ListInvoicesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListInvoicesResponse | PlainMessage<ListInvoicesResponse> | undefined, b: ListInvoicesResponse | PlainMessage<ListInvoicesResponse> | undefined): boolean {
    return proto3.util.equals(ListInvoicesResponse, a, b);
  }
}

/**
 * The request message for [`ApplyCoupon`][salto.nebula.installation.v1.InstallationService.ApplyCoupon]
 *
 * @generated from message salto.nebula.installation.v1.ApplyCouponRequest
 */
export class ApplyCouponRequest extends Message<ApplyCouponRequest> {
  /**
   * The resource name of the subscription for which the coupon is being
   * requested to be applied. For example:
   * `installations/surelock-homes-hq/subscription`.
   *
   * @generated from field: string subscription = 1;
   */
  subscription = "";

  /**
   * The resource name of the coupon that is requested to be applied.
   * For example: `installations/surelock-homes-hq/subscription/coupons/01HCD0YB`.
   *
   * @generated from field: string coupon = 2;
   */
  coupon = "";

  constructor(data?: PartialMessage<ApplyCouponRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ApplyCouponRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subscription", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "coupon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApplyCouponRequest {
    return new ApplyCouponRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApplyCouponRequest {
    return new ApplyCouponRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApplyCouponRequest {
    return new ApplyCouponRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApplyCouponRequest | PlainMessage<ApplyCouponRequest> | undefined, b: ApplyCouponRequest | PlainMessage<ApplyCouponRequest> | undefined): boolean {
    return proto3.util.equals(ApplyCouponRequest, a, b);
  }
}

/**
 * The response message for [`ApplyCoupon`][salto.nebula.installation.v1.InstallationService.ApplyCoupon]
 *
 * @generated from message salto.nebula.installation.v1.ApplyCouponResponse
 */
export class ApplyCouponResponse extends Message<ApplyCouponResponse> {
  constructor(data?: PartialMessage<ApplyCouponResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.ApplyCouponResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApplyCouponResponse {
    return new ApplyCouponResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApplyCouponResponse {
    return new ApplyCouponResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApplyCouponResponse {
    return new ApplyCouponResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ApplyCouponResponse | PlainMessage<ApplyCouponResponse> | undefined, b: ApplyCouponResponse | PlainMessage<ApplyCouponResponse> | undefined): boolean {
    return proto3.util.equals(ApplyCouponResponse, a, b);
  }
}

/**
 * The request message for [`UnapplyCoupon`][salto.nebula.installation.v1.InstallationService.UnapplyCoupon]
 *
 * @generated from message salto.nebula.installation.v1.UnapplyCouponRequest
 */
export class UnapplyCouponRequest extends Message<UnapplyCouponRequest> {
  /**
   * The resource name of the subscription for which the coupon is being
   * requested to be unapplied. For example:
   * `installations/surelock-homes-hq/subscription`.
   *
   * @generated from field: string subscription = 1;
   */
  subscription = "";

  /**
   * The resource name of the coupon that is requested to be unapplied.
   * For example: `installations/surelock-homes-hq/subscription/coupons/01HCD0YB`.
   *
   * @generated from field: string coupon = 2;
   */
  coupon = "";

  constructor(data?: PartialMessage<UnapplyCouponRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UnapplyCouponRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subscription", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "coupon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnapplyCouponRequest {
    return new UnapplyCouponRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnapplyCouponRequest {
    return new UnapplyCouponRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnapplyCouponRequest {
    return new UnapplyCouponRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnapplyCouponRequest | PlainMessage<UnapplyCouponRequest> | undefined, b: UnapplyCouponRequest | PlainMessage<UnapplyCouponRequest> | undefined): boolean {
    return proto3.util.equals(UnapplyCouponRequest, a, b);
  }
}

/**
 * The response message for [`UnapplyCoupon`][salto.nebula.installation.v1.InstallationService.UnapplyCoupon]
 *
 * @generated from message salto.nebula.installation.v1.UnapplyCouponResponse
 */
export class UnapplyCouponResponse extends Message<UnapplyCouponResponse> {
  constructor(data?: PartialMessage<UnapplyCouponResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.installation.v1.UnapplyCouponResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnapplyCouponResponse {
    return new UnapplyCouponResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnapplyCouponResponse {
    return new UnapplyCouponResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnapplyCouponResponse {
    return new UnapplyCouponResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnapplyCouponResponse | PlainMessage<UnapplyCouponResponse> | undefined, b: UnapplyCouponResponse | PlainMessage<UnapplyCouponResponse> | undefined): boolean {
    return proto3.util.equals(UnapplyCouponResponse, a, b);
  }
}

