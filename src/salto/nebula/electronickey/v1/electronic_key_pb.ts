// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/electronickey/v1/electronic_key.proto (package salto.nebula.electronickey.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";

/**
 * The electronic key object
 *
 * @generated from message salto.nebula.electronickey.v1.ElectronicKey
 */
export class ElectronicKey extends Message<ElectronicKey> {
  /**
   * Output only. Resource name of the electronic key. It must have the format of
   * `installations/*\/electronic-keys/*`. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the electronic key.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Indicates whether this electronic key has been initialized or not. This
   * field cannot be modified using a standard
   * [`UpdateElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.UpdateElectronicKey]
   * operation. To change the value of this field, you must call
   * [`InitializeElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.InitializeElectronicKey].
   *
   * If the value is `false` also applies to the case where the
   * initialization process has been initiated but where it has not finished.
   *
   * @generated from field: bool initialized = 3;
   */
  initialized = false;

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic keys and so on.
   *
   * @generated from field: optional string device_id = 4;
   */
  deviceId?: string;

  /**
   * Indicates whether this electronic key has pending updates or not. This
   * could be because there was a pending configuration or a firmware update
   * and is conditionally set based on the current installation settings.
   *
   * @generated from field: bool outdated = 5;
   */
  outdated = false;

  /**
   * Indicates whether the battery of this electronic key is low, and needs
   * replacing, or is normal and doesn't need replacing.
   *
   * @generated from field: bool low_battery = 7;
   */
  lowBattery = false;

  constructor(data?: PartialMessage<ElectronicKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ElectronicKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "initialized", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "outdated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "low_battery", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElectronicKey {
    return new ElectronicKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElectronicKey {
    return new ElectronicKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElectronicKey {
    return new ElectronicKey().fromJsonString(jsonString, options);
  }

  static equals(a: ElectronicKey | PlainMessage<ElectronicKey> | undefined, b: ElectronicKey | PlainMessage<ElectronicKey> | undefined): boolean {
    return proto3.util.equals(ElectronicKey, a, b);
  }
}

/**
 * The request message for [CreateElectronicKey][salto.nebula.electronickey.v1.ElectronicKeyService.CreateElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.CreateElectronicKeyRequest
 */
export class CreateElectronicKeyRequest extends Message<CreateElectronicKeyRequest> {
  /**
   * Resource name of the parent resource where to create the electronic key. For
   * example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The electronic key ID to use for this electronic key. In case it's empty the
   * server will autogenerate a unique identifier.
   *
   * @generated from field: optional string electronic_key_id = 2;
   */
  electronicKeyId?: string;

  /**
   * The electronic key resource to be created. Client must not set the
   * `ElectronicKey.name` field.
   *
   * @generated from field: salto.nebula.electronickey.v1.ElectronicKey electronic_key = 3;
   */
  electronicKey?: ElectronicKey;

  constructor(data?: PartialMessage<CreateElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.CreateElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "electronic_key_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "electronic_key", kind: "message", T: ElectronicKey },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateElectronicKeyRequest {
    return new CreateElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateElectronicKeyRequest {
    return new CreateElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateElectronicKeyRequest {
    return new CreateElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateElectronicKeyRequest | PlainMessage<CreateElectronicKeyRequest> | undefined, b: CreateElectronicKeyRequest | PlainMessage<CreateElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(CreateElectronicKeyRequest, a, b);
  }
}

/**
 * The request message for [GetElectronicKey][salto.nebula.electronickey.v1.ElectronicKeyService.GetElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.GetElectronicKeyRequest
 */
export class GetElectronicKeyRequest extends Message<GetElectronicKeyRequest> {
  /**
   * The name of the requested electronic key resource. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.GetElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetElectronicKeyRequest {
    return new GetElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetElectronicKeyRequest {
    return new GetElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetElectronicKeyRequest {
    return new GetElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetElectronicKeyRequest | PlainMessage<GetElectronicKeyRequest> | undefined, b: GetElectronicKeyRequest | PlainMessage<GetElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(GetElectronicKeyRequest, a, b);
  }
}

/**
 * The request message for [ListElectronicKeys][salto.nebula.electronickey.v1.ElectronicKeyService.ListElectronicKeys]
 *
 * @generated from message salto.nebula.electronickey.v1.ListElectronicKeysRequest
 */
export class ListElectronicKeysRequest extends Message<ListElectronicKeysRequest> {
  /**
   * The parent resource name. For example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which electronic keys to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListElectronicKeysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ListElectronicKeysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListElectronicKeysRequest {
    return new ListElectronicKeysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListElectronicKeysRequest {
    return new ListElectronicKeysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListElectronicKeysRequest {
    return new ListElectronicKeysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListElectronicKeysRequest | PlainMessage<ListElectronicKeysRequest> | undefined, b: ListElectronicKeysRequest | PlainMessage<ListElectronicKeysRequest> | undefined): boolean {
    return proto3.util.equals(ListElectronicKeysRequest, a, b);
  }
}

/**
 * The response message for [ListElectronicKeys][salto.nebula.electronickey.v1.ElectronicKeyService.ListElectronicKeys]
 *
 * @generated from message salto.nebula.electronickey.v1.ListElectronicKeysResponse
 */
export class ListElectronicKeysResponse extends Message<ListElectronicKeysResponse> {
  /**
   * The field name should match the noun `electronic_keys` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.electronickey.v1.ElectronicKey electronic_keys = 1;
   */
  electronicKeys: ElectronicKey[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListElectronicKeysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ListElectronicKeysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "electronic_keys", kind: "message", T: ElectronicKey, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListElectronicKeysResponse {
    return new ListElectronicKeysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListElectronicKeysResponse {
    return new ListElectronicKeysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListElectronicKeysResponse {
    return new ListElectronicKeysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListElectronicKeysResponse | PlainMessage<ListElectronicKeysResponse> | undefined, b: ListElectronicKeysResponse | PlainMessage<ListElectronicKeysResponse> | undefined): boolean {
    return proto3.util.equals(ListElectronicKeysResponse, a, b);
  }
}

/**
 * The request message for [UpdateElectronicKey][salto.nebula.electronickey.v1.ElectronicKeyService.UpdateElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.UpdateElectronicKeyRequest
 */
export class UpdateElectronicKeyRequest extends Message<UpdateElectronicKeyRequest> {
  /**
   * The electronic key resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.electronickey.v1.ElectronicKey electronic_key = 1;
   */
  electronicKey?: ElectronicKey;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.UpdateElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "electronic_key", kind: "message", T: ElectronicKey },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateElectronicKeyRequest {
    return new UpdateElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateElectronicKeyRequest {
    return new UpdateElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateElectronicKeyRequest {
    return new UpdateElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateElectronicKeyRequest | PlainMessage<UpdateElectronicKeyRequest> | undefined, b: UpdateElectronicKeyRequest | PlainMessage<UpdateElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(UpdateElectronicKeyRequest, a, b);
  }
}

/**
 * The request message for [DeleteElectronicKey][salto.nebula.electronickey.v1.ElectronicKeyService.DeleteElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.DeleteElectronicKeyRequest
 */
export class DeleteElectronicKeyRequest extends Message<DeleteElectronicKeyRequest> {
  /**
   * The resource name of the electronic key to be deleted. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.DeleteElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteElectronicKeyRequest {
    return new DeleteElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteElectronicKeyRequest {
    return new DeleteElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteElectronicKeyRequest {
    return new DeleteElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteElectronicKeyRequest | PlainMessage<DeleteElectronicKeyRequest> | undefined, b: DeleteElectronicKeyRequest | PlainMessage<DeleteElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(DeleteElectronicKeyRequest, a, b);
  }
}

/**
 * The request message for [`BindElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.BindElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.BindElectronicKeyRequest
 */
export class BindElectronicKeyRequest extends Message<BindElectronicKeyRequest> {
  /**
   * The resource name of the electronic key to be bound. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic keys and so on.
   *
   * @generated from field: string device_id = 2;
   */
  deviceId = "";

  constructor(data?: PartialMessage<BindElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.BindElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindElectronicKeyRequest {
    return new BindElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindElectronicKeyRequest {
    return new BindElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindElectronicKeyRequest {
    return new BindElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BindElectronicKeyRequest | PlainMessage<BindElectronicKeyRequest> | undefined, b: BindElectronicKeyRequest | PlainMessage<BindElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(BindElectronicKeyRequest, a, b);
  }
}

/**
 * The empty response message for [`BindElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.BindElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.BindElectronicKeyResponse
 */
export class BindElectronicKeyResponse extends Message<BindElectronicKeyResponse> {
  constructor(data?: PartialMessage<BindElectronicKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.BindElectronicKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindElectronicKeyResponse {
    return new BindElectronicKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindElectronicKeyResponse {
    return new BindElectronicKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindElectronicKeyResponse {
    return new BindElectronicKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BindElectronicKeyResponse | PlainMessage<BindElectronicKeyResponse> | undefined, b: BindElectronicKeyResponse | PlainMessage<BindElectronicKeyResponse> | undefined): boolean {
    return proto3.util.equals(BindElectronicKeyResponse, a, b);
  }
}

/**
 * The request message for [`UnbindElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.UnbindElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.UnbindElectronicKeyRequest
 */
export class UnbindElectronicKeyRequest extends Message<UnbindElectronicKeyRequest> {
  /**
   * The resource name of the electronic key to be unbound. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * If set to true, the device identifier is removed (unbound) from the
   * electronic key. Otherwise, the request will only work if the electronic
   * key isn't bound to any previous device identifier.
   *
   * @generated from field: bool force = 2;
   */
  force = false;

  constructor(data?: PartialMessage<UnbindElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.UnbindElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindElectronicKeyRequest {
    return new UnbindElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindElectronicKeyRequest {
    return new UnbindElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindElectronicKeyRequest {
    return new UnbindElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindElectronicKeyRequest | PlainMessage<UnbindElectronicKeyRequest> | undefined, b: UnbindElectronicKeyRequest | PlainMessage<UnbindElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(UnbindElectronicKeyRequest, a, b);
  }
}

/**
 * The empty response message for [`UnbindElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.UnbindElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.UnbindElectronicKeyResponse
 */
export class UnbindElectronicKeyResponse extends Message<UnbindElectronicKeyResponse> {
  constructor(data?: PartialMessage<UnbindElectronicKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.UnbindElectronicKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindElectronicKeyResponse {
    return new UnbindElectronicKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindElectronicKeyResponse {
    return new UnbindElectronicKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindElectronicKeyResponse {
    return new UnbindElectronicKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindElectronicKeyResponse | PlainMessage<UnbindElectronicKeyResponse> | undefined, b: UnbindElectronicKeyResponse | PlainMessage<UnbindElectronicKeyResponse> | undefined): boolean {
    return proto3.util.equals(UnbindElectronicKeyResponse, a, b);
  }
}

/**
 * The request message for [`InitializeElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.InitializeElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.InitializeElectronicKeyRequest
 */
export class InitializeElectronicKeyRequest extends Message<InitializeElectronicKeyRequest> {
  /**
   * The resource name of the electronic key to be initialized. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<InitializeElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.InitializeElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeElectronicKeyRequest {
    return new InitializeElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeElectronicKeyRequest {
    return new InitializeElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeElectronicKeyRequest {
    return new InitializeElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeElectronicKeyRequest | PlainMessage<InitializeElectronicKeyRequest> | undefined, b: InitializeElectronicKeyRequest | PlainMessage<InitializeElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(InitializeElectronicKeyRequest, a, b);
  }
}

/**
 * The empty response message for [`InitializeElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.InitializeElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.InitializeElectronicKeyResponse
 */
export class InitializeElectronicKeyResponse extends Message<InitializeElectronicKeyResponse> {
  constructor(data?: PartialMessage<InitializeElectronicKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.InitializeElectronicKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeElectronicKeyResponse {
    return new InitializeElectronicKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeElectronicKeyResponse {
    return new InitializeElectronicKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeElectronicKeyResponse {
    return new InitializeElectronicKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeElectronicKeyResponse | PlainMessage<InitializeElectronicKeyResponse> | undefined, b: InitializeElectronicKeyResponse | PlainMessage<InitializeElectronicKeyResponse> | undefined): boolean {
    return proto3.util.equals(InitializeElectronicKeyResponse, a, b);
  }
}

/**
 * The metadata message for [`InitializeElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.InitializeElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.InitializeElectronicKeyMetadata
 */
export class InitializeElectronicKeyMetadata extends Message<InitializeElectronicKeyMetadata> {
  constructor(data?: PartialMessage<InitializeElectronicKeyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.InitializeElectronicKeyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeElectronicKeyMetadata {
    return new InitializeElectronicKeyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeElectronicKeyMetadata {
    return new InitializeElectronicKeyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeElectronicKeyMetadata {
    return new InitializeElectronicKeyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeElectronicKeyMetadata | PlainMessage<InitializeElectronicKeyMetadata> | undefined, b: InitializeElectronicKeyMetadata | PlainMessage<InitializeElectronicKeyMetadata> | undefined): boolean {
    return proto3.util.equals(InitializeElectronicKeyMetadata, a, b);
  }
}

/**
 * The request message for [`ConfigureElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.ConfigureElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.ConfigureElectronicKeyRequest
 */
export class ConfigureElectronicKeyRequest extends Message<ConfigureElectronicKeyRequest> {
  /**
   * The resource name of the electronic key to be configured. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ConfigureElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ConfigureElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureElectronicKeyRequest {
    return new ConfigureElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureElectronicKeyRequest {
    return new ConfigureElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureElectronicKeyRequest {
    return new ConfigureElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureElectronicKeyRequest | PlainMessage<ConfigureElectronicKeyRequest> | undefined, b: ConfigureElectronicKeyRequest | PlainMessage<ConfigureElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(ConfigureElectronicKeyRequest, a, b);
  }
}

/**
 * The empty response message for [`ConfigureElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.ConfigureElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.ConfigureElectronicKeyResponse
 */
export class ConfigureElectronicKeyResponse extends Message<ConfigureElectronicKeyResponse> {
  constructor(data?: PartialMessage<ConfigureElectronicKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ConfigureElectronicKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureElectronicKeyResponse {
    return new ConfigureElectronicKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureElectronicKeyResponse {
    return new ConfigureElectronicKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureElectronicKeyResponse {
    return new ConfigureElectronicKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureElectronicKeyResponse | PlainMessage<ConfigureElectronicKeyResponse> | undefined, b: ConfigureElectronicKeyResponse | PlainMessage<ConfigureElectronicKeyResponse> | undefined): boolean {
    return proto3.util.equals(ConfigureElectronicKeyResponse, a, b);
  }
}

/**
 * The metadata message for [`ConfigureElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.ConfigureElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.ConfigureElectronicKeyMetadata
 */
export class ConfigureElectronicKeyMetadata extends Message<ConfigureElectronicKeyMetadata> {
  constructor(data?: PartialMessage<ConfigureElectronicKeyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ConfigureElectronicKeyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureElectronicKeyMetadata {
    return new ConfigureElectronicKeyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureElectronicKeyMetadata {
    return new ConfigureElectronicKeyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureElectronicKeyMetadata {
    return new ConfigureElectronicKeyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureElectronicKeyMetadata | PlainMessage<ConfigureElectronicKeyMetadata> | undefined, b: ConfigureElectronicKeyMetadata | PlainMessage<ConfigureElectronicKeyMetadata> | undefined): boolean {
    return proto3.util.equals(ConfigureElectronicKeyMetadata, a, b);
  }
}

/**
 * The request message for [`ResetElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.ResetElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.ResetElectronicKeyRequest
 */
export class ResetElectronicKeyRequest extends Message<ResetElectronicKeyRequest> {
  /**
   * The resource name of the electronic key to be reset. For example:
   * `installations/surelock-homes-hq/electronic-keys/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ResetElectronicKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ResetElectronicKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetElectronicKeyRequest {
    return new ResetElectronicKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetElectronicKeyRequest {
    return new ResetElectronicKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetElectronicKeyRequest {
    return new ResetElectronicKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetElectronicKeyRequest | PlainMessage<ResetElectronicKeyRequest> | undefined, b: ResetElectronicKeyRequest | PlainMessage<ResetElectronicKeyRequest> | undefined): boolean {
    return proto3.util.equals(ResetElectronicKeyRequest, a, b);
  }
}

/**
 * The empty response message for [`ResetElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.ResetElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.ResetElectronicKeyResponse
 */
export class ResetElectronicKeyResponse extends Message<ResetElectronicKeyResponse> {
  constructor(data?: PartialMessage<ResetElectronicKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ResetElectronicKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetElectronicKeyResponse {
    return new ResetElectronicKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetElectronicKeyResponse {
    return new ResetElectronicKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetElectronicKeyResponse {
    return new ResetElectronicKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetElectronicKeyResponse | PlainMessage<ResetElectronicKeyResponse> | undefined, b: ResetElectronicKeyResponse | PlainMessage<ResetElectronicKeyResponse> | undefined): boolean {
    return proto3.util.equals(ResetElectronicKeyResponse, a, b);
  }
}

/**
 * The metadata message for [`ResetElectronicKey`][salto.nebula.electronickey.v1.ElectronicKeyService.ResetElectronicKey]
 *
 * @generated from message salto.nebula.electronickey.v1.ResetElectronicKeyMetadata
 */
export class ResetElectronicKeyMetadata extends Message<ResetElectronicKeyMetadata> {
  constructor(data?: PartialMessage<ResetElectronicKeyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.ResetElectronicKeyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetElectronicKeyMetadata {
    return new ResetElectronicKeyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetElectronicKeyMetadata {
    return new ResetElectronicKeyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetElectronicKeyMetadata {
    return new ResetElectronicKeyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ResetElectronicKeyMetadata | PlainMessage<ResetElectronicKeyMetadata> | undefined, b: ResetElectronicKeyMetadata | PlainMessage<ResetElectronicKeyMetadata> | undefined): boolean {
    return proto3.util.equals(ResetElectronicKeyMetadata, a, b);
  }
}

/**
 * The request message for [`GenerateAuthorizationToken`][salto.nebula.electronickey.v1.ElectronicKeyService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.electronickey.v1.GenerateAuthorizationTokenRequest
 */
export class GenerateAuthorizationTokenRequest extends Message<GenerateAuthorizationTokenRequest> {
  /**
   * The resource name of the electronic key that the authorization token is
   * generated for. For example:
   * `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string electronic_key = 1;
   */
  electronicKey = "";

  constructor(data?: PartialMessage<GenerateAuthorizationTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.GenerateAuthorizationTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "electronic_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthorizationTokenRequest | PlainMessage<GenerateAuthorizationTokenRequest> | undefined, b: GenerateAuthorizationTokenRequest | PlainMessage<GenerateAuthorizationTokenRequest> | undefined): boolean {
    return proto3.util.equals(GenerateAuthorizationTokenRequest, a, b);
  }
}

/**
 * The response message for [`GenerateAuthorizationToken`][salto.nebula.electronickey.v1.ElectronicKeyService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.electronickey.v1.GenerateAuthorizationTokenResponse
 */
export class GenerateAuthorizationTokenResponse extends Message<GenerateAuthorizationTokenResponse> {
  /**
   * Authorization token to be used for connecting to an electronic key.
   *
   * @generated from field: bytes authorization_token = 1;
   */
  authorizationToken = new Uint8Array(0);

  constructor(data?: PartialMessage<GenerateAuthorizationTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.GenerateAuthorizationTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authorization_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthorizationTokenResponse | PlainMessage<GenerateAuthorizationTokenResponse> | undefined, b: GenerateAuthorizationTokenResponse | PlainMessage<GenerateAuthorizationTokenResponse> | undefined): boolean {
    return proto3.util.equals(GenerateAuthorizationTokenResponse, a, b);
  }
}

/**
 * The request message for [`GenerateFirmwareDownloadUri`][salto.nebula.electronickey.v1.ElectronicKeyService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.electronickey.v1.GenerateFirmwareDownloadUriRequest
 */
export class GenerateFirmwareDownloadUriRequest extends Message<GenerateFirmwareDownloadUriRequest> {
  /**
   * The resource name of the electronickey to get the firmware download URI.
   * For example: `installations/surelock-homes-hq/electronic-keys/main-key`.
   *
   * @generated from field: string electronic_key = 1;
   */
  electronicKey = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.GenerateFirmwareDownloadUriRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "electronic_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined, b: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriRequest, a, b);
  }
}

/**
 * The response message for [`GenerateFirmwareDownloadUri`][salto.nebula.electronickey.v1.ElectronicKeyService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.electronickey.v1.GenerateFirmwareDownloadUriResponse
 */
export class GenerateFirmwareDownloadUriResponse extends Message<GenerateFirmwareDownloadUriResponse> {
  /**
   * The URI to download the firmware bundle. The URI will be valid for 15
   * minutes.
   *
   * @generated from field: string download_uri = 1;
   */
  downloadUri = "";

  /**
   * Digest of the file to be download. This can be used to cache the file and
   * avoid downloading it multiple times.
   * The digest has the following format: `<algorithm>:<digest>`.
   * For example: `sha256:8ff2483f2fbaa6c8dfd4e3556dbde298eb5e342b5e46f84eabdccc8e1cbe2d5a`.
   *
   * @generated from field: string digest = 2;
   */
  digest = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.GenerateFirmwareDownloadUriResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "digest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined, b: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriResponse, a, b);
  }
}

/**
 * The metadata message for [`GenerateFirmwareDownloadUri`][salto.nebula.electronickey.v1.ElectronicKeyService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.electronickey.v1.GenerateFirmwareDownloadUriMetadata
 */
export class GenerateFirmwareDownloadUriMetadata extends Message<GenerateFirmwareDownloadUriMetadata> {
  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.electronickey.v1.GenerateFirmwareDownloadUriMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined, b: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriMetadata, a, b);
  }
}

