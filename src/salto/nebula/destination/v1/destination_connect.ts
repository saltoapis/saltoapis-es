// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/destination/v1/destination.proto (package salto.nebula.destination.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BatchGetDestinationsRequest, BatchGetDestinationsResponse, CreateDestinationRequest, DeleteDestinationRequest, Destination, GetDestinationRequest, ListDestinationsRequest, ListDestinationsResponse, UpdateDestinationRequest } from "./destination_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * DestinationService is the service responsible for managing destination resources.
 * Destinations refer to feature where a controller with multiple relays can activate
 * different outputs based on keys and schedules. The primary use case is elevator control,
 * where presenting a credential at a reader would activate only the buttons for floors
 * the user has access to.
 *
 * @generated from service salto.nebula.destination.v1.DestinationService
 */
export const DestinationService = {
  typeName: "salto.nebula.destination.v1.DestinationService",
  methods: {
    /**
     * Create a destination
     *
     * Creates a new destination.
     *
     * @generated from rpc salto.nebula.destination.v1.DestinationService.CreateDestination
     */
    createDestination: {
      name: "CreateDestination",
      I: CreateDestinationRequest,
      O: Destination,
      kind: MethodKind.Unary,
    },
    /**
     * Get an existing destination
     *
     * Retrieves an existing destination.
     *
     * @generated from rpc salto.nebula.destination.v1.DestinationService.GetDestination
     */
    getDestination: {
      name: "GetDestination",
      I: GetDestinationRequest,
      O: Destination,
      kind: MethodKind.Unary,
    },
    /**
     * Get a batch of destinations
     *
     * Retrieves a batch of existing destinations.
     *
     * @generated from rpc salto.nebula.destination.v1.DestinationService.BatchGetDestinations
     */
    batchGetDestinations: {
      name: "BatchGetDestinations",
      I: BatchGetDestinationsRequest,
      O: BatchGetDestinationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update an existing destination
     *
     * Updates an existing destination.
     *
     * @generated from rpc salto.nebula.destination.v1.DestinationService.UpdateDestination
     */
    updateDestination: {
      name: "UpdateDestination",
      I: UpdateDestinationRequest,
      O: Destination,
      kind: MethodKind.Unary,
    },
    /**
     * List destinations
     *
     * Returns a list of destinations that have been previously created.
     *
     * @generated from rpc salto.nebula.destination.v1.DestinationService.ListDestinations
     */
    listDestinations: {
      name: "ListDestinations",
      I: ListDestinationsRequest,
      O: ListDestinationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a destination
     *
     * Permanently deletes a destination. This cannot be undone.
     *
     * @generated from rpc salto.nebula.destination.v1.DestinationService.DeleteDestination
     */
    deleteDestination: {
      name: "DeleteDestination",
      I: DeleteDestinationRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

