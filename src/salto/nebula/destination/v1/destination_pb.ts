// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/destination/v1/destination.proto (package salto.nebula.destination.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";

/**
 * Representation of a destination resource inside the API
 *
 * @generated from message salto.nebula.destination.v1.Destination
 */
export class Destination extends Message<Destination> {
  /**
   * Resource name of the destination. It must have the format
   * `installations/*\/destinations/*`, for example:
   * `installations/surelock-homes-hq/destinations/floor1`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  constructor(data?: PartialMessage<Destination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.Destination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Destination {
    return new Destination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Destination {
    return new Destination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Destination {
    return new Destination().fromJsonString(jsonString, options);
  }

  static equals(a: Destination | PlainMessage<Destination> | undefined, b: Destination | PlainMessage<Destination> | undefined): boolean {
    return proto3.util.equals(Destination, a, b);
  }
}

/**
 * The request message for [`CreateDestination`][salto.nebula.destination.v1.DestinationService.CreateDestination]
 *
 * @generated from message salto.nebula.destination.v1.CreateDestinationRequest
 */
export class CreateDestinationRequest extends Message<CreateDestinationRequest> {
  /**
   * Resource name of the parent resource under which the destination is created. For
   * example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The destination id to use for this destination. If it's empty the server will
   * autogenerate a unique identifier.
   *
   * @generated from field: optional string destination_id = 2;
   */
  destinationId?: string;

  /**
   * The destination resource to be created. Client must not set the `Destination.name`
   * field.
   *
   * @generated from field: salto.nebula.destination.v1.Destination destination = 3;
   */
  destination?: Destination;

  constructor(data?: PartialMessage<CreateDestinationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.CreateDestinationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "destination_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "destination", kind: "message", T: Destination },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDestinationRequest {
    return new CreateDestinationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDestinationRequest {
    return new CreateDestinationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDestinationRequest {
    return new CreateDestinationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDestinationRequest | PlainMessage<CreateDestinationRequest> | undefined, b: CreateDestinationRequest | PlainMessage<CreateDestinationRequest> | undefined): boolean {
    return proto3.util.equals(CreateDestinationRequest, a, b);
  }
}

/**
 * The request message for [`GetDestination`][salto.nebula.destination.v1.DestinationService.GetDestination]
 *
 * @generated from message salto.nebula.destination.v1.GetDestinationRequest
 */
export class GetDestinationRequest extends Message<GetDestinationRequest> {
  /**
   * The name of the requested destination resource. For example:
   * `installations/surelock-homes-hq/destinations/floor1`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetDestinationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.GetDestinationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDestinationRequest {
    return new GetDestinationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDestinationRequest {
    return new GetDestinationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDestinationRequest {
    return new GetDestinationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDestinationRequest | PlainMessage<GetDestinationRequest> | undefined, b: GetDestinationRequest | PlainMessage<GetDestinationRequest> | undefined): boolean {
    return proto3.util.equals(GetDestinationRequest, a, b);
  }
}

/**
 * The request message for [`UpdateDestination`][salto.nebula.destination.v1.DestinationService.UpdateDestination]
 *
 * @generated from message salto.nebula.destination.v1.UpdateDestinationRequest
 */
export class UpdateDestinationRequest extends Message<UpdateDestinationRequest> {
  /**
   * The destination resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.destination.v1.Destination destination = 1;
   */
  destination?: Destination;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateDestinationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.UpdateDestinationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destination", kind: "message", T: Destination },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDestinationRequest {
    return new UpdateDestinationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDestinationRequest {
    return new UpdateDestinationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDestinationRequest {
    return new UpdateDestinationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDestinationRequest | PlainMessage<UpdateDestinationRequest> | undefined, b: UpdateDestinationRequest | PlainMessage<UpdateDestinationRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDestinationRequest, a, b);
  }
}

/**
 * The request message for [`ListDestinations`][salto.nebula.destination.v1.DestinationService.ListDestinations]
 *
 * @generated from message salto.nebula.destination.v1.ListDestinationsRequest
 */
export class ListDestinationsRequest extends Message<ListDestinationsRequest> {
  /**
   * The parent resource name, for example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which destinations to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListDestinationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.ListDestinationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDestinationsRequest {
    return new ListDestinationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDestinationsRequest {
    return new ListDestinationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDestinationsRequest {
    return new ListDestinationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListDestinationsRequest | PlainMessage<ListDestinationsRequest> | undefined, b: ListDestinationsRequest | PlainMessage<ListDestinationsRequest> | undefined): boolean {
    return proto3.util.equals(ListDestinationsRequest, a, b);
  }
}

/**
 * The response message for [`ListDestinations`][salto.nebula.destination.v1.DestinationService.ListDestinations]
 *
 * @generated from message salto.nebula.destination.v1.ListDestinationsResponse
 */
export class ListDestinationsResponse extends Message<ListDestinationsResponse> {
  /**
   * The field name should match the noun `destinations` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.destination.v1.Destination destinations = 1;
   */
  destinations: Destination[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListDestinationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.ListDestinationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destinations", kind: "message", T: Destination, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDestinationsResponse {
    return new ListDestinationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDestinationsResponse {
    return new ListDestinationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDestinationsResponse {
    return new ListDestinationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDestinationsResponse | PlainMessage<ListDestinationsResponse> | undefined, b: ListDestinationsResponse | PlainMessage<ListDestinationsResponse> | undefined): boolean {
    return proto3.util.equals(ListDestinationsResponse, a, b);
  }
}

/**
 * The request message for [`DeleteDestination`][salto.nebula.destination.v1.DestinationService.DeleteDestination]
 *
 * @generated from message salto.nebula.destination.v1.DeleteDestinationRequest
 */
export class DeleteDestinationRequest extends Message<DeleteDestinationRequest> {
  /**
   * The resource name of the destination to be deleted, for example:
   * `installations/surelock-homes-hq/destinations/floor1`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteDestinationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.destination.v1.DeleteDestinationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDestinationRequest {
    return new DeleteDestinationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDestinationRequest {
    return new DeleteDestinationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDestinationRequest {
    return new DeleteDestinationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteDestinationRequest | PlainMessage<DeleteDestinationRequest> | undefined, b: DeleteDestinationRequest | PlainMessage<DeleteDestinationRequest> | undefined): boolean {
    return proto3.util.equals(DeleteDestinationRequest, a, b);
  }
}

