// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/electroniclock/v1/electronic_lock.proto (package salto.nebula.electroniclock.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { OperationSchema } from "@saltoapis/longrunning-v1";
import { file_salto_longrunning_v1_operation } from "@saltoapis/longrunning-v1";
import type { DeviceMetadata } from "@saltoapis/nebula-type";
import { file_salto_nebula_type_device_metadata } from "@saltoapis/nebula-type";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file salto/nebula/electroniclock/v1/electronic_lock.proto.
 */
export const file_salto_nebula_electroniclock_v1_electronic_lock: GenFile = /*@__PURE__*/
  fileDesc("CjRzYWx0by9uZWJ1bGEvZWxlY3Ryb25pY2xvY2svdjEvZWxlY3Ryb25pY19sb2NrLnByb3RvEh5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEi3AQKDkVsZWN0cm9uaWNMb2NrEgwKBG5hbWUYASABKAkSFAoMZGlzcGxheV9uYW1lGAIgASgJEhYKCWRldmljZV9pZBgDIAEoCUgBiAEBEhEKB2dhdGV3YXkYBCABKAlIABISCghleHRlbmRlchgFIAEoCUgAEhQKDGFjY2Vzc19wb2ludBgGIAEoCRITCgtpbml0aWFsaXplZBgHIAEoCBI6Cg9kZXZpY2VfbWV0YWRhdGEYDyABKAsyIS5zYWx0by5uZWJ1bGEudHlwZS5EZXZpY2VNZXRhZGF0YRIQCghvdXRkYXRlZBgIIAEoCBIWCgljb25uZWN0ZWQYCSABKAhIAogBARITCgtsb3dfYmF0dGVyeRgKIAEoCBIzCg9sYXN0X2V2ZW50X3RpbWUYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiEKFGNhbGlicmF0aW9uX3NldHRpbmdzGAwgASgMSAOIAQESJgoZZm9yY2Vfcm90YXRlX2NhcnJpYWdlX2VuZBgNIAEoCEgEiAEBEkAKGGhvbGRfYmFja19sYXRjaF9kdXJhdGlvbhgOIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgFiAEBQg8KDXBhcmVudF9kZXZpY2VCDAoKX2RldmljZV9pZEIMCgpfY29ubmVjdGVkQhcKFV9jYWxpYnJhdGlvbl9zZXR0aW5nc0IcChpfZm9yY2Vfcm90YXRlX2NhcnJpYWdlX2VuZEIbChlfaG9sZF9iYWNrX2xhdGNoX2R1cmF0aW9uIq4BChtDcmVhdGVFbGVjdHJvbmljTG9ja1JlcXVlc3QSDgoGcGFyZW50GAEgASgJEh8KEmVsZWN0cm9uaWNfbG9ja19pZBgCIAEoCUgAiAEBEkcKD2VsZWN0cm9uaWNfbG9jaxgDIAEoCzIuLnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5FbGVjdHJvbmljTG9ja0IVChNfZWxlY3Ryb25pY19sb2NrX2lkIigKGEdldEVsZWN0cm9uaWNMb2NrUmVxdWVzdBIMCgRuYW1lGAEgASgJInUKGkxpc3RFbGVjdHJvbmljTG9ja3NSZXF1ZXN0Eg4KBnBhcmVudBgBIAEoCRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRIOCgZmaWx0ZXIYBCABKAkSEAoIb3JkZXJfYnkYBSABKAkigAEKG0xpc3RFbGVjdHJvbmljTG9ja3NSZXNwb25zZRJIChBlbGVjdHJvbmljX2xvY2tzGAEgAygLMi4uc2FsdG8ubmVidWxhLmVsZWN0cm9uaWNsb2NrLnYxLkVsZWN0cm9uaWNMb2NrEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKXAQobVXBkYXRlRWxlY3Ryb25pY0xvY2tSZXF1ZXN0EkcKD2VsZWN0cm9uaWNfbG9jaxgBIAEoCzIuLnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5FbGVjdHJvbmljTG9jaxIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siKwobRGVsZXRlRWxlY3Ryb25pY0xvY2tSZXF1ZXN0EgwKBG5hbWUYASABKAkiPAoZQmluZEVsZWN0cm9uaWNMb2NrUmVxdWVzdBIMCgRuYW1lGAEgASgJEhEKCWRldmljZV9pZBgCIAEoCSIcChpCaW5kRWxlY3Ryb25pY0xvY2tSZXNwb25zZSI6ChtVbmJpbmRFbGVjdHJvbmljTG9ja1JlcXVlc3QSDAoEbmFtZRgBIAEoCRINCgVmb3JjZRgCIAEoCCIeChxVbmJpbmRFbGVjdHJvbmljTG9ja1Jlc3BvbnNlIi8KH0luaXRpYWxpemVFbGVjdHJvbmljTG9ja1JlcXVlc3QSDAoEbmFtZRgBIAEoCSIiCiBJbml0aWFsaXplRWxlY3Ryb25pY0xvY2tSZXNwb25zZSI8CiBJbml0aWFsaXplRWxlY3Ryb25pY0xvY2tNZXRhZGF0YRIYChBwcm9ncmVzc19wZXJjZW50GAEgASgFIi4KHkNvbmZpZ3VyZUVsZWN0cm9uaWNMb2NrUmVxdWVzdBIMCgRuYW1lGAEgASgJIiEKH0NvbmZpZ3VyZUVsZWN0cm9uaWNMb2NrUmVzcG9uc2UiIQofQ29uZmlndXJlRWxlY3Ryb25pY0xvY2tNZXRhZGF0YSIqChpSZXNldEVsZWN0cm9uaWNMb2NrUmVxdWVzdBIMCgRuYW1lGAEgASgJIh0KG1Jlc2V0RWxlY3Ryb25pY0xvY2tSZXNwb25zZSIdChtSZXNldEVsZWN0cm9uaWNMb2NrTWV0YWRhdGEiPgojVXBkYXRlRWxlY3Ryb25pY0xvY2tGaXJtd2FyZVJlcXVlc3QSFwoPZWxlY3Ryb25pY19sb2NrGAEgASgJIiYKJFVwZGF0ZUVsZWN0cm9uaWNMb2NrRmlybXdhcmVSZXNwb25zZSJACiRVcGRhdGVFbGVjdHJvbmljTG9ja0Zpcm13YXJlTWV0YWRhdGESGAoQcHJvZ3Jlc3NfcGVyY2VudBgBIAEoBSI8CiFHZW5lcmF0ZUF1dGhvcml6YXRpb25Ub2tlblJlcXVlc3QSFwoPZWxlY3Ryb25pY19sb2NrGAEgASgJIkEKIkdlbmVyYXRlQXV0aG9yaXphdGlvblRva2VuUmVzcG9uc2USGwoTYXV0aG9yaXphdGlvbl90b2tlbhgBIAEoDCI9CiJHZW5lcmF0ZUZpcm13YXJlRG93bmxvYWRVcmlSZXF1ZXN0EhcKD2VsZWN0cm9uaWNfbG9jaxgBIAEoCSJLCiNHZW5lcmF0ZUZpcm13YXJlRG93bmxvYWRVcmlSZXNwb25zZRIUCgxkb3dubG9hZF91cmkYASABKAkSDgoGZGlnZXN0GAIgASgJIiUKI0dlbmVyYXRlRmlybXdhcmVEb3dubG9hZFVyaU1ldGFkYXRhMuINChVFbGVjdHJvbmljTG9ja1NlcnZpY2USgwEKFENyZWF0ZUVsZWN0cm9uaWNMb2NrEjsuc2FsdG8ubmVidWxhLmVsZWN0cm9uaWNsb2NrLnYxLkNyZWF0ZUVsZWN0cm9uaWNMb2NrUmVxdWVzdBouLnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5FbGVjdHJvbmljTG9jaxJ9ChFHZXRFbGVjdHJvbmljTG9jaxI4LnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5HZXRFbGVjdHJvbmljTG9ja1JlcXVlc3QaLi5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuRWxlY3Ryb25pY0xvY2sSjgEKE0xpc3RFbGVjdHJvbmljTG9ja3MSOi5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuTGlzdEVsZWN0cm9uaWNMb2Nrc1JlcXVlc3QaOy5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuTGlzdEVsZWN0cm9uaWNMb2Nrc1Jlc3BvbnNlEoMBChRVcGRhdGVFbGVjdHJvbmljTG9jaxI7LnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5VcGRhdGVFbGVjdHJvbmljTG9ja1JlcXVlc3QaLi5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuRWxlY3Ryb25pY0xvY2sSawoURGVsZXRlRWxlY3Ryb25pY0xvY2sSOy5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuRGVsZXRlRWxlY3Ryb25pY0xvY2tSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EosBChJCaW5kRWxlY3Ryb25pY0xvY2sSOS5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuQmluZEVsZWN0cm9uaWNMb2NrUmVxdWVzdBo6LnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5CaW5kRWxlY3Ryb25pY0xvY2tSZXNwb25zZRKRAQoUVW5iaW5kRWxlY3Ryb25pY0xvY2sSOy5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuVW5iaW5kRWxlY3Ryb25pY0xvY2tSZXF1ZXN0Gjwuc2FsdG8ubmVidWxhLmVsZWN0cm9uaWNsb2NrLnYxLlVuYmluZEVsZWN0cm9uaWNMb2NrUmVzcG9uc2USfAoYSW5pdGlhbGl6ZUVsZWN0cm9uaWNMb2NrEj8uc2FsdG8ubmVidWxhLmVsZWN0cm9uaWNsb2NrLnYxLkluaXRpYWxpemVFbGVjdHJvbmljTG9ja1JlcXVlc3QaHy5zYWx0by5sb25ncnVubmluZy52MS5PcGVyYXRpb24SegoXQ29uZmlndXJlRWxlY3Ryb25pY0xvY2sSPi5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuQ29uZmlndXJlRWxlY3Ryb25pY0xvY2tSZXF1ZXN0Gh8uc2FsdG8ubG9uZ3J1bm5pbmcudjEuT3BlcmF0aW9uEnIKE1Jlc2V0RWxlY3Ryb25pY0xvY2sSOi5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuUmVzZXRFbGVjdHJvbmljTG9ja1JlcXVlc3QaHy5zYWx0by5sb25ncnVubmluZy52MS5PcGVyYXRpb24ShAEKHFVwZGF0ZUVsZWN0cm9uaWNMb2NrRmlybXdhcmUSQy5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuVXBkYXRlRWxlY3Ryb25pY0xvY2tGaXJtd2FyZVJlcXVlc3QaHy5zYWx0by5sb25ncnVubmluZy52MS5PcGVyYXRpb24SowEKGkdlbmVyYXRlQXV0aG9yaXphdGlvblRva2VuEkEuc2FsdG8ubmVidWxhLmVsZWN0cm9uaWNsb2NrLnYxLkdlbmVyYXRlQXV0aG9yaXphdGlvblRva2VuUmVxdWVzdBpCLnNhbHRvLm5lYnVsYS5lbGVjdHJvbmljbG9jay52MS5HZW5lcmF0ZUF1dGhvcml6YXRpb25Ub2tlblJlc3BvbnNlEoIBChtHZW5lcmF0ZUZpcm13YXJlRG93bmxvYWRVcmkSQi5zYWx0by5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjEuR2VuZXJhdGVGaXJtd2FyZURvd25sb2FkVXJpUmVxdWVzdBofLnNhbHRvLmxvbmdydW5uaW5nLnYxLk9wZXJhdGlvbkKOAgomY29tLnNhbHRvYXBpcy5uZWJ1bGEuZWxlY3Ryb25pY2xvY2sudjFCE0VsZWN0cm9uaWNMb2NrUHJvdG9QAVpSZ2l0aHViLmNvbS9zYWx0b2FwaXMtaW50ZXJuYWwvc2FsdG9hcGlzLWdvL25lYnVsYS9lbGVjdHJvbmljbG9jay92MTtlbGVjdHJvbmljbG9ja6oCIlNhbHRvYXBpcy5OZWJ1bGEuRWxlY3Ryb25pY0xvY2suVjHKAiJTYWx0b2FwaXNcTmVidWxhXEVsZWN0cm9uaWNMb2NrXFYx4gIuR1BCTWV0YWRhdGFcU2FsdG9hcGlzXE5lYnVsYVxFbGVjdHJvbmljTG9ja1xWMWIGcHJvdG8z", [file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_salto_longrunning_v1_operation, file_salto_nebula_type_device_metadata]);

/**
 * The electronic lock object
 *
 * @generated from message salto.nebula.electroniclock.v1.ElectronicLock
 */
export type ElectronicLock = Message<"salto.nebula.electroniclock.v1.ElectronicLock"> & {
  /**
   * Output only. Resource name of the electronic lock. It must have the format of
   * `installations/*\/electronic-locks/*`. For example:
   * `installations/surelock-homes-hq/electronic-locks/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Display name of the electronic lock.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: optional string device_id = 3;
   */
  deviceId?: string;

  /**
   * Parent device name, could be a `Gateway` or an `Extender` and takes the
   * form of a relative resource name:
   * `installations/surelock-homes-hq/gateways/conan-doyle` or
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from oneof salto.nebula.electroniclock.v1.ElectronicLock.parent_device
   */
  parentDevice: {
    /**
     * Parent name, when electronic lock is connected to a gateway
     *
     * @generated from field: string gateway = 4;
     */
    value: string;
    case: "gateway";
  } | {
    /**
     * Parent name, when electronic lock is connected to an extender
     *
     * @generated from field: string extender = 5;
     */
    value: string;
    case: "extender";
  } | { case: undefined; value?: undefined };

  /**
   * The access point that the electronic lock gives coverage to.
   *
   * @generated from field: string access_point = 6;
   */
  accessPoint: string;

  /**
   * Indicates whether this electronic lock has been initialized or not. This
   * field cannot be modified using a standard
   * [`UpdateElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLock]
   * operation. To change the value of this field, you must call
   * [`InitializeElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.InitializeElectronicLock].
   *
   * If the value is `false` also applies to the case where the
   * initialization process has been initiated but where it has not finished.
   *
   * @generated from field: bool initialized = 7;
   */
  initialized: boolean;

  /**
   * Device metadata contains information about a device hardware and firmware.
   *
   * @generated from field: salto.nebula.type.DeviceMetadata device_metadata = 15;
   */
  deviceMetadata?: DeviceMetadata;

  /**
   * Indicates whether this electronic lock has pending updates or not. This
   * could be because there was a pending configuration or a firmware update
   * and is conditionally set based on the current installation settings.
   *
   * @generated from field: bool outdated = 8;
   */
  outdated: boolean;

  /**
   * Indicates whether this electronic lock is connected or not. It's
   * considered connected if there has been at least one communication with it
   * within the last 10 minutes. The property is left unset if it is an
   * offline electronic lock.
   *
   * @generated from field: optional bool connected = 9;
   */
  connected?: boolean;

  /**
   * Indicates whether the battery of this electronic lock is low, and needs
   * replacing, or is normal and doesn't need replacing.
   *
   * @generated from field: bool low_battery = 10;
   */
  lowBattery: boolean;

  /**
   * The last time an event was received.
   *
   * @generated from field: google.protobuf.Timestamp last_event_time = 11;
   */
  lastEventTime?: Timestamp;

  /**
   * Calibration settings of an electronic lock. This only applies to
   * electronic locks that must be calibrated once mounted to adapt to the
   * door's specific characteristics. For example, certain motorized
   * electronic locks need to be calibrated so they can learn the different
   * positions of a door.
   *
   * @generated from field: optional bytes calibration_settings = 12;
   */
  calibrationSettings?: Uint8Array;

  /**
   * Indicates whether the electronic lock operates by turning in one
   * direction until it reaches the carriage end, or not.
   * For example, this could apply to electronic locks that are unaware of the
   * carriage's endpoint or those that can lose their position, as seen in
   * double clutch cylinders.
   *
   * @generated from field: optional bool force_rotate_carriage_end = 13;
   */
  forceRotateCarriageEnd?: boolean;

  /**
   * If applicable, the duration the motorized lock's hold-back latch remains
   * engaged before the latch closes.
   *
   * @generated from field: optional google.protobuf.Duration hold_back_latch_duration = 14;
   */
  holdBackLatchDuration?: Duration;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ElectronicLock.
 * Use `create(ElectronicLockSchema)` to create a new message.
 */
export const ElectronicLockSchema: GenMessage<ElectronicLock> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 0);

/**
 * The request message for [CreateElectronicLock][salto.nebula.electroniclock.v1.ElectronicLockService.CreateElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.CreateElectronicLockRequest
 */
export type CreateElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.CreateElectronicLockRequest"> & {
  /**
   * Resource name of the parent resource where to create the electronic lock. For
   * example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The electronic lock ID to use for this electronic lock. In case it's empty the
   * server will autogenerate a unique identifier.
   *
   * @generated from field: optional string electronic_lock_id = 2;
   */
  electronicLockId?: string;

  /**
   * The electronic lock resource to be created. Client must not set the
   * `ElectronicLock.name` field.
   *
   * @generated from field: salto.nebula.electroniclock.v1.ElectronicLock electronic_lock = 3;
   */
  electronicLock?: ElectronicLock;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.CreateElectronicLockRequest.
 * Use `create(CreateElectronicLockRequestSchema)` to create a new message.
 */
export const CreateElectronicLockRequestSchema: GenMessage<CreateElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 1);

/**
 * The request message for [GetElectronicLock][salto.nebula.electroniclock.v1.ElectronicLockService.GetElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.GetElectronicLockRequest
 */
export type GetElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.GetElectronicLockRequest"> & {
  /**
   * The name of the requested electronic lock resource. For example:
   * `installations/surelock-homes-hq/electronic-locks/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.GetElectronicLockRequest.
 * Use `create(GetElectronicLockRequestSchema)` to create a new message.
 */
export const GetElectronicLockRequestSchema: GenMessage<GetElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 2);

/**
 * The request message for [ListElectronicLocks][salto.nebula.electroniclock.v1.ElectronicLockService.ListElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ListElectronicLocksRequest
 */
export type ListElectronicLocksRequest = Message<"salto.nebula.electroniclock.v1.ListElectronicLocksRequest"> & {
  /**
   * The parent resource name. For example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter that chooses which electronic locks to return.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ListElectronicLocksRequest.
 * Use `create(ListElectronicLocksRequestSchema)` to create a new message.
 */
export const ListElectronicLocksRequestSchema: GenMessage<ListElectronicLocksRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 3);

/**
 * The response message for [ListElectronicLocks][salto.nebula.electroniclock.v1.ElectronicLockService.ListElectronicLocks]
 *
 * @generated from message salto.nebula.electroniclock.v1.ListElectronicLocksResponse
 */
export type ListElectronicLocksResponse = Message<"salto.nebula.electroniclock.v1.ListElectronicLocksResponse"> & {
  /**
   * The field name should match the noun `electronic_locks` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.electroniclock.v1.ElectronicLock electronic_locks = 1;
   */
  electronicLocks: ElectronicLock[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ListElectronicLocksResponse.
 * Use `create(ListElectronicLocksResponseSchema)` to create a new message.
 */
export const ListElectronicLocksResponseSchema: GenMessage<ListElectronicLocksResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 4);

/**
 * The request message for [UpdateElectronicLock][salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.UpdateElectronicLockRequest
 */
export type UpdateElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.UpdateElectronicLockRequest"> & {
  /**
   * The electronic lock resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.electroniclock.v1.ElectronicLock electronic_lock = 1;
   */
  electronicLock?: ElectronicLock;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.UpdateElectronicLockRequest.
 * Use `create(UpdateElectronicLockRequestSchema)` to create a new message.
 */
export const UpdateElectronicLockRequestSchema: GenMessage<UpdateElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 5);

/**
 * The request message for [DeleteElectronicLock][salto.nebula.electroniclock.v1.ElectronicLockService.DeleteElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.DeleteElectronicLockRequest
 */
export type DeleteElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.DeleteElectronicLockRequest"> & {
  /**
   * The resource name of the electronic lock to be deleted. For example:
   * `installations/surelock-homes-hq/electronic-locks/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.DeleteElectronicLockRequest.
 * Use `create(DeleteElectronicLockRequestSchema)` to create a new message.
 */
export const DeleteElectronicLockRequestSchema: GenMessage<DeleteElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 6);

/**
 * The request message for [`BindElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.BindElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.BindElectronicLockRequest
 */
export type BindElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.BindElectronicLockRequest"> & {
  /**
   * The resource name of the electronic lock to be bound. For example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: string device_id = 2;
   */
  deviceId: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.BindElectronicLockRequest.
 * Use `create(BindElectronicLockRequestSchema)` to create a new message.
 */
export const BindElectronicLockRequestSchema: GenMessage<BindElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 7);

/**
 * The empty response message for [`BindElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.BindElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.BindElectronicLockResponse
 */
export type BindElectronicLockResponse = Message<"salto.nebula.electroniclock.v1.BindElectronicLockResponse"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.BindElectronicLockResponse.
 * Use `create(BindElectronicLockResponseSchema)` to create a new message.
 */
export const BindElectronicLockResponseSchema: GenMessage<BindElectronicLockResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 8);

/**
 * The request message for [`UnbindElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.UnbindElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.UnbindElectronicLockRequest
 */
export type UnbindElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.UnbindElectronicLockRequest"> & {
  /**
   * The resource name of the electronic lock to be bound. For example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set to true, the device identifier is removed (unbound) from the
   * electronic lock. Otherwise, the request will only work if the electronic
   * lock isn't bound to any previous device identifier.
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.UnbindElectronicLockRequest.
 * Use `create(UnbindElectronicLockRequestSchema)` to create a new message.
 */
export const UnbindElectronicLockRequestSchema: GenMessage<UnbindElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 9);

/**
 * The empty response message for [`UnbindElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.UnbindElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.UnbindElectronicLockResponse
 */
export type UnbindElectronicLockResponse = Message<"salto.nebula.electroniclock.v1.UnbindElectronicLockResponse"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.UnbindElectronicLockResponse.
 * Use `create(UnbindElectronicLockResponseSchema)` to create a new message.
 */
export const UnbindElectronicLockResponseSchema: GenMessage<UnbindElectronicLockResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 10);

/**
 * The request message for [`InitializeElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.InitializeElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.InitializeElectronicLockRequest
 */
export type InitializeElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.InitializeElectronicLockRequest"> & {
  /**
   * The resource name of the electronic lock to be initialized. For example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.InitializeElectronicLockRequest.
 * Use `create(InitializeElectronicLockRequestSchema)` to create a new message.
 */
export const InitializeElectronicLockRequestSchema: GenMessage<InitializeElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 11);

/**
 * The empty response message for [`InitializeElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.InitializeElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.InitializeElectronicLockResponse
 */
export type InitializeElectronicLockResponse = Message<"salto.nebula.electroniclock.v1.InitializeElectronicLockResponse"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.InitializeElectronicLockResponse.
 * Use `create(InitializeElectronicLockResponseSchema)` to create a new message.
 */
export const InitializeElectronicLockResponseSchema: GenMessage<InitializeElectronicLockResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 12);

/**
 * @generated from message salto.nebula.electroniclock.v1.InitializeElectronicLockMetadata
 */
export type InitializeElectronicLockMetadata = Message<"salto.nebula.electroniclock.v1.InitializeElectronicLockMetadata"> & {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent: number;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.InitializeElectronicLockMetadata.
 * Use `create(InitializeElectronicLockMetadataSchema)` to create a new message.
 */
export const InitializeElectronicLockMetadataSchema: GenMessage<InitializeElectronicLockMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 13);

/**
 * The request message for [`ConfigureElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.ConfigureElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ConfigureElectronicLockRequest
 */
export type ConfigureElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.ConfigureElectronicLockRequest"> & {
  /**
   * The resource name of the electronic lock to be configured. For example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ConfigureElectronicLockRequest.
 * Use `create(ConfigureElectronicLockRequestSchema)` to create a new message.
 */
export const ConfigureElectronicLockRequestSchema: GenMessage<ConfigureElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 14);

/**
 * The empty response message for [`ConfigureElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.ConfigureElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ConfigureElectronicLockResponse
 */
export type ConfigureElectronicLockResponse = Message<"salto.nebula.electroniclock.v1.ConfigureElectronicLockResponse"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ConfigureElectronicLockResponse.
 * Use `create(ConfigureElectronicLockResponseSchema)` to create a new message.
 */
export const ConfigureElectronicLockResponseSchema: GenMessage<ConfigureElectronicLockResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 15);

/**
 * The metadata message for [`ConfigureElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.ConfigureElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ConfigureElectronicLockMetadata
 */
export type ConfigureElectronicLockMetadata = Message<"salto.nebula.electroniclock.v1.ConfigureElectronicLockMetadata"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ConfigureElectronicLockMetadata.
 * Use `create(ConfigureElectronicLockMetadataSchema)` to create a new message.
 */
export const ConfigureElectronicLockMetadataSchema: GenMessage<ConfigureElectronicLockMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 16);

/**
 * The request message for [`ResetElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.ResetElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ResetElectronicLockRequest
 */
export type ResetElectronicLockRequest = Message<"salto.nebula.electroniclock.v1.ResetElectronicLockRequest"> & {
  /**
   * The resource name of the electronic lock to be reset. For example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ResetElectronicLockRequest.
 * Use `create(ResetElectronicLockRequestSchema)` to create a new message.
 */
export const ResetElectronicLockRequestSchema: GenMessage<ResetElectronicLockRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 17);

/**
 * The empty response message for [`ResetElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.ResetElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ResetElectronicLockResponse
 */
export type ResetElectronicLockResponse = Message<"salto.nebula.electroniclock.v1.ResetElectronicLockResponse"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ResetElectronicLockResponse.
 * Use `create(ResetElectronicLockResponseSchema)` to create a new message.
 */
export const ResetElectronicLockResponseSchema: GenMessage<ResetElectronicLockResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 18);

/**
 * The metadata message for [`ResetElectronicLock`][salto.nebula.electroniclock.v1.ElectronicLockService.ResetElectronicLock]
 *
 * @generated from message salto.nebula.electroniclock.v1.ResetElectronicLockMetadata
 */
export type ResetElectronicLockMetadata = Message<"salto.nebula.electroniclock.v1.ResetElectronicLockMetadata"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.ResetElectronicLockMetadata.
 * Use `create(ResetElectronicLockMetadataSchema)` to create a new message.
 */
export const ResetElectronicLockMetadataSchema: GenMessage<ResetElectronicLockMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 19);

/**
 * The request message for [`UpdateElectronicLockFirmware`][salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLockFirmware]
 *
 * @generated from message salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareRequest
 */
export type UpdateElectronicLockFirmwareRequest = Message<"salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareRequest"> & {
  /**
   * The resource name of the electronic lock whose firmware will be updated. For
   * example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string electronic_lock = 1;
   */
  electronicLock: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareRequest.
 * Use `create(UpdateElectronicLockFirmwareRequestSchema)` to create a new message.
 */
export const UpdateElectronicLockFirmwareRequestSchema: GenMessage<UpdateElectronicLockFirmwareRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 20);

/**
 * The response message for [`UpdateElectronicLockFirmware`][salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLockFirmware]
 *
 * @generated from message salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareResponse
 */
export type UpdateElectronicLockFirmwareResponse = Message<"salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareResponse"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareResponse.
 * Use `create(UpdateElectronicLockFirmwareResponseSchema)` to create a new message.
 */
export const UpdateElectronicLockFirmwareResponseSchema: GenMessage<UpdateElectronicLockFirmwareResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 21);

/**
 * The metadata message for [`UpdateElectronicLockFirmware`][salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLockFirmware]
 *
 * @generated from message salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareMetadata
 */
export type UpdateElectronicLockFirmwareMetadata = Message<"salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareMetadata"> & {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent: number;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.UpdateElectronicLockFirmwareMetadata.
 * Use `create(UpdateElectronicLockFirmwareMetadataSchema)` to create a new message.
 */
export const UpdateElectronicLockFirmwareMetadataSchema: GenMessage<UpdateElectronicLockFirmwareMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 22);

/**
 * The request message for [`GenerateAuthorizationToken`][salto.nebula.electroniclock.v1.ElectronicLockService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.electroniclock.v1.GenerateAuthorizationTokenRequest
 */
export type GenerateAuthorizationTokenRequest = Message<"salto.nebula.electroniclock.v1.GenerateAuthorizationTokenRequest"> & {
  /**
   * The resource name of the electronic lock that the authorization token is
   * generated for. For example:
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string electronic_lock = 1;
   */
  electronicLock: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.GenerateAuthorizationTokenRequest.
 * Use `create(GenerateAuthorizationTokenRequestSchema)` to create a new message.
 */
export const GenerateAuthorizationTokenRequestSchema: GenMessage<GenerateAuthorizationTokenRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 23);

/**
 * The response message for [`GenerateAuthorizationToken`][salto.nebula.electroniclock.v1.ElectronicLockService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.electroniclock.v1.GenerateAuthorizationTokenResponse
 */
export type GenerateAuthorizationTokenResponse = Message<"salto.nebula.electroniclock.v1.GenerateAuthorizationTokenResponse"> & {
  /**
   * Authorization token to be used for connecting to an electronic lock.
   *
   * @generated from field: bytes authorization_token = 1;
   */
  authorizationToken: Uint8Array;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.GenerateAuthorizationTokenResponse.
 * Use `create(GenerateAuthorizationTokenResponseSchema)` to create a new message.
 */
export const GenerateAuthorizationTokenResponseSchema: GenMessage<GenerateAuthorizationTokenResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 24);

/**
 * The request message for [`GenerateFirmwareDownloadUri`][salto.nebula.electroniclock.v1.ElectronicLockService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriRequest
 */
export type GenerateFirmwareDownloadUriRequest = Message<"salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriRequest"> & {
  /**
   * The resource name of the electronic lock to get the firmware download URI.
   * For example: `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from field: string electronic_lock = 1;
   */
  electronicLock: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriRequest.
 * Use `create(GenerateFirmwareDownloadUriRequestSchema)` to create a new message.
 */
export const GenerateFirmwareDownloadUriRequestSchema: GenMessage<GenerateFirmwareDownloadUriRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 25);

/**
 * The response message for [`GenerateFirmwareDownloadUri`][salto.nebula.electroniclock.v1.ElectronicLockService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriResponse
 */
export type GenerateFirmwareDownloadUriResponse = Message<"salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriResponse"> & {
  /**
   * The URI to download the firmware bundle. The URI will be valid for 15
   * minutes.
   *
   * @generated from field: string download_uri = 1;
   */
  downloadUri: string;

  /**
   * Digest of the file to be download. This can be used to cache the file and
   * avoid downloading it multiple times.
   * The digest has the following format: `<algorithm>:<digest>`.
   * For example: `sha256:8ff2483f2fbaa6c8dfd4e3556dbde298eb5e342b5e46f84eabdccc8e1cbe2d5a`.
   *
   * @generated from field: string digest = 2;
   */
  digest: string;
};

/**
 * Describes the message salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriResponse.
 * Use `create(GenerateFirmwareDownloadUriResponseSchema)` to create a new message.
 */
export const GenerateFirmwareDownloadUriResponseSchema: GenMessage<GenerateFirmwareDownloadUriResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 26);

/**
 * The metadata message for [`GenerateFirmwareDownloadUri`][salto.nebula.electroniclock.v1.ElectronicLockService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriMetadata
 */
export type GenerateFirmwareDownloadUriMetadata = Message<"salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriMetadata"> & {
};

/**
 * Describes the message salto.nebula.electroniclock.v1.GenerateFirmwareDownloadUriMetadata.
 * Use `create(GenerateFirmwareDownloadUriMetadataSchema)` to create a new message.
 */
export const GenerateFirmwareDownloadUriMetadataSchema: GenMessage<GenerateFirmwareDownloadUriMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 27);

/**
 * An electronic lock is a physical electronic device such as an electronic
 * escutcheon or cylinder, or a door controller with an electric strike. It
 * differs from an access point in that, an electronic lock could be a
 * particular model of a device such as a SALTO Neo cylinder, a door controller
 * with an electric strike or a Danalock V3 smartlock, for example. An
 * electronic lock is a single device whereas an access point could be made up
 * of several devices. An access point could be composed of an electronic lock
 * plus a door detector, a door controller and a keypad, or an intercom adaptor
 * which is connected to multiple electronic locks. This service is responsible
 * for managing electronic lock resources.
 *
 * @generated from service salto.nebula.electroniclock.v1.ElectronicLockService
 */
export const ElectronicLockService: GenService<{
  /**
   * Create an electronic lock
   *
   * Creates a new electronic lock
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.CreateElectronicLock
   */
  createElectronicLock: {
    methodKind: "unary";
    input: typeof CreateElectronicLockRequestSchema;
    output: typeof ElectronicLockSchema;
  },
  /**
   * Get an electronic lock
   *
   * Gets an existing electronic lock.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.GetElectronicLock
   */
  getElectronicLock: {
    methodKind: "unary";
    input: typeof GetElectronicLockRequestSchema;
    output: typeof ElectronicLockSchema;
  },
  /**
   * List electronic locks
   *
   * Returns a list of electronic locks that have been previously created.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.ListElectronicLocks
   */
  listElectronicLocks: {
    methodKind: "unary";
    input: typeof ListElectronicLocksRequestSchema;
    output: typeof ListElectronicLocksResponseSchema;
  },
  /**
   * Update an electronic lock
   *
   * Updates an existing electronic lock.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLock
   */
  updateElectronicLock: {
    methodKind: "unary";
    input: typeof UpdateElectronicLockRequestSchema;
    output: typeof ElectronicLockSchema;
  },
  /**
   * Delete an electronic lock
   *
   * Permanently deletes an electronic lock. This cannot be undone.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.DeleteElectronicLock
   */
  deleteElectronicLock: {
    methodKind: "unary";
    input: typeof DeleteElectronicLockRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Bind an electronic lock
   *
   * Binds an electronic lock. Binding an electronic lock assigns a device
   * identifier to the electronic lock. After binding, the device can then be
   * initialized or configured.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.BindElectronicLock
   */
  bindElectronicLock: {
    methodKind: "unary";
    input: typeof BindElectronicLockRequestSchema;
    output: typeof BindElectronicLockResponseSchema;
  },
  /**
   * Unbind an electronic lock
   *
   * Unbinds an electronic lock. Unbinding an electronic lock removes the
   * device identifier from the electronic lock. This may be required in some
   * cases where the electronic lock is not available anymore because, for
   * example, it's broken or damaged. Unbinding allows the initialization of
   * the replacement device without removing it from the installation. It also
   * means the device keeps all the information associated with it, such as
   * events.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.UnbindElectronicLock
   */
  unbindElectronicLock: {
    methodKind: "unary";
    input: typeof UnbindElectronicLockRequestSchema;
    output: typeof UnbindElectronicLockResponseSchema;
  },
  /**
   * Initialize an electronic lock
   *
   * Initializes an electronic lock. Electronic locks need to be initialized
   * before you can start to use them.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.InitializeElectronicLock
   */
  initializeElectronicLock: {
    methodKind: "unary";
    input: typeof InitializeElectronicLockRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Configure an electronic lock
   *
   * Configures an electronic lock. Configuring an electronic lock implies
   * adding some information to the electronic lock such as setting the time
   * zone.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.ConfigureElectronicLock
   */
  configureElectronicLock: {
    methodKind: "unary";
    input: typeof ConfigureElectronicLockRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Reset an electronic lock
   *
   * Resetting a device such as an electronic lock means returning it to its
   * factory settings. Resetting is the process of removing the identity as
   * well as all the associated information of an already configured device.
   * Once a device has been reset, you need to reconfigure it.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.ResetElectronicLock
   */
  resetElectronicLock: {
    methodKind: "unary";
    input: typeof ResetElectronicLockRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Update electronic lock firmware
   *
   * Updates an electronic lock's firmware. SALTO provides firmware updates
   * when new functionality is available or when we fix a bug.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.UpdateElectronicLockFirmware
   */
  updateElectronicLockFirmware: {
    methodKind: "unary";
    input: typeof UpdateElectronicLockFirmwareRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Generate authorization token for an electronic lock
   *
   * Generates an authorization token that allows to connect to, authenticate and
   * authorize an electronic lock.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.GenerateAuthorizationToken
   */
  generateAuthorizationToken: {
    methodKind: "unary";
    input: typeof GenerateAuthorizationTokenRequestSchema;
    output: typeof GenerateAuthorizationTokenResponseSchema;
  },
  /**
   * Generate electronic lock firmware download URI
   *
   * Provides the download URI for the latest firmware bundle for the
   * electronic lock. The returned URI can be used to bring the electronic
   * lock firmwares up to latest.
   *
   * @generated from rpc salto.nebula.electroniclock.v1.ElectronicLockService.GenerateFirmwareDownloadUri
   */
  generateFirmwareDownloadUri: {
    methodKind: "unary";
    input: typeof GenerateFirmwareDownloadUriRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_salto_nebula_electroniclock_v1_electronic_lock, 0);

