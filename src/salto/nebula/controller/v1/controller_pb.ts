// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/controller/v1/controller.proto (package salto.nebula.controller.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * The controller object
 *
 * @generated from message salto.nebula.controller.v1.Controller
 */
export class Controller extends Message<Controller> {
  /**
   * Output only. Resource name of the controller. It must have the format of
   * `installations/*\/controllers/*`. For example:
   * `installations/surelock-homes-hq/controller/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the controller.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: optional string device_id = 3;
   */
  deviceId?: string;

  /**
   * Parent device name, could be a `Gateway` or an `Extender` and takes the
   * form of a relative resource name:
   * `installations/surelock-homes-hq/gateways/conan-doyle` or
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from oneof salto.nebula.controller.v1.Controller.parent_device
   */
  parentDevice: {
    /**
     * Parent name, when controller is connected to a gateway
     *
     * @generated from field: string gateway = 4;
     */
    value: string;
    case: "gateway";
  } | {
    /**
     * Parent name, when controller is connected to an extender
     *
     * @generated from field: string extender = 5;
     */
    value: string;
    case: "extender";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * The access points that the controller gives coverage to.
   *
   * @generated from field: repeated string access_points = 6;
   */
  accessPoints: string[] = [];

  /**
   * Indicates whether this controller has been initialized or not. This
   * field cannot be modified using a standard
   * [`UpdateController`][salto.nebula.controller.v1.ControllerService.UpdateController]
   * operation. To change the value of this field, you must call
   * [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController].
   *
   * If the value is `false` also applies to the case where the
   * initialization process has been initiated but where it has not finished.
   *
   * @generated from field: bool initialized = 7;
   */
  initialized = false;

  /**
   * Indicates whether this controller has pending updates or not. This
   * could be because there was a pending configuration or a firmware update
   * and is conditionally set based on the current installation settings.
   *
   * @generated from field: bool outdated = 8;
   */
  outdated = false;

  /**
   * Indicates whether this controller is connected or not. It's
   * considered connected if there has been at least one communication with it
   * within the last 10 minutes. The property is left unset if it is an
   * offline controller.
   *
   * @generated from field: optional bool connected = 9;
   */
  connected?: boolean;

  /**
   * The last time an event was received.
   *
   * @generated from field: google.protobuf.Timestamp last_event_time = 10;
   */
  lastEventTime?: Timestamp;

  constructor(data?: PartialMessage<Controller>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.Controller";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "gateway", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parent_device" },
    { no: 5, name: "extender", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parent_device" },
    { no: 6, name: "access_points", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "initialized", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "outdated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "connected", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "last_event_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Controller {
    return new Controller().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Controller {
    return new Controller().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Controller {
    return new Controller().fromJsonString(jsonString, options);
  }

  static equals(a: Controller | PlainMessage<Controller> | undefined, b: Controller | PlainMessage<Controller> | undefined): boolean {
    return proto3.util.equals(Controller, a, b);
  }
}

/**
 * The request message for [CreateController][salto.nebula.controller.v1.ControllerService.CreateController]
 *
 * @generated from message salto.nebula.controller.v1.CreateControllerRequest
 */
export class CreateControllerRequest extends Message<CreateControllerRequest> {
  /**
   * Resource name of the parent resource where to create the controller. For
   * example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The controller ID to use for this controller. In case it's empty the
   * server will autogenerate a unique identifier.
   *
   * @generated from field: optional string controller_id = 2;
   */
  controllerId?: string;

  /**
   * The controller resource to be created. Client must not set the
   * `Controller.name` field.
   *
   * @generated from field: salto.nebula.controller.v1.Controller controller = 3;
   */
  controller?: Controller;

  constructor(data?: PartialMessage<CreateControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.CreateControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "controller_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "controller", kind: "message", T: Controller },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateControllerRequest {
    return new CreateControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateControllerRequest {
    return new CreateControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateControllerRequest {
    return new CreateControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateControllerRequest | PlainMessage<CreateControllerRequest> | undefined, b: CreateControllerRequest | PlainMessage<CreateControllerRequest> | undefined): boolean {
    return proto3.util.equals(CreateControllerRequest, a, b);
  }
}

/**
 * The request message for [GetController][salto.nebula.controller.v1.ControllerService.GetController]
 *
 * @generated from message salto.nebula.controller.v1.GetControllerRequest
 */
export class GetControllerRequest extends Message<GetControllerRequest> {
  /**
   * The name of the requested controller resource. For example:
   * `installations/surelock-homes-hq/controllers/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.GetControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetControllerRequest {
    return new GetControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetControllerRequest {
    return new GetControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetControllerRequest {
    return new GetControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetControllerRequest | PlainMessage<GetControllerRequest> | undefined, b: GetControllerRequest | PlainMessage<GetControllerRequest> | undefined): boolean {
    return proto3.util.equals(GetControllerRequest, a, b);
  }
}

/**
 * The request message for [ListControllers][salto.nebula.controller.v1.ControllerService.ListControllers]
 *
 * @generated from message salto.nebula.controller.v1.ListControllersRequest
 */
export class ListControllersRequest extends Message<ListControllersRequest> {
  /**
   * The parent resource name. For example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which controllers to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListControllersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ListControllersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListControllersRequest {
    return new ListControllersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListControllersRequest {
    return new ListControllersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListControllersRequest {
    return new ListControllersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListControllersRequest | PlainMessage<ListControllersRequest> | undefined, b: ListControllersRequest | PlainMessage<ListControllersRequest> | undefined): boolean {
    return proto3.util.equals(ListControllersRequest, a, b);
  }
}

/**
 * The response message for [ListControllers][salto.nebula.controllers.v1.ControllerService.ListControllers]
 *
 * @generated from message salto.nebula.controller.v1.ListControllersResponse
 */
export class ListControllersResponse extends Message<ListControllersResponse> {
  /**
   * The field name should match the noun `controllers` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.controller.v1.Controller controllers = 1;
   */
  controllers: Controller[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListControllersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ListControllersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controllers", kind: "message", T: Controller, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListControllersResponse {
    return new ListControllersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListControllersResponse {
    return new ListControllersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListControllersResponse {
    return new ListControllersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListControllersResponse | PlainMessage<ListControllersResponse> | undefined, b: ListControllersResponse | PlainMessage<ListControllersResponse> | undefined): boolean {
    return proto3.util.equals(ListControllersResponse, a, b);
  }
}

/**
 * The request message for [UpdateController][salto.nebula.controller.v1.ControllerService.UpdateController]
 *
 * @generated from message salto.nebula.controller.v1.UpdateControllerRequest
 */
export class UpdateControllerRequest extends Message<UpdateControllerRequest> {
  /**
   * The controller resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.controller.v1.Controller controller = 1;
   */
  controller?: Controller;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.UpdateControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "message", T: Controller },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateControllerRequest {
    return new UpdateControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateControllerRequest {
    return new UpdateControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateControllerRequest {
    return new UpdateControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateControllerRequest | PlainMessage<UpdateControllerRequest> | undefined, b: UpdateControllerRequest | PlainMessage<UpdateControllerRequest> | undefined): boolean {
    return proto3.util.equals(UpdateControllerRequest, a, b);
  }
}

/**
 * The request message for [DeleteController][salto.nebula.controller.v1.ControllerService.DeleteController]
 *
 * @generated from message salto.nebula.controller.v1.DeleteControllerRequest
 */
export class DeleteControllerRequest extends Message<DeleteControllerRequest> {
  /**
   * The resource name of the controller to be deleted. For example:
   * `installations/surelock-homes-hq/controllers/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.DeleteControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteControllerRequest {
    return new DeleteControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteControllerRequest {
    return new DeleteControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteControllerRequest {
    return new DeleteControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteControllerRequest | PlainMessage<DeleteControllerRequest> | undefined, b: DeleteControllerRequest | PlainMessage<DeleteControllerRequest> | undefined): boolean {
    return proto3.util.equals(DeleteControllerRequest, a, b);
  }
}

/**
 * The request message for [`BindController`][salto.nebula.controller.v1.ControllerService.BindController]
 *
 * @generated from message salto.nebula.controller.v1.BindControllerRequest
 */
export class BindControllerRequest extends Message<BindControllerRequest> {
  /**
   * The resource name of the controller to be bound. For example:
   * `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: string device_id = 2;
   */
  deviceId = "";

  constructor(data?: PartialMessage<BindControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.BindControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindControllerRequest {
    return new BindControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindControllerRequest {
    return new BindControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindControllerRequest {
    return new BindControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BindControllerRequest | PlainMessage<BindControllerRequest> | undefined, b: BindControllerRequest | PlainMessage<BindControllerRequest> | undefined): boolean {
    return proto3.util.equals(BindControllerRequest, a, b);
  }
}

/**
 * The empty response message for [`BindController`][salto.nebula.controller.v1.ControllerService.BindController]
 *
 * @generated from message salto.nebula.controller.v1.BindControllerResponse
 */
export class BindControllerResponse extends Message<BindControllerResponse> {
  constructor(data?: PartialMessage<BindControllerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.BindControllerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindControllerResponse {
    return new BindControllerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindControllerResponse {
    return new BindControllerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindControllerResponse {
    return new BindControllerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BindControllerResponse | PlainMessage<BindControllerResponse> | undefined, b: BindControllerResponse | PlainMessage<BindControllerResponse> | undefined): boolean {
    return proto3.util.equals(BindControllerResponse, a, b);
  }
}

/**
 * The request message for [`UnbindController`][salto.nebula.controller.v1.ControllerService.UnbindController]
 *
 * @generated from message salto.nebula.controller.v1.UnbindControllerRequest
 */
export class UnbindControllerRequest extends Message<UnbindControllerRequest> {
  /**
   * The resource name of the controller to be bound. For example:
   * `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * If set to true, the device identifier is removed (unbound) from the
   * controller. Otherwise, the request will only work if the controller
   * isn't bound to any previous device identifier.
   *
   * @generated from field: bool force = 2;
   */
  force = false;

  constructor(data?: PartialMessage<UnbindControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.UnbindControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindControllerRequest {
    return new UnbindControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindControllerRequest {
    return new UnbindControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindControllerRequest {
    return new UnbindControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindControllerRequest | PlainMessage<UnbindControllerRequest> | undefined, b: UnbindControllerRequest | PlainMessage<UnbindControllerRequest> | undefined): boolean {
    return proto3.util.equals(UnbindControllerRequest, a, b);
  }
}

/**
 * The empty response message for [`UnbindController`][salto.nebula.controller.v1.ControllerService.UnbindController]
 *
 * @generated from message salto.nebula.controller.v1.UnbindControllerResponse
 */
export class UnbindControllerResponse extends Message<UnbindControllerResponse> {
  constructor(data?: PartialMessage<UnbindControllerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.UnbindControllerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindControllerResponse {
    return new UnbindControllerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindControllerResponse {
    return new UnbindControllerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindControllerResponse {
    return new UnbindControllerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindControllerResponse | PlainMessage<UnbindControllerResponse> | undefined, b: UnbindControllerResponse | PlainMessage<UnbindControllerResponse> | undefined): boolean {
    return proto3.util.equals(UnbindControllerResponse, a, b);
  }
}

/**
 * The request message for [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController]
 *
 * @generated from message salto.nebula.controller.v1.InitializeControllerRequest
 */
export class InitializeControllerRequest extends Message<InitializeControllerRequest> {
  /**
   * The resource name of the controller to be initialized. For example:
   * `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<InitializeControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.InitializeControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeControllerRequest {
    return new InitializeControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeControllerRequest {
    return new InitializeControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeControllerRequest {
    return new InitializeControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeControllerRequest | PlainMessage<InitializeControllerRequest> | undefined, b: InitializeControllerRequest | PlainMessage<InitializeControllerRequest> | undefined): boolean {
    return proto3.util.equals(InitializeControllerRequest, a, b);
  }
}

/**
 * The empty response message for [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController]
 *
 * @generated from message salto.nebula.controller.v1.InitializeControllerResponse
 */
export class InitializeControllerResponse extends Message<InitializeControllerResponse> {
  constructor(data?: PartialMessage<InitializeControllerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.InitializeControllerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeControllerResponse {
    return new InitializeControllerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeControllerResponse {
    return new InitializeControllerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeControllerResponse {
    return new InitializeControllerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeControllerResponse | PlainMessage<InitializeControllerResponse> | undefined, b: InitializeControllerResponse | PlainMessage<InitializeControllerResponse> | undefined): boolean {
    return proto3.util.equals(InitializeControllerResponse, a, b);
  }
}

/**
 * @generated from message salto.nebula.controller.v1.InitializeControllerMetadata
 */
export class InitializeControllerMetadata extends Message<InitializeControllerMetadata> {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent = 0;

  constructor(data?: PartialMessage<InitializeControllerMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.InitializeControllerMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "progress_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeControllerMetadata {
    return new InitializeControllerMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeControllerMetadata {
    return new InitializeControllerMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeControllerMetadata {
    return new InitializeControllerMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeControllerMetadata | PlainMessage<InitializeControllerMetadata> | undefined, b: InitializeControllerMetadata | PlainMessage<InitializeControllerMetadata> | undefined): boolean {
    return proto3.util.equals(InitializeControllerMetadata, a, b);
  }
}

/**
 * The request message for [`ConfigureController`][salto.nebula.controller.v1.ControllerService.ConfigureController]
 *
 * @generated from message salto.nebula.controller.v1.ConfigureControllerRequest
 */
export class ConfigureControllerRequest extends Message<ConfigureControllerRequest> {
  /**
   * The resource name of the controller to be configured. For example:
   * `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ConfigureControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ConfigureControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureControllerRequest {
    return new ConfigureControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureControllerRequest {
    return new ConfigureControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureControllerRequest {
    return new ConfigureControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureControllerRequest | PlainMessage<ConfigureControllerRequest> | undefined, b: ConfigureControllerRequest | PlainMessage<ConfigureControllerRequest> | undefined): boolean {
    return proto3.util.equals(ConfigureControllerRequest, a, b);
  }
}

/**
 * The empty response message for [`ConfigureController`][salto.nebula.controller.v1.ControllerService.ConfigureController]
 *
 * @generated from message salto.nebula.controller.v1.ConfigureControllerResponse
 */
export class ConfigureControllerResponse extends Message<ConfigureControllerResponse> {
  constructor(data?: PartialMessage<ConfigureControllerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ConfigureControllerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureControllerResponse {
    return new ConfigureControllerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureControllerResponse {
    return new ConfigureControllerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureControllerResponse {
    return new ConfigureControllerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureControllerResponse | PlainMessage<ConfigureControllerResponse> | undefined, b: ConfigureControllerResponse | PlainMessage<ConfigureControllerResponse> | undefined): boolean {
    return proto3.util.equals(ConfigureControllerResponse, a, b);
  }
}

/**
 * The metadata message for [`ConfigureController`][salto.nebula.controller.v1.ControllerService.ConfigureController]
 *
 * @generated from message salto.nebula.controller.v1.ConfigureControllerMetadata
 */
export class ConfigureControllerMetadata extends Message<ConfigureControllerMetadata> {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent = 0;

  constructor(data?: PartialMessage<ConfigureControllerMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ConfigureControllerMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "progress_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureControllerMetadata {
    return new ConfigureControllerMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureControllerMetadata {
    return new ConfigureControllerMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureControllerMetadata {
    return new ConfigureControllerMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureControllerMetadata | PlainMessage<ConfigureControllerMetadata> | undefined, b: ConfigureControllerMetadata | PlainMessage<ConfigureControllerMetadata> | undefined): boolean {
    return proto3.util.equals(ConfigureControllerMetadata, a, b);
  }
}

/**
 * The request message for [`ResetController`][salto.nebula.controller.v1.ControllerService.ResetController]
 *
 * @generated from message salto.nebula.controller.v1.ResetControllerRequest
 */
export class ResetControllerRequest extends Message<ResetControllerRequest> {
  /**
   * The resource name of the controller to be reset. For example:
   * `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ResetControllerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ResetControllerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetControllerRequest {
    return new ResetControllerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetControllerRequest {
    return new ResetControllerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetControllerRequest {
    return new ResetControllerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetControllerRequest | PlainMessage<ResetControllerRequest> | undefined, b: ResetControllerRequest | PlainMessage<ResetControllerRequest> | undefined): boolean {
    return proto3.util.equals(ResetControllerRequest, a, b);
  }
}

/**
 * The empty response message for [`ResetController`][salto.nebula.controller.v1.ControllerService.ResetController]
 *
 * @generated from message salto.nebula.controller.v1.ResetControllerResponse
 */
export class ResetControllerResponse extends Message<ResetControllerResponse> {
  constructor(data?: PartialMessage<ResetControllerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ResetControllerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetControllerResponse {
    return new ResetControllerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetControllerResponse {
    return new ResetControllerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetControllerResponse {
    return new ResetControllerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetControllerResponse | PlainMessage<ResetControllerResponse> | undefined, b: ResetControllerResponse | PlainMessage<ResetControllerResponse> | undefined): boolean {
    return proto3.util.equals(ResetControllerResponse, a, b);
  }
}

/**
 * The metadata message for [`ResetController`][salto.nebula.controller.v1.ControllerService.ResetController]
 *
 * @generated from message salto.nebula.controller.v1.ResetControllerMetadata
 */
export class ResetControllerMetadata extends Message<ResetControllerMetadata> {
  constructor(data?: PartialMessage<ResetControllerMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.ResetControllerMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetControllerMetadata {
    return new ResetControllerMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetControllerMetadata {
    return new ResetControllerMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetControllerMetadata {
    return new ResetControllerMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ResetControllerMetadata | PlainMessage<ResetControllerMetadata> | undefined, b: ResetControllerMetadata | PlainMessage<ResetControllerMetadata> | undefined): boolean {
    return proto3.util.equals(ResetControllerMetadata, a, b);
  }
}

/**
 * The request message for [`UpdateControllerFirmware`][salto.nebula.controller.v1.ControllerService.UpdateControllerFirmware]
 *
 * @generated from message salto.nebula.controller.v1.UpdateControllerFirmwareRequest
 */
export class UpdateControllerFirmwareRequest extends Message<UpdateControllerFirmwareRequest> {
  /**
   * The resource name of the controller whose firmware will be updated. For
   * example:
   * `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  constructor(data?: PartialMessage<UpdateControllerFirmwareRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.UpdateControllerFirmwareRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateControllerFirmwareRequest {
    return new UpdateControllerFirmwareRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateControllerFirmwareRequest {
    return new UpdateControllerFirmwareRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateControllerFirmwareRequest {
    return new UpdateControllerFirmwareRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateControllerFirmwareRequest | PlainMessage<UpdateControllerFirmwareRequest> | undefined, b: UpdateControllerFirmwareRequest | PlainMessage<UpdateControllerFirmwareRequest> | undefined): boolean {
    return proto3.util.equals(UpdateControllerFirmwareRequest, a, b);
  }
}

/**
 * The response message for [`UpdateControllerFirmware`][salto.nebula.controller.v1.ControllerService.UpdateControllerFirmware]
 *
 * @generated from message salto.nebula.controller.v1.UpdateControllerFirmwareResponse
 */
export class UpdateControllerFirmwareResponse extends Message<UpdateControllerFirmwareResponse> {
  constructor(data?: PartialMessage<UpdateControllerFirmwareResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.UpdateControllerFirmwareResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateControllerFirmwareResponse {
    return new UpdateControllerFirmwareResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateControllerFirmwareResponse {
    return new UpdateControllerFirmwareResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateControllerFirmwareResponse {
    return new UpdateControllerFirmwareResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateControllerFirmwareResponse | PlainMessage<UpdateControllerFirmwareResponse> | undefined, b: UpdateControllerFirmwareResponse | PlainMessage<UpdateControllerFirmwareResponse> | undefined): boolean {
    return proto3.util.equals(UpdateControllerFirmwareResponse, a, b);
  }
}

/**
 * The metadata message for [`UpdateControllerFirmware`][salto.nebula.controller.v1.ControllerService.UpdateControllerFirmware]
 *
 * @generated from message salto.nebula.controller.v1.UpdateControllerFirmwareMetadata
 */
export class UpdateControllerFirmwareMetadata extends Message<UpdateControllerFirmwareMetadata> {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent = 0;

  constructor(data?: PartialMessage<UpdateControllerFirmwareMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.UpdateControllerFirmwareMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "progress_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateControllerFirmwareMetadata {
    return new UpdateControllerFirmwareMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateControllerFirmwareMetadata {
    return new UpdateControllerFirmwareMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateControllerFirmwareMetadata {
    return new UpdateControllerFirmwareMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateControllerFirmwareMetadata | PlainMessage<UpdateControllerFirmwareMetadata> | undefined, b: UpdateControllerFirmwareMetadata | PlainMessage<UpdateControllerFirmwareMetadata> | undefined): boolean {
    return proto3.util.equals(UpdateControllerFirmwareMetadata, a, b);
  }
}

/**
 * The request message for [`GenerateAuthorizationToken`][salto.nebula.controller.v1.ControllerService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.controller.v1.GenerateAuthorizationTokenRequest
 */
export class GenerateAuthorizationTokenRequest extends Message<GenerateAuthorizationTokenRequest> {
  /**
   * The resource name of the controller that the authorization token is
   * generated for. For example:
   * `installations/surelock-homes-hq/controllers/baker-street-entrance`.
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  constructor(data?: PartialMessage<GenerateAuthorizationTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.GenerateAuthorizationTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthorizationTokenRequest | PlainMessage<GenerateAuthorizationTokenRequest> | undefined, b: GenerateAuthorizationTokenRequest | PlainMessage<GenerateAuthorizationTokenRequest> | undefined): boolean {
    return proto3.util.equals(GenerateAuthorizationTokenRequest, a, b);
  }
}

/**
 * The response message for [`GenerateAuthorizationToken`][salto.nebula.controller.v1.ControllerService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.controller.v1.GenerateAuthorizationTokenResponse
 */
export class GenerateAuthorizationTokenResponse extends Message<GenerateAuthorizationTokenResponse> {
  /**
   * Authorization token to be used for connecting against a controller.
   *
   * @generated from field: bytes authorization_token = 1;
   */
  authorizationToken = new Uint8Array(0);

  constructor(data?: PartialMessage<GenerateAuthorizationTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.GenerateAuthorizationTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authorization_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthorizationTokenResponse | PlainMessage<GenerateAuthorizationTokenResponse> | undefined, b: GenerateAuthorizationTokenResponse | PlainMessage<GenerateAuthorizationTokenResponse> | undefined): boolean {
    return proto3.util.equals(GenerateAuthorizationTokenResponse, a, b);
  }
}

/**
 * The request message for [`GenerateFirmwareDownloadUri`][salto.nebula.controller.v1.ControllerService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.controller.v1.GenerateFirmwareDownloadUriRequest
 */
export class GenerateFirmwareDownloadUriRequest extends Message<GenerateFirmwareDownloadUriRequest> {
  /**
   * The resource name of the controller to get the firmware download URI.
   * For example: `installations/surelock-homes-hq/controllers/main-controller`.
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.GenerateFirmwareDownloadUriRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined, b: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriRequest, a, b);
  }
}

/**
 * The response message for [`GenerateFirmwareDownloadUri`][salto.nebula.controller.v1.ControllerService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.controller.v1.GenerateFirmwareDownloadUriResponse
 */
export class GenerateFirmwareDownloadUriResponse extends Message<GenerateFirmwareDownloadUriResponse> {
  /**
   * The URI to download the firmware bundle. The URI will be valid for 15
   * minutes.
   *
   * @generated from field: string download_uri = 1;
   */
  downloadUri = "";

  /**
   * Digest of the file to be download. This can be used to cache the file and
   * avoid downloading it multiple times.
   * The digest has the following format: `<algorithm>:<digest>`.
   * For example: `sha256:8ff2483f2fbaa6c8dfd4e3556dbde298eb5e342b5e46f84eabdccc8e1cbe2d5a`.
   *
   * @generated from field: string digest = 2;
   */
  digest = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.GenerateFirmwareDownloadUriResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "digest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined, b: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriResponse, a, b);
  }
}

/**
 * The metadata message for [`GenerateFirmwareDownloadUri`][salto.nebula.controller.v1.ControllerService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.controller.v1.GenerateFirmwareDownloadUriMetadata
 */
export class GenerateFirmwareDownloadUriMetadata extends Message<GenerateFirmwareDownloadUriMetadata> {
  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.controller.v1.GenerateFirmwareDownloadUriMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined, b: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriMetadata, a, b);
  }
}

