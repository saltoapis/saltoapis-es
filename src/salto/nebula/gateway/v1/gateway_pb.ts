// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/gateway/v1/gateway.proto (package salto.nebula.gateway.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";
import { DeviceMetadata } from "@saltoapis/nebula-type";

/**
 * The gateway object
 *
 * @generated from message salto.nebula.gateway.v1.Gateway
 */
export class Gateway extends Message<Gateway> {
  /**
   *  Resource name of the gateway. It must have the format of
   * `installations/*\/gateways/*`. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the gateway.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, encoders and so on.
   *
   * @generated from field: optional string device_id = 3;
   */
  deviceId?: string;

  /**
   * Indicates whether this gateway has been initialized or not. This
   * field cannot be modified using a standard
   * [`UpdateGateway`][salto.nebula.gateway.v1.GatewayService.UpdateGateway]
   * operation. To change the value of this field, you must call
   * [`InitializeGateway`][salto.nebula.gateway.v1.GatewayService.InitializeGateway].
   *
   * If the value is `false` also applies to the case where the
   * initialization process has been initiated but where it has not finished.
   *
   * @generated from field: bool initialized = 4;
   */
  initialized = false;

  /**
   * Device metadata contains information about a device hardware and firmware.
   *
   * @generated from field: salto.nebula.type.DeviceMetadata device_metadata = 8;
   */
  deviceMetadata?: DeviceMetadata;

  /**
   * Indicates whether this gateway is connected or not. It's considered
   * connected if the gateway has successfully established communication
   * with the MQTT server.
   *
   * @generated from field: bool connected = 7;
   */
  connected = false;

  /**
   * Ethernet network settings for a gateway
   *
   * @generated from field: salto.nebula.gateway.v1.EthernetSettings ethernet_settings = 5;
   */
  ethernetSettings?: EthernetSettings;

  /**
   * WiFi network settings for a gateway
   *
   * @generated from field: salto.nebula.gateway.v1.WifiSettings wifi_settings = 6;
   */
  wifiSettings?: WifiSettings;

  constructor(data?: PartialMessage<Gateway>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.Gateway";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "initialized", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "device_metadata", kind: "message", T: DeviceMetadata },
    { no: 7, name: "connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "ethernet_settings", kind: "message", T: EthernetSettings },
    { no: 6, name: "wifi_settings", kind: "message", T: WifiSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Gateway {
    return new Gateway().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Gateway {
    return new Gateway().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Gateway {
    return new Gateway().fromJsonString(jsonString, options);
  }

  static equals(a: Gateway | PlainMessage<Gateway> | undefined, b: Gateway | PlainMessage<Gateway> | undefined): boolean {
    return proto3.util.equals(Gateway, a, b);
  }
}

/**
 * Ethernet network settings
 *
 * @generated from message salto.nebula.gateway.v1.EthernetSettings
 */
export class EthernetSettings extends Message<EthernetSettings> {
  /**
   * IPv4 (Internet Protocol version 4) settings of an ethernet network.
   *
   * @generated from field: salto.nebula.gateway.v1.IPv4Settings ipv4_settings = 1;
   */
  ipv4Settings?: IPv4Settings;

  /**
   * DNS settings of an ethernet network.
   *
   * @generated from field: salto.nebula.gateway.v1.DNSSettings dns_settings = 2;
   */
  dnsSettings?: DNSSettings;

  constructor(data?: PartialMessage<EthernetSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.EthernetSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ipv4_settings", kind: "message", T: IPv4Settings },
    { no: 2, name: "dns_settings", kind: "message", T: DNSSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EthernetSettings {
    return new EthernetSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EthernetSettings {
    return new EthernetSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EthernetSettings {
    return new EthernetSettings().fromJsonString(jsonString, options);
  }

  static equals(a: EthernetSettings | PlainMessage<EthernetSettings> | undefined, b: EthernetSettings | PlainMessage<EthernetSettings> | undefined): boolean {
    return proto3.util.equals(EthernetSettings, a, b);
  }
}

/**
 * WiFi network settings
 *
 * @generated from message salto.nebula.gateway.v1.WifiSettings
 */
export class WifiSettings extends Message<WifiSettings> {
  /**
   * IPv4 (Internet Protocol version 4) settings of a WiFi network.
   *
   * @generated from field: salto.nebula.gateway.v1.IPv4Settings ipv4_settings = 1;
   */
  ipv4Settings?: IPv4Settings;

  /**
   * DNS settings of a WiFi network.
   *
   * @generated from field: salto.nebula.gateway.v1.DNSSettings dns_settings = 2;
   */
  dnsSettings?: DNSSettings;

  /**
   * Service set identifier of a WiFi network. An SSID is a 32-character
   * unique identifier attached to the header of packets that are sent over a
   * Wireless Local Area Network. SSIDs serve as "network names" and are
   * typically human readable.
   *
   * @generated from field: string ssid = 3;
   */
  ssid = "";

  /**
   * Password to be used to authenticate on a WiFi network.
   *
   * @generated from field: optional string password = 4;
   */
  password?: string;

  constructor(data?: PartialMessage<WifiSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.WifiSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ipv4_settings", kind: "message", T: IPv4Settings },
    { no: 2, name: "dns_settings", kind: "message", T: DNSSettings },
    { no: 3, name: "ssid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WifiSettings {
    return new WifiSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WifiSettings {
    return new WifiSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WifiSettings {
    return new WifiSettings().fromJsonString(jsonString, options);
  }

  static equals(a: WifiSettings | PlainMessage<WifiSettings> | undefined, b: WifiSettings | PlainMessage<WifiSettings> | undefined): boolean {
    return proto3.util.equals(WifiSettings, a, b);
  }
}

/**
 * IPv4 (Internet Protocol version 4) settings
 *
 * @generated from message salto.nebula.gateway.v1.IPv4Settings
 */
export class IPv4Settings extends Message<IPv4Settings> {
  /**
   * IP address
   *
   * If unset, an automatic value given by the network will be used.
   *
   * @generated from field: optional string ip_address = 1;
   */
  ipAddress?: string;

  /**
   * Subnet mask is expressed in dot-decimal notation like an address.
   * For example: 255.255.255.0 is the subnet mask for the prefix
   * 198.51.100.0/24.
   *
   * If unset, an automatic value given by the network will be used.
   *
   * @generated from field: optional string mask = 2;
   */
  mask?: string;

  /**
   * Default network router's IP address
   *
   * If unset, an automatic value given by the network will be used.
   *
   * @generated from field: optional string router_address = 3;
   */
  routerAddress?: string;

  constructor(data?: PartialMessage<IPv4Settings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.IPv4Settings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ip_address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "mask", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "router_address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IPv4Settings {
    return new IPv4Settings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IPv4Settings {
    return new IPv4Settings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IPv4Settings {
    return new IPv4Settings().fromJsonString(jsonString, options);
  }

  static equals(a: IPv4Settings | PlainMessage<IPv4Settings> | undefined, b: IPv4Settings | PlainMessage<IPv4Settings> | undefined): boolean {
    return proto3.util.equals(IPv4Settings, a, b);
  }
}

/**
 * DNS settings
 *
 * @generated from message salto.nebula.gateway.v1.DNSSettings
 */
export class DNSSettings extends Message<DNSSettings> {
  /**
   * DNS server IP addresses. The order of the elements in this list will mark
   * priorities. For example: the first element will be primary DNS and the
   * second element will be secondary DNS.
   *
   * If empty, an automatic DNS address given by the network will be used.
   *
   * @generated from field: repeated string dns_addresses = 1;
   */
  dnsAddresses: string[] = [];

  constructor(data?: PartialMessage<DNSSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.DNSSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dns_addresses", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DNSSettings {
    return new DNSSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DNSSettings {
    return new DNSSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DNSSettings {
    return new DNSSettings().fromJsonString(jsonString, options);
  }

  static equals(a: DNSSettings | PlainMessage<DNSSettings> | undefined, b: DNSSettings | PlainMessage<DNSSettings> | undefined): boolean {
    return proto3.util.equals(DNSSettings, a, b);
  }
}

/**
 * The request message for [CreateGateway][salto.nebula.gateway.v1.GatewayService.CreateGateway]
 *
 * @generated from message salto.nebula.gateway.v1.CreateGatewayRequest
 */
export class CreateGatewayRequest extends Message<CreateGatewayRequest> {
  /**
   * Resource name of the parent resource where to create the gateway. For
   * example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The gateway ID to use for this gateway. In case it's empty the
   * server will autogenerate a unique identifier.
   *
   * @generated from field: optional string gateway_id = 2;
   */
  gatewayId?: string;

  /**
   * The gateway resource to be created. Client must not set the
   * `Gateway.name` field.
   *
   * @generated from field: salto.nebula.gateway.v1.Gateway gateway = 3;
   */
  gateway?: Gateway;

  constructor(data?: PartialMessage<CreateGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.CreateGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "gateway_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "gateway", kind: "message", T: Gateway },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGatewayRequest {
    return new CreateGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGatewayRequest {
    return new CreateGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGatewayRequest {
    return new CreateGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateGatewayRequest | PlainMessage<CreateGatewayRequest> | undefined, b: CreateGatewayRequest | PlainMessage<CreateGatewayRequest> | undefined): boolean {
    return proto3.util.equals(CreateGatewayRequest, a, b);
  }
}

/**
 * The request message for [GetGateway][salto.nebula.gateway.v1.GatewayService.GetGateway]
 *
 * @generated from message salto.nebula.gateway.v1.GetGatewayRequest
 */
export class GetGatewayRequest extends Message<GetGatewayRequest> {
  /**
   * The name of the requested gateway resource. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.GetGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGatewayRequest {
    return new GetGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGatewayRequest {
    return new GetGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGatewayRequest {
    return new GetGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetGatewayRequest | PlainMessage<GetGatewayRequest> | undefined, b: GetGatewayRequest | PlainMessage<GetGatewayRequest> | undefined): boolean {
    return proto3.util.equals(GetGatewayRequest, a, b);
  }
}

/**
 * The request message for [ListGateways][salto.nebula.gateway.v1.GatewayService.ListGateways]
 *
 * @generated from message salto.nebula.gateway.v1.ListGatewaysRequest
 */
export class ListGatewaysRequest extends Message<ListGatewaysRequest> {
  /**
   * The parent resource name. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which gateways to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListGatewaysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ListGatewaysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGatewaysRequest {
    return new ListGatewaysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGatewaysRequest {
    return new ListGatewaysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGatewaysRequest {
    return new ListGatewaysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListGatewaysRequest | PlainMessage<ListGatewaysRequest> | undefined, b: ListGatewaysRequest | PlainMessage<ListGatewaysRequest> | undefined): boolean {
    return proto3.util.equals(ListGatewaysRequest, a, b);
  }
}

/**
 * The response message for [ListGateways][salto.nebula.gateway.v1.GatewayService.ListGateways]
 *
 * @generated from message salto.nebula.gateway.v1.ListGatewaysResponse
 */
export class ListGatewaysResponse extends Message<ListGatewaysResponse> {
  /**
   * The field name should match the noun `gateways` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.gateway.v1.Gateway gateways = 1;
   */
  gateways: Gateway[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListGatewaysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ListGatewaysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "gateways", kind: "message", T: Gateway, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGatewaysResponse {
    return new ListGatewaysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGatewaysResponse {
    return new ListGatewaysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGatewaysResponse {
    return new ListGatewaysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListGatewaysResponse | PlainMessage<ListGatewaysResponse> | undefined, b: ListGatewaysResponse | PlainMessage<ListGatewaysResponse> | undefined): boolean {
    return proto3.util.equals(ListGatewaysResponse, a, b);
  }
}

/**
 * The request message for [UpdateGateway][salto.nebula.gateway.v1.GatewayService.UpdateGateway]
 *
 * @generated from message salto.nebula.gateway.v1.UpdateGatewayRequest
 */
export class UpdateGatewayRequest extends Message<UpdateGatewayRequest> {
  /**
   * The gateway resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.gateway.v1.Gateway gateway = 1;
   */
  gateway?: Gateway;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.UpdateGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "gateway", kind: "message", T: Gateway },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGatewayRequest {
    return new UpdateGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGatewayRequest {
    return new UpdateGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGatewayRequest {
    return new UpdateGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGatewayRequest | PlainMessage<UpdateGatewayRequest> | undefined, b: UpdateGatewayRequest | PlainMessage<UpdateGatewayRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGatewayRequest, a, b);
  }
}

/**
 * The request message for [DeleteGateway][salto.nebula.gateway.v1.GatewayService.DeleteGateway]
 *
 * @generated from message salto.nebula.gateway.v1.DeleteGatewayRequest
 */
export class DeleteGatewayRequest extends Message<DeleteGatewayRequest> {
  /**
   * The resource name of the gateway to be deleted. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.DeleteGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteGatewayRequest {
    return new DeleteGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteGatewayRequest {
    return new DeleteGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteGatewayRequest {
    return new DeleteGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteGatewayRequest | PlainMessage<DeleteGatewayRequest> | undefined, b: DeleteGatewayRequest | PlainMessage<DeleteGatewayRequest> | undefined): boolean {
    return proto3.util.equals(DeleteGatewayRequest, a, b);
  }
}

/**
 * The request message for [`BindGateway`][salto.nebula.gateway.v1.GatewayService.BindGateway]
 *
 * @generated from message salto.nebula.gateway.v1.BindGatewayRequest
 */
export class BindGatewayRequest extends Message<BindGatewayRequest> {
  /**
   * The resource name of the gateway to be bound. For example:
   * `installations/surelock-homes-hq/gateways/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: string device_id = 2;
   */
  deviceId = "";

  constructor(data?: PartialMessage<BindGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.BindGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindGatewayRequest {
    return new BindGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindGatewayRequest {
    return new BindGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindGatewayRequest {
    return new BindGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BindGatewayRequest | PlainMessage<BindGatewayRequest> | undefined, b: BindGatewayRequest | PlainMessage<BindGatewayRequest> | undefined): boolean {
    return proto3.util.equals(BindGatewayRequest, a, b);
  }
}

/**
 * The empty response message for [`BindGateway`][salto.nebula.gateway.v1.GatewayService.BindGateway]
 *
 * @generated from message salto.nebula.gateway.v1.BindGatewayResponse
 */
export class BindGatewayResponse extends Message<BindGatewayResponse> {
  constructor(data?: PartialMessage<BindGatewayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.BindGatewayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindGatewayResponse {
    return new BindGatewayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindGatewayResponse {
    return new BindGatewayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindGatewayResponse {
    return new BindGatewayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BindGatewayResponse | PlainMessage<BindGatewayResponse> | undefined, b: BindGatewayResponse | PlainMessage<BindGatewayResponse> | undefined): boolean {
    return proto3.util.equals(BindGatewayResponse, a, b);
  }
}

/**
 * The request message for [`UnbindGateway`][salto.nebula.gateway.v1.GatewayService.UnbindGateway]
 *
 * @generated from message salto.nebula.gateway.v1.UnbindGatewayRequest
 */
export class UnbindGatewayRequest extends Message<UnbindGatewayRequest> {
  /**
   * The resource name of the gateway to be unbound. For example:
   * `installations/surelock-homes-hq/gateways/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * If set to true, the device identifier is removed (unbound) from the
   * gateway. Otherwise, the request will only work if the gateway
   * isn't bound to any previous device identifier.
   *
   * @generated from field: bool force = 2;
   */
  force = false;

  constructor(data?: PartialMessage<UnbindGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.UnbindGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindGatewayRequest {
    return new UnbindGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindGatewayRequest {
    return new UnbindGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindGatewayRequest {
    return new UnbindGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindGatewayRequest | PlainMessage<UnbindGatewayRequest> | undefined, b: UnbindGatewayRequest | PlainMessage<UnbindGatewayRequest> | undefined): boolean {
    return proto3.util.equals(UnbindGatewayRequest, a, b);
  }
}

/**
 * The empty response message for [`UnbindGateway`][salto.nebula.gateway.v1.GatewayService.UnbindGateway]
 *
 * @generated from message salto.nebula.gateway.v1.UnbindGatewayResponse
 */
export class UnbindGatewayResponse extends Message<UnbindGatewayResponse> {
  constructor(data?: PartialMessage<UnbindGatewayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.UnbindGatewayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindGatewayResponse {
    return new UnbindGatewayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindGatewayResponse {
    return new UnbindGatewayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindGatewayResponse {
    return new UnbindGatewayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindGatewayResponse | PlainMessage<UnbindGatewayResponse> | undefined, b: UnbindGatewayResponse | PlainMessage<UnbindGatewayResponse> | undefined): boolean {
    return proto3.util.equals(UnbindGatewayResponse, a, b);
  }
}

/**
 * The request message for [`InitializeGateway`][salto.nebula.gateway.v1.GatewayService.InitializeGateway]
 *
 * @generated from message salto.nebula.gateway.v1.InitializeGatewayRequest
 */
export class InitializeGatewayRequest extends Message<InitializeGatewayRequest> {
  /**
   * The resource name of the gateway to be initialized. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<InitializeGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.InitializeGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeGatewayRequest {
    return new InitializeGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeGatewayRequest {
    return new InitializeGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeGatewayRequest {
    return new InitializeGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeGatewayRequest | PlainMessage<InitializeGatewayRequest> | undefined, b: InitializeGatewayRequest | PlainMessage<InitializeGatewayRequest> | undefined): boolean {
    return proto3.util.equals(InitializeGatewayRequest, a, b);
  }
}

/**
 * The empty response message for [`InitializeGateway`][salto.nebula.gateway.v1.GatewayService.InitializeGateway]
 *
 * @generated from message salto.nebula.gateway.v1.InitializeGatewayResponse
 */
export class InitializeGatewayResponse extends Message<InitializeGatewayResponse> {
  constructor(data?: PartialMessage<InitializeGatewayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.InitializeGatewayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeGatewayResponse {
    return new InitializeGatewayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeGatewayResponse {
    return new InitializeGatewayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeGatewayResponse {
    return new InitializeGatewayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeGatewayResponse | PlainMessage<InitializeGatewayResponse> | undefined, b: InitializeGatewayResponse | PlainMessage<InitializeGatewayResponse> | undefined): boolean {
    return proto3.util.equals(InitializeGatewayResponse, a, b);
  }
}

/**
 * The metadata message for [`InitializeGateway`][salto.nebula.gateway.v1.GatewayService.InitializeGateway]
 *
 * @generated from message salto.nebula.gateway.v1.InitializeGatewayMetadata
 */
export class InitializeGatewayMetadata extends Message<InitializeGatewayMetadata> {
  constructor(data?: PartialMessage<InitializeGatewayMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.InitializeGatewayMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitializeGatewayMetadata {
    return new InitializeGatewayMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitializeGatewayMetadata {
    return new InitializeGatewayMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitializeGatewayMetadata {
    return new InitializeGatewayMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: InitializeGatewayMetadata | PlainMessage<InitializeGatewayMetadata> | undefined, b: InitializeGatewayMetadata | PlainMessage<InitializeGatewayMetadata> | undefined): boolean {
    return proto3.util.equals(InitializeGatewayMetadata, a, b);
  }
}

/**
 * The request message for [`ConfigureGateway`][salto.nebula.gateway.v1.GatewayService.ConfigureGateway]
 *
 * @generated from message salto.nebula.gateway.v1.ConfigureGatewayRequest
 */
export class ConfigureGatewayRequest extends Message<ConfigureGatewayRequest> {
  /**
   * The resource name of the gateway to be configured. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ConfigureGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ConfigureGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureGatewayRequest {
    return new ConfigureGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureGatewayRequest {
    return new ConfigureGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureGatewayRequest {
    return new ConfigureGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureGatewayRequest | PlainMessage<ConfigureGatewayRequest> | undefined, b: ConfigureGatewayRequest | PlainMessage<ConfigureGatewayRequest> | undefined): boolean {
    return proto3.util.equals(ConfigureGatewayRequest, a, b);
  }
}

/**
 * The empty response message for [`ConfigureGateway`][salto.nebula.gateway.v1.GatewayService.ConfigureGateway]
 *
 * @generated from message salto.nebula.gateway.v1.ConfigureGatewayResponse
 */
export class ConfigureGatewayResponse extends Message<ConfigureGatewayResponse> {
  constructor(data?: PartialMessage<ConfigureGatewayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ConfigureGatewayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureGatewayResponse {
    return new ConfigureGatewayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureGatewayResponse {
    return new ConfigureGatewayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureGatewayResponse {
    return new ConfigureGatewayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureGatewayResponse | PlainMessage<ConfigureGatewayResponse> | undefined, b: ConfigureGatewayResponse | PlainMessage<ConfigureGatewayResponse> | undefined): boolean {
    return proto3.util.equals(ConfigureGatewayResponse, a, b);
  }
}

/**
 * The metadata message for [`ConfigureGateway`][salto.nebula.gateway.v1.GatewayService.ConfigureGateway]
 *
 * @generated from message salto.nebula.gateway.v1.ConfigureGatewayMetadata
 */
export class ConfigureGatewayMetadata extends Message<ConfigureGatewayMetadata> {
  constructor(data?: PartialMessage<ConfigureGatewayMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ConfigureGatewayMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureGatewayMetadata {
    return new ConfigureGatewayMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureGatewayMetadata {
    return new ConfigureGatewayMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureGatewayMetadata {
    return new ConfigureGatewayMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureGatewayMetadata | PlainMessage<ConfigureGatewayMetadata> | undefined, b: ConfigureGatewayMetadata | PlainMessage<ConfigureGatewayMetadata> | undefined): boolean {
    return proto3.util.equals(ConfigureGatewayMetadata, a, b);
  }
}

/**
 * The request message for [`ResetGateway`][salto.nebula.gateway.v1.GatewayService.ResetGateway]
 *
 * @generated from message salto.nebula.gateway.v1.ResetGatewayRequest
 */
export class ResetGatewayRequest extends Message<ResetGatewayRequest> {
  /**
   * The resource name of the gateway to be reset. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ResetGatewayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ResetGatewayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetGatewayRequest {
    return new ResetGatewayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetGatewayRequest {
    return new ResetGatewayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetGatewayRequest {
    return new ResetGatewayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetGatewayRequest | PlainMessage<ResetGatewayRequest> | undefined, b: ResetGatewayRequest | PlainMessage<ResetGatewayRequest> | undefined): boolean {
    return proto3.util.equals(ResetGatewayRequest, a, b);
  }
}

/**
 * The empty response message for [`ResetGateway`][salto.nebula.gateway.v1.GatewayService.ResetGateway]
 *
 * @generated from message salto.nebula.gateway.v1.ResetGatewayResponse
 */
export class ResetGatewayResponse extends Message<ResetGatewayResponse> {
  constructor(data?: PartialMessage<ResetGatewayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ResetGatewayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetGatewayResponse {
    return new ResetGatewayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetGatewayResponse {
    return new ResetGatewayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetGatewayResponse {
    return new ResetGatewayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetGatewayResponse | PlainMessage<ResetGatewayResponse> | undefined, b: ResetGatewayResponse | PlainMessage<ResetGatewayResponse> | undefined): boolean {
    return proto3.util.equals(ResetGatewayResponse, a, b);
  }
}

/**
 * The metadata message for [`ResetGateway`][salto.nebula.gateway.v1.GatewayService.ResetGateway]
 *
 * @generated from message salto.nebula.gateway.v1.ResetGatewayMetadata
 */
export class ResetGatewayMetadata extends Message<ResetGatewayMetadata> {
  constructor(data?: PartialMessage<ResetGatewayMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.ResetGatewayMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetGatewayMetadata {
    return new ResetGatewayMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetGatewayMetadata {
    return new ResetGatewayMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetGatewayMetadata {
    return new ResetGatewayMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ResetGatewayMetadata | PlainMessage<ResetGatewayMetadata> | undefined, b: ResetGatewayMetadata | PlainMessage<ResetGatewayMetadata> | undefined): boolean {
    return proto3.util.equals(ResetGatewayMetadata, a, b);
  }
}

/**
 * The request message for [`UpdateGatewayFirmware`][salto.nebula.gateway.v1.GatewayService.UpdateGatewayFirmware]
 *
 * @generated from message salto.nebula.gateway.v1.UpdateGatewayFirmwareRequest
 */
export class UpdateGatewayFirmwareRequest extends Message<UpdateGatewayFirmwareRequest> {
  /**
   * The resource name of the gateway whose firmware will be updated, for
   * example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string gateway = 1;
   */
  gateway = "";

  constructor(data?: PartialMessage<UpdateGatewayFirmwareRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.UpdateGatewayFirmwareRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "gateway", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGatewayFirmwareRequest {
    return new UpdateGatewayFirmwareRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGatewayFirmwareRequest {
    return new UpdateGatewayFirmwareRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGatewayFirmwareRequest {
    return new UpdateGatewayFirmwareRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGatewayFirmwareRequest | PlainMessage<UpdateGatewayFirmwareRequest> | undefined, b: UpdateGatewayFirmwareRequest | PlainMessage<UpdateGatewayFirmwareRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGatewayFirmwareRequest, a, b);
  }
}

/**
 * The response message for [`UpdateGatewayFirmware`][salto.nebula.gateway.v1.GatewayService.UpdateGatewayFirmware]
 *
 * @generated from message salto.nebula.gateway.v1.UpdateGatewayFirmwareResponse
 */
export class UpdateGatewayFirmwareResponse extends Message<UpdateGatewayFirmwareResponse> {
  constructor(data?: PartialMessage<UpdateGatewayFirmwareResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.UpdateGatewayFirmwareResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGatewayFirmwareResponse {
    return new UpdateGatewayFirmwareResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGatewayFirmwareResponse {
    return new UpdateGatewayFirmwareResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGatewayFirmwareResponse {
    return new UpdateGatewayFirmwareResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGatewayFirmwareResponse | PlainMessage<UpdateGatewayFirmwareResponse> | undefined, b: UpdateGatewayFirmwareResponse | PlainMessage<UpdateGatewayFirmwareResponse> | undefined): boolean {
    return proto3.util.equals(UpdateGatewayFirmwareResponse, a, b);
  }
}

/**
 * The metadata message for [`UpdateGatewayFirmware`][salto.nebula.gateway.v1.GatewayService.UpdateGatewayFirmware]
 *
 * @generated from message salto.nebula.gateway.v1.UpdateGatewayFirmwareMetadata
 */
export class UpdateGatewayFirmwareMetadata extends Message<UpdateGatewayFirmwareMetadata> {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent = 0;

  constructor(data?: PartialMessage<UpdateGatewayFirmwareMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.UpdateGatewayFirmwareMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "progress_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGatewayFirmwareMetadata {
    return new UpdateGatewayFirmwareMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGatewayFirmwareMetadata {
    return new UpdateGatewayFirmwareMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGatewayFirmwareMetadata {
    return new UpdateGatewayFirmwareMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGatewayFirmwareMetadata | PlainMessage<UpdateGatewayFirmwareMetadata> | undefined, b: UpdateGatewayFirmwareMetadata | PlainMessage<UpdateGatewayFirmwareMetadata> | undefined): boolean {
    return proto3.util.equals(UpdateGatewayFirmwareMetadata, a, b);
  }
}

/**
 * The request message for [`GenerateAuthorizationToken`][salto.nebula.gateway.v1.GatewayService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.gateway.v1.GenerateAuthorizationTokenRequest
 */
export class GenerateAuthorizationTokenRequest extends Message<GenerateAuthorizationTokenRequest> {
  /**
   * The resource name of the gateway that the authorization token is
   * generated for. For example:
   * `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string gateway = 1;
   */
  gateway = "";

  constructor(data?: PartialMessage<GenerateAuthorizationTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.GenerateAuthorizationTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "gateway", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenRequest {
    return new GenerateAuthorizationTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthorizationTokenRequest | PlainMessage<GenerateAuthorizationTokenRequest> | undefined, b: GenerateAuthorizationTokenRequest | PlainMessage<GenerateAuthorizationTokenRequest> | undefined): boolean {
    return proto3.util.equals(GenerateAuthorizationTokenRequest, a, b);
  }
}

/**
 * The response message for [`GenerateAuthorizationToken`][salto.nebula.gateway.v1.GatewayService.GenerateAuthorizationToken]
 *
 * @generated from message salto.nebula.gateway.v1.GenerateAuthorizationTokenResponse
 */
export class GenerateAuthorizationTokenResponse extends Message<GenerateAuthorizationTokenResponse> {
  /**
   * Authorization token to be used for connecting against a gateway.
   *
   * @generated from field: bytes authorization_token = 1;
   */
  authorizationToken = new Uint8Array(0);

  constructor(data?: PartialMessage<GenerateAuthorizationTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.GenerateAuthorizationTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authorization_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthorizationTokenResponse {
    return new GenerateAuthorizationTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthorizationTokenResponse | PlainMessage<GenerateAuthorizationTokenResponse> | undefined, b: GenerateAuthorizationTokenResponse | PlainMessage<GenerateAuthorizationTokenResponse> | undefined): boolean {
    return proto3.util.equals(GenerateAuthorizationTokenResponse, a, b);
  }
}

/**
 * The request message for [`GenerateFirmwareDownloadUri`][salto.nebula.gateway.v1.GatewayService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.gateway.v1.GenerateFirmwareDownloadUriRequest
 */
export class GenerateFirmwareDownloadUriRequest extends Message<GenerateFirmwareDownloadUriRequest> {
  /**
   * The resource name of the gateway to get the firmware download URI.
   * For example: `installations/surelock-homes-hq/gateways/conan-doyle`.
   *
   * @generated from field: string gateway = 1;
   */
  gateway = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.GenerateFirmwareDownloadUriRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "gateway", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined, b: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriRequest, a, b);
  }
}

/**
 * The response message for [`GenerateFirmwareDownloadUri`][salto.nebula.gateway.v1.GatewayService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.gateway.v1.GenerateFirmwareDownloadUriResponse
 */
export class GenerateFirmwareDownloadUriResponse extends Message<GenerateFirmwareDownloadUriResponse> {
  /**
   * The URI to download the firmware bundle. The URI will be valid for 15
   * minutes.
   *
   * @generated from field: string download_uri = 1;
   */
  downloadUri = "";

  /**
   * Digest of the file to be download. This can be used to cache the file and
   * avoid downloading it multiple times.
   * The digest has the following format: `<algorithm>:<digest>`.
   * For example: `sha256:8ff2483f2fbaa6c8dfd4e3556dbde298eb5e342b5e46f84eabdccc8e1cbe2d5a`.
   *
   * @generated from field: string digest = 2;
   */
  digest = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.GenerateFirmwareDownloadUriResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "digest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined, b: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriResponse, a, b);
  }
}

/**
 * The metadata message for [`GenerateFirmwareDownloadUri`][salto.nebula.gateway.v1.GatewayService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.gateway.v1.GenerateFirmwareDownloadUriMetadata
 */
export class GenerateFirmwareDownloadUriMetadata extends Message<GenerateFirmwareDownloadUriMetadata> {
  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.gateway.v1.GenerateFirmwareDownloadUriMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined, b: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriMetadata, a, b);
  }
}

