// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/extender/v1/extender.proto (package salto.nebula.extender.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";

/**
 * The extender object
 *
 * @generated from message salto.nebula.extender.v1.Extender
 */
export class Extender extends Message<Extender> {
  /**
   * Output only. Resource name of the extender. It must have the format of
   * `installations/*\/extenders/*`. For example:
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the extender.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, encoders and so on.
   *
   * @generated from field: optional string device_id = 3;
   */
  deviceId?: string;

  /**
   * Parent device name, could be a `Gateway` or an `Extender` and takes the
   * form of a relative resource name:
   * `installations/surelock-homes-hq/gateways/conan-doyle` or
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from oneof salto.nebula.extender.v1.Extender.parent_device
   */
  parentDevice: {
    /**
     * Parent name, when extender is connected to a gateway
     *
     * @generated from field: string gateway = 4;
     */
    value: string;
    case: "gateway";
  } | {
    /**
     * Parent name, when extender is connected to an extender
     *
     * @generated from field: string extender = 5;
     */
    value: string;
    case: "extender";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Extender>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.Extender";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "gateway", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parent_device" },
    { no: 5, name: "extender", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parent_device" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Extender {
    return new Extender().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Extender {
    return new Extender().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Extender {
    return new Extender().fromJsonString(jsonString, options);
  }

  static equals(a: Extender | PlainMessage<Extender> | undefined, b: Extender | PlainMessage<Extender> | undefined): boolean {
    return proto3.util.equals(Extender, a, b);
  }
}

/**
 * The request message for [CreateExtender][salto.nebula.extender.v1.ExtenderService.CreateExtender]
 *
 * @generated from message salto.nebula.extender.v1.CreateExtenderRequest
 */
export class CreateExtenderRequest extends Message<CreateExtenderRequest> {
  /**
   * Resource name of the parent resource where to create the extender. For
   * example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The extender ID to use for this extender. In case it's empty
   * the server will autogenerate a unique identifier.
   *
   * @generated from field: optional string extender_id = 2;
   */
  extenderId?: string;

  /**
   * The extender resource to be created. Client must not set the
   * `Extender.name` field.
   *
   * @generated from field: salto.nebula.extender.v1.Extender extender = 3;
   */
  extender?: Extender;

  constructor(data?: PartialMessage<CreateExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.CreateExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "extender_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "extender", kind: "message", T: Extender },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateExtenderRequest {
    return new CreateExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateExtenderRequest {
    return new CreateExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateExtenderRequest {
    return new CreateExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateExtenderRequest | PlainMessage<CreateExtenderRequest> | undefined, b: CreateExtenderRequest | PlainMessage<CreateExtenderRequest> | undefined): boolean {
    return proto3.util.equals(CreateExtenderRequest, a, b);
  }
}

/**
 * The request message for [GetExtender][salto.nebula.extender.v1.ExtenderService.GetExtender]
 *
 * @generated from message salto.nebula.extender.v1.GetExtenderRequest
 */
export class GetExtenderRequest extends Message<GetExtenderRequest> {
  /**
   * The name of the requested extender resource. For example:
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.GetExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExtenderRequest {
    return new GetExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExtenderRequest {
    return new GetExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExtenderRequest {
    return new GetExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetExtenderRequest | PlainMessage<GetExtenderRequest> | undefined, b: GetExtenderRequest | PlainMessage<GetExtenderRequest> | undefined): boolean {
    return proto3.util.equals(GetExtenderRequest, a, b);
  }
}

/**
 * The request message for [ListExtenders][salto.nebula.extender.v1.ExtenderService.ListExtenders]
 *
 * @generated from message salto.nebula.extender.v1.ListExtendersRequest
 */
export class ListExtendersRequest extends Message<ListExtendersRequest> {
  /**
   * The parent resource name. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which extenders to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListExtendersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.ListExtendersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListExtendersRequest {
    return new ListExtendersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListExtendersRequest {
    return new ListExtendersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListExtendersRequest {
    return new ListExtendersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListExtendersRequest | PlainMessage<ListExtendersRequest> | undefined, b: ListExtendersRequest | PlainMessage<ListExtendersRequest> | undefined): boolean {
    return proto3.util.equals(ListExtendersRequest, a, b);
  }
}

/**
 * The response message for [ListExtenders][salto.nebula.extender.v1.ExtenderService.ListExtenders]
 *
 * @generated from message salto.nebula.extender.v1.ListExtendersResponse
 */
export class ListExtendersResponse extends Message<ListExtendersResponse> {
  /**
   * The field name should match the noun `extenders` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.extender.v1.Extender extenders = 1;
   */
  extenders: Extender[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListExtendersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.ListExtendersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "extenders", kind: "message", T: Extender, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListExtendersResponse {
    return new ListExtendersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListExtendersResponse {
    return new ListExtendersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListExtendersResponse {
    return new ListExtendersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListExtendersResponse | PlainMessage<ListExtendersResponse> | undefined, b: ListExtendersResponse | PlainMessage<ListExtendersResponse> | undefined): boolean {
    return proto3.util.equals(ListExtendersResponse, a, b);
  }
}

/**
 * The response message for [UpdateExtender][salto.nebula.extender.v1.ExtenderService.UpdateExtender]
 *
 * @generated from message salto.nebula.extender.v1.UpdateExtenderRequest
 */
export class UpdateExtenderRequest extends Message<UpdateExtenderRequest> {
  /**
   * The extender resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.extender.v1.Extender extender = 1;
   */
  extender?: Extender;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.UpdateExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "extender", kind: "message", T: Extender },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExtenderRequest {
    return new UpdateExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExtenderRequest {
    return new UpdateExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExtenderRequest {
    return new UpdateExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateExtenderRequest | PlainMessage<UpdateExtenderRequest> | undefined, b: UpdateExtenderRequest | PlainMessage<UpdateExtenderRequest> | undefined): boolean {
    return proto3.util.equals(UpdateExtenderRequest, a, b);
  }
}

/**
 * The response message for [DeleteExtender][salto.nebula.extender.v1.ExtenderService.DeleteExtender]
 *
 * @generated from message salto.nebula.extender.v1.DeleteExtenderRequest
 */
export class DeleteExtenderRequest extends Message<DeleteExtenderRequest> {
  /**
   * The resource name of the extender to be deleted. For example:
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.DeleteExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteExtenderRequest {
    return new DeleteExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteExtenderRequest {
    return new DeleteExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteExtenderRequest {
    return new DeleteExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteExtenderRequest | PlainMessage<DeleteExtenderRequest> | undefined, b: DeleteExtenderRequest | PlainMessage<DeleteExtenderRequest> | undefined): boolean {
    return proto3.util.equals(DeleteExtenderRequest, a, b);
  }
}

/**
 * The request message for [`BindExtender`][salto.nebula.extender.v1.ExtenderService.BindExtender]
 *
 * @generated from message salto.nebula.extender.v1.BindExtenderRequest
 */
export class BindExtenderRequest extends Message<BindExtenderRequest> {
  /**
   * The resource name of the extender to be bound. For example:
   * `installations/surelock-homes-hq/extenders/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: string device_id = 2;
   */
  deviceId = "";

  constructor(data?: PartialMessage<BindExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.BindExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindExtenderRequest {
    return new BindExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindExtenderRequest {
    return new BindExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindExtenderRequest {
    return new BindExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BindExtenderRequest | PlainMessage<BindExtenderRequest> | undefined, b: BindExtenderRequest | PlainMessage<BindExtenderRequest> | undefined): boolean {
    return proto3.util.equals(BindExtenderRequest, a, b);
  }
}

/**
 * The empty response message for [`BindExtender`][salto.nebula.extender.v1.ExtenderService.BindExtender]
 *
 * @generated from message salto.nebula.extender.v1.BindExtenderResponse
 */
export class BindExtenderResponse extends Message<BindExtenderResponse> {
  constructor(data?: PartialMessage<BindExtenderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.BindExtenderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindExtenderResponse {
    return new BindExtenderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindExtenderResponse {
    return new BindExtenderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindExtenderResponse {
    return new BindExtenderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BindExtenderResponse | PlainMessage<BindExtenderResponse> | undefined, b: BindExtenderResponse | PlainMessage<BindExtenderResponse> | undefined): boolean {
    return proto3.util.equals(BindExtenderResponse, a, b);
  }
}

/**
 * The request message for [`UnbindExtender`][salto.nebula.extender.v1.ExtenderService.UnbindExtender]
 *
 * @generated from message salto.nebula.extender.v1.UnbindExtenderRequest
 */
export class UnbindExtenderRequest extends Message<UnbindExtenderRequest> {
  /**
   * The resource name of the gateway to be unbound. For example:
   * `installations/surelock-homes-hq/extenders/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<UnbindExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.UnbindExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindExtenderRequest {
    return new UnbindExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindExtenderRequest {
    return new UnbindExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindExtenderRequest {
    return new UnbindExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindExtenderRequest | PlainMessage<UnbindExtenderRequest> | undefined, b: UnbindExtenderRequest | PlainMessage<UnbindExtenderRequest> | undefined): boolean {
    return proto3.util.equals(UnbindExtenderRequest, a, b);
  }
}

/**
 * The empty response message for [`UnbindExtender`][salto.nebula.extender.v1.ExtenderService.UnbindExtender]
 *
 * @generated from message salto.nebula.extender.v1.UnbindExtenderResponse
 */
export class UnbindExtenderResponse extends Message<UnbindExtenderResponse> {
  constructor(data?: PartialMessage<UnbindExtenderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.UnbindExtenderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbindExtenderResponse {
    return new UnbindExtenderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbindExtenderResponse {
    return new UnbindExtenderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbindExtenderResponse {
    return new UnbindExtenderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnbindExtenderResponse | PlainMessage<UnbindExtenderResponse> | undefined, b: UnbindExtenderResponse | PlainMessage<UnbindExtenderResponse> | undefined): boolean {
    return proto3.util.equals(UnbindExtenderResponse, a, b);
  }
}

/**
 * The request message for [`UpdateExtenderFirmware`][salto.nebula.extender.v1.ExtenderService.UpdateExtenderFirmware]
 *
 * @generated from message salto.nebula.extender.v1.UpdateExtenderFirmwareRequest
 */
export class UpdateExtenderFirmwareRequest extends Message<UpdateExtenderFirmwareRequest> {
  /**
   * The resource name of the extender whose firmware will be updated, for
   * example:
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from field: string extender = 1;
   */
  extender = "";

  constructor(data?: PartialMessage<UpdateExtenderFirmwareRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.UpdateExtenderFirmwareRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "extender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExtenderFirmwareRequest {
    return new UpdateExtenderFirmwareRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExtenderFirmwareRequest {
    return new UpdateExtenderFirmwareRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExtenderFirmwareRequest {
    return new UpdateExtenderFirmwareRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateExtenderFirmwareRequest | PlainMessage<UpdateExtenderFirmwareRequest> | undefined, b: UpdateExtenderFirmwareRequest | PlainMessage<UpdateExtenderFirmwareRequest> | undefined): boolean {
    return proto3.util.equals(UpdateExtenderFirmwareRequest, a, b);
  }
}

/**
 * The response message for [`UpdateExtenderFirmware`][salto.nebula.extender.v1.ExtenderService.UpdateExtenderFirmware]
 *
 * @generated from message salto.nebula.extender.v1.UpdateExtenderFirmwareResponse
 */
export class UpdateExtenderFirmwareResponse extends Message<UpdateExtenderFirmwareResponse> {
  constructor(data?: PartialMessage<UpdateExtenderFirmwareResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.UpdateExtenderFirmwareResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExtenderFirmwareResponse {
    return new UpdateExtenderFirmwareResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExtenderFirmwareResponse {
    return new UpdateExtenderFirmwareResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExtenderFirmwareResponse {
    return new UpdateExtenderFirmwareResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateExtenderFirmwareResponse | PlainMessage<UpdateExtenderFirmwareResponse> | undefined, b: UpdateExtenderFirmwareResponse | PlainMessage<UpdateExtenderFirmwareResponse> | undefined): boolean {
    return proto3.util.equals(UpdateExtenderFirmwareResponse, a, b);
  }
}

/**
 * The metadata message for [`UpdateExtenderFirmware`][salto.nebula.extender.v1.ExtenderService.UpdateExtenderFirmware]
 *
 * @generated from message salto.nebula.extender.v1.UpdateExtenderFirmwareMetadata
 */
export class UpdateExtenderFirmwareMetadata extends Message<UpdateExtenderFirmwareMetadata> {
  /**
   * Progress of operation. Range: [0, 100].
   *
   * @generated from field: int32 progress_percent = 1;
   */
  progressPercent = 0;

  constructor(data?: PartialMessage<UpdateExtenderFirmwareMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.UpdateExtenderFirmwareMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "progress_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExtenderFirmwareMetadata {
    return new UpdateExtenderFirmwareMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExtenderFirmwareMetadata {
    return new UpdateExtenderFirmwareMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExtenderFirmwareMetadata {
    return new UpdateExtenderFirmwareMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateExtenderFirmwareMetadata | PlainMessage<UpdateExtenderFirmwareMetadata> | undefined, b: UpdateExtenderFirmwareMetadata | PlainMessage<UpdateExtenderFirmwareMetadata> | undefined): boolean {
    return proto3.util.equals(UpdateExtenderFirmwareMetadata, a, b);
  }
}

/**
 * The request message for [`ResetExtender`][salto.nebula.extender.v1.ExtenderService.ResetExtender]
 *
 * @generated from message salto.nebula.extender.v1.ResetExtenderRequest
 */
export class ResetExtenderRequest extends Message<ResetExtenderRequest> {
  /**
   * The resource name of the extender to be reset. For example:
   * `installations/surelock-homes-hq/extenders/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ResetExtenderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.ResetExtenderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetExtenderRequest {
    return new ResetExtenderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetExtenderRequest {
    return new ResetExtenderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetExtenderRequest {
    return new ResetExtenderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetExtenderRequest | PlainMessage<ResetExtenderRequest> | undefined, b: ResetExtenderRequest | PlainMessage<ResetExtenderRequest> | undefined): boolean {
    return proto3.util.equals(ResetExtenderRequest, a, b);
  }
}

/**
 * The empty response message for [`ResetExtender`][salto.nebula.extender.v1.ExtenderService.ResetExtender]
 *
 * @generated from message salto.nebula.extender.v1.ResetExtenderResponse
 */
export class ResetExtenderResponse extends Message<ResetExtenderResponse> {
  constructor(data?: PartialMessage<ResetExtenderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.ResetExtenderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetExtenderResponse {
    return new ResetExtenderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetExtenderResponse {
    return new ResetExtenderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetExtenderResponse {
    return new ResetExtenderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetExtenderResponse | PlainMessage<ResetExtenderResponse> | undefined, b: ResetExtenderResponse | PlainMessage<ResetExtenderResponse> | undefined): boolean {
    return proto3.util.equals(ResetExtenderResponse, a, b);
  }
}

/**
 * The metadata message for [`ResetExtender`][salto.nebula.extender.v1.ExtenderService.ResetExtender]
 *
 * @generated from message salto.nebula.extender.v1.ResetExtenderMetadata
 */
export class ResetExtenderMetadata extends Message<ResetExtenderMetadata> {
  constructor(data?: PartialMessage<ResetExtenderMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.ResetExtenderMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetExtenderMetadata {
    return new ResetExtenderMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetExtenderMetadata {
    return new ResetExtenderMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetExtenderMetadata {
    return new ResetExtenderMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ResetExtenderMetadata | PlainMessage<ResetExtenderMetadata> | undefined, b: ResetExtenderMetadata | PlainMessage<ResetExtenderMetadata> | undefined): boolean {
    return proto3.util.equals(ResetExtenderMetadata, a, b);
  }
}

/**
 * The request message for [`GenerateFirmwareDownloadUri`][salto.nebula.extender.v1.ExtenderService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.extender.v1.GenerateFirmwareDownloadUriRequest
 */
export class GenerateFirmwareDownloadUriRequest extends Message<GenerateFirmwareDownloadUriRequest> {
  /**
   * The resource name of the extender to get the firmware download URI.
   * For example: `installations/surelock-homes-hq/extenders/baker-street-entrance`.
   *
   * @generated from field: string extender = 1;
   */
  extender = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.GenerateFirmwareDownloadUriRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "extender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriRequest {
    return new GenerateFirmwareDownloadUriRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined, b: GenerateFirmwareDownloadUriRequest | PlainMessage<GenerateFirmwareDownloadUriRequest> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriRequest, a, b);
  }
}

/**
 * The response message for [`GenerateFirmwareDownloadUri`][salto.nebula.extender.v1.ExtenderService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.extender.v1.GenerateFirmwareDownloadUriResponse
 */
export class GenerateFirmwareDownloadUriResponse extends Message<GenerateFirmwareDownloadUriResponse> {
  /**
   * The URI to download the firmware bundle. The URI will be valid for 15
   * minutes.
   *
   * @generated from field: string download_uri = 1;
   */
  downloadUri = "";

  /**
   * Digest of the file to be download. This can be used to cache the file and
   * avoid downloading it multiple times.
   * The digest has the following format: `<algorithm>:<digest>`.
   * For example: `sha256:8ff2483f2fbaa6c8dfd4e3556dbde298eb5e342b5e46f84eabdccc8e1cbe2d5a`.
   *
   * @generated from field: string digest = 2;
   */
  digest = "";

  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.GenerateFirmwareDownloadUriResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "digest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriResponse {
    return new GenerateFirmwareDownloadUriResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined, b: GenerateFirmwareDownloadUriResponse | PlainMessage<GenerateFirmwareDownloadUriResponse> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriResponse, a, b);
  }
}

/**
 * The metadata message for [`GenerateFirmwareDownloadUri`][salto.nebula.extender.v1.ExtenderService.GenerateFirmwareDownloadUri]
 *
 * @generated from message salto.nebula.extender.v1.GenerateFirmwareDownloadUriMetadata
 */
export class GenerateFirmwareDownloadUriMetadata extends Message<GenerateFirmwareDownloadUriMetadata> {
  constructor(data?: PartialMessage<GenerateFirmwareDownloadUriMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.extender.v1.GenerateFirmwareDownloadUriMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateFirmwareDownloadUriMetadata {
    return new GenerateFirmwareDownloadUriMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined, b: GenerateFirmwareDownloadUriMetadata | PlainMessage<GenerateFirmwareDownloadUriMetadata> | undefined): boolean {
    return proto3.util.equals(GenerateFirmwareDownloadUriMetadata, a, b);
  }
}

