// @generated by protoc-gen-connect-es v1.3.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/extender/v1/extender.proto (package salto.nebula.extender.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BindExtenderRequest, BindExtenderResponse, CreateExtenderRequest, DeleteExtenderRequest, Extender, GetExtenderRequest, ListExtendersRequest, ListExtendersResponse, ResetExtenderRequest, UnbindExtenderRequest, UnbindExtenderResponse, UpdateExtenderFirmwareRequest, UpdateExtenderRequest } from "./extender_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { Operation } from "@saltoapis/longrunning-v1";

/**
 * An extender allows the distance between the a gateway and an electronic lock
 * to be extended. It forwards signals between an access point (lock) and a
 * gateway. This service is responsible for managing extender resources.
 *
 * @generated from service salto.nebula.extender.v1.ExtenderService
 */
export const ExtenderService = {
  typeName: "salto.nebula.extender.v1.ExtenderService",
  methods: {
    /**
     * Create an extender
     *
     * Creates a new extender
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.CreateExtender
     */
    createExtender: {
      name: "CreateExtender",
      I: CreateExtenderRequest,
      O: Extender,
      kind: MethodKind.Unary,
    },
    /**
     * Get an extender
     *
     * Gets an existing extender.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.GetExtender
     */
    getExtender: {
      name: "GetExtender",
      I: GetExtenderRequest,
      O: Extender,
      kind: MethodKind.Unary,
    },
    /**
     * List extenders
     *
     * Returns a list of extenders that have been previously created.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.ListExtenders
     */
    listExtenders: {
      name: "ListExtenders",
      I: ListExtendersRequest,
      O: ListExtendersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update an extender
     *
     * Updates an existing extender.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.UpdateExtender
     */
    updateExtender: {
      name: "UpdateExtender",
      I: UpdateExtenderRequest,
      O: Extender,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an extender
     *
     * Permanently deletes an extender. This cannot be undone.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.DeleteExtender
     */
    deleteExtender: {
      name: "DeleteExtender",
      I: DeleteExtenderRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Bind an extender
     *
     * Binds an extender. Binding an extender assigns a device
     * identifier to the extender.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.BindExtender
     */
    bindExtender: {
      name: "BindExtender",
      I: BindExtenderRequest,
      O: BindExtenderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Unbind an extender
     *
     * Unbinds an extender. Unbinding an extender removes the
     * device identifier from the extender.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.UnbindExtender
     */
    unbindExtender: {
      name: "UnbindExtender",
      I: UnbindExtenderRequest,
      O: UnbindExtenderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update extender firmware
     *
     * Updates an extender's firmware. SALTO provides firmware updates when
     * new functionality is available or when we fix a bug.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.UpdateExtenderFirmware
     */
    updateExtenderFirmware: {
      name: "UpdateExtenderFirmware",
      I: UpdateExtenderFirmwareRequest,
      O: Operation,
      kind: MethodKind.Unary,
    },
    /**
     * Reset an extender
     *
     * Resetting a device such as an extender means returning it to its
     * factory settings. Resetting is the process of removing the identity as
     * well as all the associated information of an already configured device.
     *
     * @generated from rpc salto.nebula.extender.v1.ExtenderService.ResetExtender
     */
    resetExtender: {
      name: "ResetExtender",
      I: ResetExtenderRequest,
      O: Operation,
      kind: MethodKind.Unary,
    },
  }
} as const;

