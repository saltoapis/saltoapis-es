// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/user/v1/user.proto (package salto.nebula.user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Schedule } from "@saltoapis/nebula-type";

/**
 * The user object
 *
 * @generated from message salto.nebula.user.v1.User
 */
export class User extends Message<User> {
  /**
   * Resource name of the user. It must have the format of
   * `installations/*\/users/*`. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   *
   * @generated from field: optional string parent = 2;
   */
  parent?: string;

  /**
   * The personal name, forename or given name ("first name"). It could
   * also contain a middle name. First name is not used because the given
   * name is not placed first in some cultures.
   *
   * @generated from field: string given_name = 3;
   */
  givenName = "";

  /**
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   *
   * @generated from field: optional string family_name = 4;
   */
  familyName?: string;

  /**
   * The display name of the user, formed by concatenating the first and last
   * name values.
   *
   * @generated from field: string display_name = 5;
   */
  displayName = "";

  /**
   * Email address.
   *
   * @generated from field: optional string email = 6;
   */
  email?: string;

  /**
   * Activation time independent of any time zone or calendar.
   *
   * @generated from field: google.protobuf.Timestamp activate_time = 7;
   */
  activateTime?: Timestamp;

  /**
   * Expiration time independent of any time zone or calendar.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 8;
   */
  expireTime?: Timestamp;

  /**
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   *
   * @generated from field: optional string photo = 9;
   */
  photo?: string;

  /**
   * The URI to view the user photo.
   *
   * @generated from field: string photo_uri = 10;
   */
  photoUri = "";

  /**
   * The card key resource that belongs to the user.
   *
   * @generated from field: salto.nebula.user.v1.CardKey card_key = 11;
   */
  cardKey?: CardKey;

  /**
   * The app key resource that belongs to the user.
   *
   * @generated from field: salto.nebula.user.v1.AppKey app_key = 12;
   */
  appKey?: AppKey;

  /**
   * The wallet key resource that belongs to the user.
   *
   * @generated from field: salto.nebula.user.v1.WalletKey wallet_key = 13;
   */
  walletKey?: WalletKey;

  /**
   * The passcode resource that belongs to the user.
   *
   * @generated from field: salto.nebula.user.v1.Passcode passcode = 15;
   */
  passcode?: Passcode;

  /**
   * Indicates whether this user is blocked or not. A blocked user cannot
   * perform any admin actions, that is, if they have a management role this
   * will no longer be valid. If the user has a key then it will no longer
   * unlock access points.
   *
   * @generated from field: bool blocked = 14;
   */
  blocked = false;

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "given_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "family_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "activate_time", kind: "message", T: Timestamp },
    { no: 8, name: "expire_time", kind: "message", T: Timestamp },
    { no: 9, name: "photo", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "photo_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "card_key", kind: "message", T: CardKey },
    { no: 12, name: "app_key", kind: "message", T: AppKey },
    { no: 13, name: "wallet_key", kind: "message", T: WalletKey },
    { no: 15, name: "passcode", kind: "message", T: Passcode },
    { no: 14, name: "blocked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}

/**
 * The user's access right association
 *
 * @generated from message salto.nebula.user.v1.UserAccessRight
 */
export class UserAccessRight extends Message<UserAccessRight> {
  /**
   * Resource name of the user's access right association. It
   * must have the format of `installations/*\/users/*\/access-rights/*`. For
   * example:
   * `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The access right resource name to bind as an association to the parent
   * access point. For example:
   * `installations/surelock-homes-hq/access-rights/baskerville`.
   *
   * @generated from field: string access_right = 2;
   */
  accessRight = "";

  /**
   * Display name of the associated entity. In this case an access right.
   *
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * The schedules for the user's access right. If set, this can only be more
   * restrictive than the schedules defined in the associated access right.
   *
   * @generated from field: repeated salto.nebula.type.Schedule schedules = 4;
   */
  schedules: Schedule[] = [];

  /**
   * The computed effective schedules for the user's access right based on the
   * given parent resource.
   *
   * @generated from field: repeated salto.nebula.type.Schedule effective_schedules = 5;
   */
  effectiveSchedules: Schedule[] = [];

  /**
   * Activation time independent of any time zone or calendar.
   * User access right's association activation time rules:
   * 1. Activation time must be specified in multiples of 10 minutes.
   *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
   * 2. If no activation time is provided, the current time is used, truncated to the nearest earlier multiple of 10 minutes.
   *    For example, if the current time is 14:46, the system will use 14:40.
   *
   * @generated from field: optional google.protobuf.Timestamp activate_time = 6;
   */
  activateTime?: Timestamp;

  /**
   * Expiration time independent of any time zone or calendar.
   * User access right's association expiration time rules:
   * 1. Expiration time must be specified in multiples of 10 minutes.
   *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
   * 2. When specifying expiration time, it must:
   *    - Be at least 10 minutes after activation time.
   *    - Always be a multiple of 10 minutes. The system does not round or adjust expiration time for you.
   *      For example, if you attempt to set 10:15, the system will reject it.
   *
   * @generated from field: optional google.protobuf.Timestamp expire_time = 7;
   */
  expireTime?: Timestamp;

  constructor(data?: PartialMessage<UserAccessRight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.UserAccessRight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_right", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "schedules", kind: "message", T: Schedule, repeated: true },
    { no: 5, name: "effective_schedules", kind: "message", T: Schedule, repeated: true },
    { no: 6, name: "activate_time", kind: "message", T: Timestamp, opt: true },
    { no: 7, name: "expire_time", kind: "message", T: Timestamp, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAccessRight {
    return new UserAccessRight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAccessRight {
    return new UserAccessRight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAccessRight {
    return new UserAccessRight().fromJsonString(jsonString, options);
  }

  static equals(a: UserAccessRight | PlainMessage<UserAccessRight> | undefined, b: UserAccessRight | PlainMessage<UserAccessRight> | undefined): boolean {
    return proto3.util.equals(UserAccessRight, a, b);
  }
}

/**
 * Representation of a card key, belonging to a user
 *
 * @generated from message salto.nebula.user.v1.CardKey
 */
export class CardKey extends Message<CardKey> {
  /**
   * Output only. Resource name of the user's card key. It must have the
   * format of `installations/*\/users/*\/card-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Unique identifier of the physical card. Length dependent of technology.
   * Max length for ISO14443-3 is 10 bytes.
   *
   * @generated from field: string uid = 2;
   */
  uid = "";

  /**
   * Indicates whether this card key has been assigned, not assigned or is
   * active and ready for use. This field cannot be modified using a standard
   * [`UpdateCardKey`][salto.nebula.user.v1.UserService.UpdateCardKey]
   * operation. To change the value of this field, you must call
   * [`EncodeCardKey`][salto.nebula.user.v1.UserService.EncodeCardKey].
   *
   * If the value is `NOT_ASSIGNED` it also applies to cases where the
   * assignation process has been initiated, but not completed.
   *
   * @generated from field: salto.nebula.user.v1.CardKey.State state = 3;
   */
  state = CardKey_State.STATE_UNSPECIFIED;

  /**
   * Indicates whether this card key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateCardKey`][salto.nebula.user.v1.UserService.UpdateCardKey]
   * operation. To change the value of this field, you must call
   * [`OutdateCardKey`][salto.nebula.user.v1.UserService.OutdateCardKey].
   *
   * @generated from field: bool outdated = 4;
   */
  outdated = false;

  constructor(data?: PartialMessage<CardKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CardKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "state", kind: "enum", T: proto3.getEnumType(CardKey_State) },
    { no: 4, name: "outdated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CardKey {
    return new CardKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CardKey {
    return new CardKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CardKey {
    return new CardKey().fromJsonString(jsonString, options);
  }

  static equals(a: CardKey | PlainMessage<CardKey> | undefined, b: CardKey | PlainMessage<CardKey> | undefined): boolean {
    return proto3.util.equals(CardKey, a, b);
  }
}

/**
 * State for a card key.
 *
 * @generated from enum salto.nebula.user.v1.CardKey.State
 */
export enum CardKey_State {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted,
   * or is not applicable.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The card key is not assigned to a physical card.
   *
   * @generated from enum value: NOT_ASSIGNED = 1;
   */
  NOT_ASSIGNED = 1,

  /**
   * The card key is pending activation.
   *
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * The card key is active and ready to be used.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(CardKey_State)
proto3.util.setEnumType(CardKey_State, "salto.nebula.user.v1.CardKey.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "NOT_ASSIGNED" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ACTIVE" },
]);

/**
 * Representation of an app key, belonging to a user
 *
 * @generated from message salto.nebula.user.v1.AppKey
 */
export class AppKey extends Message<AppKey> {
  /**
   * Resource name of the user's app key. It must have the
   * format of `installations/*\/users/*\/app-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/app-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Indicates whether this app key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateAppKey`][salto.nebula.user.v1.UserService.UpdateAppKey]
   * operation. To change the value of this field, you must call
   * [`AssignAppKey`][salto.nebula.user.v1.UserService.AssignAppKey].
   *
   * @generated from field: salto.nebula.user.v1.AppKey.State state = 2;
   */
  state = AppKey_State.STATE_UNSPECIFIED;

  /**
   * Indicates whether this app key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateAppKey`][salto.nebula.user.v1.UserService.UpdateAppKey]
   * operation. To change the value of this field, you must call
   * [`OutdateAppKey`][salto.nebula.user.v1.UserService.OutdateAppKey].
   *
   * @generated from field: bool outdated = 3;
   */
  outdated = false;

  constructor(data?: PartialMessage<AppKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AppKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "state", kind: "enum", T: proto3.getEnumType(AppKey_State) },
    { no: 3, name: "outdated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppKey {
    return new AppKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppKey {
    return new AppKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppKey {
    return new AppKey().fromJsonString(jsonString, options);
  }

  static equals(a: AppKey | PlainMessage<AppKey> | undefined, b: AppKey | PlainMessage<AppKey> | undefined): boolean {
    return proto3.util.equals(AppKey, a, b);
  }
}

/**
 * State for an app key.
 *
 * @generated from enum salto.nebula.user.v1.AppKey.State
 */
export enum AppKey_State {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted,
   * or is not applicable.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The app key is not assigned.
   *
   * @generated from enum value: NOT_ASSIGNED = 1;
   */
  NOT_ASSIGNED = 1,

  /**
   * The app key is pending activation.
   *
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * The app key is active and ready to be used.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AppKey_State)
proto3.util.setEnumType(AppKey_State, "salto.nebula.user.v1.AppKey.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "NOT_ASSIGNED" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ACTIVE" },
]);

/**
 * Representation of a wallet key, belonging to a user
 *
 * @generated from message salto.nebula.user.v1.WalletKey
 */
export class WalletKey extends Message<WalletKey> {
  /**
   * Resource name of the user's wallet key. It must have the
   * format of `installations/*\/users/*\/wallet-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Indicates whether this wallet key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
   *
   * @generated from field: salto.nebula.user.v1.WalletKey.State state = 2;
   */
  state = WalletKey_State.STATE_UNSPECIFIED;

  /**
   * Indicates whether this wallet key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
   *
   * @generated from field: bool outdated = 3;
   */
  outdated = false;

  constructor(data?: PartialMessage<WalletKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.WalletKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "state", kind: "enum", T: proto3.getEnumType(WalletKey_State) },
    { no: 3, name: "outdated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WalletKey {
    return new WalletKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WalletKey {
    return new WalletKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WalletKey {
    return new WalletKey().fromJsonString(jsonString, options);
  }

  static equals(a: WalletKey | PlainMessage<WalletKey> | undefined, b: WalletKey | PlainMessage<WalletKey> | undefined): boolean {
    return proto3.util.equals(WalletKey, a, b);
  }
}

/**
 * State for a wallet key.
 *
 * @generated from enum salto.nebula.user.v1.WalletKey.State
 */
export enum WalletKey_State {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted,
   * or is not applicable.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The wallet key is not assigned.
   *
   * @generated from enum value: NOT_ASSIGNED = 1;
   */
  NOT_ASSIGNED = 1,

  /**
   * The wallet key is pending activation.
   *
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * The wallet key is active and ready to be used.
   *
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(WalletKey_State)
proto3.util.setEnumType(WalletKey_State, "salto.nebula.user.v1.WalletKey.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "NOT_ASSIGNED" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ACTIVE" },
]);

/**
 * Representation of a passcode, belonging to a user
 *
 * @generated from message salto.nebula.user.v1.Passcode
 */
export class Passcode extends Message<Passcode> {
  /**
   * Output only. Resource name of the user's passcode. It must have the
   * format of `installations/*\/users/*\/passcode`. For example:
   * `installations/surelock-homes-hq/users/john-watson/passcode`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Indicates whether this passcode has been assigned, not assigned or is
   * active and ready for use. This field cannot be modified using a standard
   * passcode update operation. To change the value of this field, you must
   * call
   * [`AssignPasscode`][salto.nebula.user.v1.UserService.AssignPasscode].
   *
   * If the value is `NOT_ASSIGNED` it also applies to cases where the
   * assignation process has been initiated, but not completed.
   *
   * @generated from field: salto.nebula.user.v1.Passcode.State state = 2;
   */
  state = Passcode_State.STATE_UNSPECIFIED;

  constructor(data?: PartialMessage<Passcode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.Passcode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "state", kind: "enum", T: proto3.getEnumType(Passcode_State) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Passcode {
    return new Passcode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Passcode {
    return new Passcode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Passcode {
    return new Passcode().fromJsonString(jsonString, options);
  }

  static equals(a: Passcode | PlainMessage<Passcode> | undefined, b: Passcode | PlainMessage<Passcode> | undefined): boolean {
    return proto3.util.equals(Passcode, a, b);
  }
}

/**
 * State for a passcode.
 *
 * @generated from enum salto.nebula.user.v1.Passcode.State
 */
export enum Passcode_State {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted,
   * or is not applicable.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The passcode is not assigned.
   *
   * @generated from enum value: NOT_ASSIGNED = 1;
   */
  NOT_ASSIGNED = 1,

  /**
   * The passcode is active and ready to be used.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(Passcode_State)
proto3.util.setEnumType(Passcode_State, "salto.nebula.user.v1.Passcode.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "NOT_ASSIGNED" },
  { no: 2, name: "ACTIVE" },
]);

/**
 * The request message for [`CreateUser`][salto.nebula.user.v1.UserService.CreateUser]
 *
 * @generated from message salto.nebula.user.v1.CreateUserRequest
 */
export class CreateUserRequest extends Message<CreateUserRequest> {
  /**
   * Resource name of the parent resource where the user is to be created. For
   * example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The user id to use for this user. In case it's empty the server
   * will autogenerate a unique identifier.
   *
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * The user resource to be created. Client must not set the `User.name`
   * field.
   *
   * @generated from field: salto.nebula.user.v1.User user = 3;
   */
  user?: User;

  constructor(data?: PartialMessage<CreateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CreateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserRequest {
    return new CreateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserRequest {
    return new CreateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserRequest {
    return new CreateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserRequest | PlainMessage<CreateUserRequest> | undefined, b: CreateUserRequest | PlainMessage<CreateUserRequest> | undefined): boolean {
    return proto3.util.equals(CreateUserRequest, a, b);
  }
}

/**
 * The request message for [`GetUser`][salto.nebula.user.v1.UserService.GetUser]
 *
 * @generated from message salto.nebula.user.v1.GetUserRequest
 */
export class GetUserRequest extends Message<GetUserRequest> {
  /**
   * The name of the requested user resource. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.GetUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserRequest {
    return new GetUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserRequest {
    return new GetUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserRequest {
    return new GetUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserRequest | PlainMessage<GetUserRequest> | undefined, b: GetUserRequest | PlainMessage<GetUserRequest> | undefined): boolean {
    return proto3.util.equals(GetUserRequest, a, b);
  }
}

/**
 * The request message for [`ListUsers`][salto.nebula.user.v1.UserService.ListUsers]
 *
 * @generated from message salto.nebula.user.v1.ListUsersRequest
 */
export class ListUsersRequest extends Message<ListUsersRequest> {
  /**
   * The parent resource name. For example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which users to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListUsersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.ListUsersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined, b: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined): boolean {
    return proto3.util.equals(ListUsersRequest, a, b);
  }
}

/**
 * The response message for [`ListUsers`][salto.nebula.user.v1.UserService.ListUsers]
 *
 * @generated from message salto.nebula.user.v1.ListUsersResponse
 */
export class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * The field name should match the noun `users` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.user.v1.User users = 1;
   */
  users: User[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  /**
   * The total number of users in all pages, irrespective of any pagination.
   * This is an estimated number based on the requested filter, and it may change in
   * subsequent pages.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize = 0;

  constructor(data?: PartialMessage<ListUsersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.ListUsersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "users", kind: "message", T: User, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean {
    return proto3.util.equals(ListUsersResponse, a, b);
  }
}

/**
 * The response message for [`UpdateUser`][salto.nebula.user.v1.UserService.UpdateUser]
 *
 * @generated from message salto.nebula.user.v1.UpdateUserRequest
 */
export class UpdateUserRequest extends Message<UpdateUserRequest> {
  /**
   * The user resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.user.v1.User user = 1;
   */
  user?: User;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.UpdateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined, b: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserRequest, a, b);
  }
}

/**
 * The request message for [`DeleteUser`][salto.nebula.user.v1.UserService.DeleteUser]
 *
 * @generated from message salto.nebula.user.v1.DeleteUserRequest
 */
export class DeleteUserRequest extends Message<DeleteUserRequest> {
  /**
   * The resource name of the user to be deleted. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.DeleteUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined, b: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserRequest, a, b);
  }
}

/**
 * The request message for [`BlockUser`][salto.nebula.user.v1.UserService.BlockUser]
 *
 * @generated from message salto.nebula.user.v1.BlockUserRequest
 */
export class BlockUserRequest extends Message<BlockUserRequest> {
  /**
   * The resource name of the user to be blocked. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<BlockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.BlockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockUserRequest {
    return new BlockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockUserRequest {
    return new BlockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockUserRequest {
    return new BlockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BlockUserRequest | PlainMessage<BlockUserRequest> | undefined, b: BlockUserRequest | PlainMessage<BlockUserRequest> | undefined): boolean {
    return proto3.util.equals(BlockUserRequest, a, b);
  }
}

/**
 * The request message for [`BlockUser`][salto.nebula.user.v1.UserService.BlockUser]
 *
 * @generated from message salto.nebula.user.v1.BlockUserResponse
 */
export class BlockUserResponse extends Message<BlockUserResponse> {
  constructor(data?: PartialMessage<BlockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.BlockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockUserResponse {
    return new BlockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockUserResponse {
    return new BlockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockUserResponse {
    return new BlockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BlockUserResponse | PlainMessage<BlockUserResponse> | undefined, b: BlockUserResponse | PlainMessage<BlockUserResponse> | undefined): boolean {
    return proto3.util.equals(BlockUserResponse, a, b);
  }
}

/**
 * The request message for [`UnblockUser`][salto.nebula.user.v1.UserService.UnblockUser]
 *
 * @generated from message salto.nebula.user.v1.UnblockUserRequest
 */
export class UnblockUserRequest extends Message<UnblockUserRequest> {
  /**
   * The resource name of the user to be unblocked. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<UnblockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.UnblockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnblockUserRequest {
    return new UnblockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnblockUserRequest {
    return new UnblockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnblockUserRequest {
    return new UnblockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnblockUserRequest | PlainMessage<UnblockUserRequest> | undefined, b: UnblockUserRequest | PlainMessage<UnblockUserRequest> | undefined): boolean {
    return proto3.util.equals(UnblockUserRequest, a, b);
  }
}

/**
 * The request message for [`UnblockUser`][salto.nebula.user.v1.UserService.UnblockUser]
 *
 * @generated from message salto.nebula.user.v1.UnblockUserResponse
 */
export class UnblockUserResponse extends Message<UnblockUserResponse> {
  constructor(data?: PartialMessage<UnblockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.UnblockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnblockUserResponse {
    return new UnblockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnblockUserResponse {
    return new UnblockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnblockUserResponse {
    return new UnblockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnblockUserResponse | PlainMessage<UnblockUserResponse> | undefined, b: UnblockUserResponse | PlainMessage<UnblockUserResponse> | undefined): boolean {
    return proto3.util.equals(UnblockUserResponse, a, b);
  }
}

/**
 * The request message for [`CreateUserAccessRight`][salto.nebula.user.v1.UserService.CreateUserAccessRight]
 *
 * @generated from message salto.nebula.user.v1.CreateUserAccessRightRequest
 */
export class CreateUserAccessRightRequest extends Message<CreateUserAccessRightRequest> {
  /**
   * Resource name of the parent resource where the users's access right
   * association is to be created. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The user's access right association resource to be created. Client must
   * not set the `UserAccessRight.name` field.
   *
   * @generated from field: salto.nebula.user.v1.UserAccessRight user_access_right = 2;
   */
  userAccessRight?: UserAccessRight;

  constructor(data?: PartialMessage<CreateUserAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CreateUserAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_access_right", kind: "message", T: UserAccessRight },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserAccessRightRequest {
    return new CreateUserAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserAccessRightRequest {
    return new CreateUserAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserAccessRightRequest {
    return new CreateUserAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserAccessRightRequest | PlainMessage<CreateUserAccessRightRequest> | undefined, b: CreateUserAccessRightRequest | PlainMessage<CreateUserAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(CreateUserAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`GetUserAccessRight`][salto.nebula.user.v1.UserService.GetUserAcessRight]
 *
 * @generated from message salto.nebula.user.v1.GetUserAccessRightRequest
 */
export class GetUserAccessRightRequest extends Message<GetUserAccessRightRequest> {
  /**
   * The name of the requested user's access right association resource. For
   * example:
   * `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetUserAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.GetUserAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserAccessRightRequest {
    return new GetUserAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserAccessRightRequest {
    return new GetUserAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserAccessRightRequest {
    return new GetUserAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserAccessRightRequest | PlainMessage<GetUserAccessRightRequest> | undefined, b: GetUserAccessRightRequest | PlainMessage<GetUserAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(GetUserAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`ListUserAccessRights`][salto.nebula.user.v1.UserService.ListUserAccessRights]
 *
 * @generated from message salto.nebula.user.v1.ListUserAccessRightsRequest
 */
export class ListUserAccessRightsRequest extends Message<ListUserAccessRightsRequest> {
  /**
   * The parent resource name. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which user's access right associations
   * to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListUserAccessRightsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.ListUserAccessRightsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserAccessRightsRequest {
    return new ListUserAccessRightsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserAccessRightsRequest {
    return new ListUserAccessRightsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserAccessRightsRequest {
    return new ListUserAccessRightsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserAccessRightsRequest | PlainMessage<ListUserAccessRightsRequest> | undefined, b: ListUserAccessRightsRequest | PlainMessage<ListUserAccessRightsRequest> | undefined): boolean {
    return proto3.util.equals(ListUserAccessRightsRequest, a, b);
  }
}

/**
 * The response message for [`ListUserAccessRights`][salto.nebula.user.v1.UserService.ListUserAccessRights]
 *
 * @generated from message salto.nebula.user.v1.ListUserAccessRightsResponse
 */
export class ListUserAccessRightsResponse extends Message<ListUserAccessRightsResponse> {
  /**
   * The field name should match the noun `user_access_rights` in the method
   * name. There will be a maximum number of items returned based on the
   * `page_size` field in the request.
   *
   * @generated from field: repeated salto.nebula.user.v1.UserAccessRight user_access_rights = 1;
   */
  userAccessRights: UserAccessRight[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListUserAccessRightsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.ListUserAccessRightsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_access_rights", kind: "message", T: UserAccessRight, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserAccessRightsResponse {
    return new ListUserAccessRightsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserAccessRightsResponse {
    return new ListUserAccessRightsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserAccessRightsResponse {
    return new ListUserAccessRightsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserAccessRightsResponse | PlainMessage<ListUserAccessRightsResponse> | undefined, b: ListUserAccessRightsResponse | PlainMessage<ListUserAccessRightsResponse> | undefined): boolean {
    return proto3.util.equals(ListUserAccessRightsResponse, a, b);
  }
}

/**
 * The request message for [`UpdateUserAccessRight`][salto.nebula.user.v1.UserService.UpdateUserAccessRight]
 *
 * @generated from message salto.nebula.user.v1.UpdateUserAccessRightRequest
 */
export class UpdateUserAccessRightRequest extends Message<UpdateUserAccessRightRequest> {
  /**
   * The user's access right resource which replaces the resource on the
   * server.
   *
   * @generated from field: salto.nebula.user.v1.UserAccessRight user_access_right = 1;
   */
  userAccessRight?: UserAccessRight;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateUserAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.UpdateUserAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_access_right", kind: "message", T: UserAccessRight },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserAccessRightRequest {
    return new UpdateUserAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserAccessRightRequest {
    return new UpdateUserAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserAccessRightRequest {
    return new UpdateUserAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserAccessRightRequest | PlainMessage<UpdateUserAccessRightRequest> | undefined, b: UpdateUserAccessRightRequest | PlainMessage<UpdateUserAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`DeleteUserAccessRight`][salto.nebula.user.v1.UserService.DeleteUserAccessRight]
 *
 * @generated from message salto.nebula.user.v1.DeleteUserAccessRightRequest
 */
export class DeleteUserAccessRightRequest extends Message<DeleteUserAccessRightRequest> {
  /**
   * The resource name of the user's access right association to be deleted.
   * For example:
   * `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteUserAccessRightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.DeleteUserAccessRightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserAccessRightRequest {
    return new DeleteUserAccessRightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserAccessRightRequest {
    return new DeleteUserAccessRightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserAccessRightRequest {
    return new DeleteUserAccessRightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserAccessRightRequest | PlainMessage<DeleteUserAccessRightRequest> | undefined, b: DeleteUserAccessRightRequest | PlainMessage<DeleteUserAccessRightRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserAccessRightRequest, a, b);
  }
}

/**
 * The request message for [`AssignCardkey`][salto.nebula.user.v1.UserService.AssignCardkey]
 *
 * @generated from message salto.nebula.user.v1.AssignCardKeyRequest
 */
export class AssignCardKeyRequest extends Message<AssignCardKeyRequest> {
  /**
   * The name of the requested user's card key to be assigned. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Unique identifier of the physical card. Length dependent of technology.
   * Max length for ISO14443-3 is 10 bytes.
   *
   * @generated from field: string uid = 2;
   */
  uid = "";

  constructor(data?: PartialMessage<AssignCardKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AssignCardKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignCardKeyRequest {
    return new AssignCardKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignCardKeyRequest {
    return new AssignCardKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignCardKeyRequest {
    return new AssignCardKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssignCardKeyRequest | PlainMessage<AssignCardKeyRequest> | undefined, b: AssignCardKeyRequest | PlainMessage<AssignCardKeyRequest> | undefined): boolean {
    return proto3.util.equals(AssignCardKeyRequest, a, b);
  }
}

/**
 * The request message for [`CancelCardKey`][salto.nebula.user.v1.UserService.CancelCardKey]
 *
 * @generated from message salto.nebula.user.v1.CancelCardKeyRequest
 */
export class CancelCardKeyRequest extends Message<CancelCardKeyRequest> {
  /**
   * The name of the requested user's card key to be canceled. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<CancelCardKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CancelCardKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelCardKeyRequest {
    return new CancelCardKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelCardKeyRequest {
    return new CancelCardKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelCardKeyRequest {
    return new CancelCardKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelCardKeyRequest | PlainMessage<CancelCardKeyRequest> | undefined, b: CancelCardKeyRequest | PlainMessage<CancelCardKeyRequest> | undefined): boolean {
    return proto3.util.equals(CancelCardKeyRequest, a, b);
  }
}

/**
 * The request message for [`EncodeCardKey`][salto.nebula.user.v1.UserService.EncodeCardKey]
 *
 * @generated from message salto.nebula.user.v1.EncodeCardKeyRequest
 */
export class EncodeCardKeyRequest extends Message<EncodeCardKeyRequest> {
  /**
   * The name of the requested user's card key to be encoded. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The name of the device to be used as a card encoder.
   * It could be an **encoder** or an **electronic lock** and takes the
   * form of a relative resource name:
   * `installations/surelock-homes-hq/encoders/dancing-men` or
   * `installations/surelock-homes-hq/electronic-locks/baker-street-entrance`.
   *
   * @generated from oneof salto.nebula.user.v1.EncodeCardKeyRequest.device
   */
  device: {
    /**
     * Device name, when device is an encoder
     *
     * @generated from field: string encoder = 2;
     */
    value: string;
    case: "encoder";
  } | {
    /**
     * Device name, when device is an electronic lock
     *
     * @generated from field: string electronic_lock = 3;
     */
    value: string;
    case: "electronicLock";
  } | {
    /**
     * Device name, when device is a controller
     *
     * @generated from field: string controller = 4;
     */
    value: string;
    case: "controller";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<EncodeCardKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.EncodeCardKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "encoder", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "device" },
    { no: 3, name: "electronic_lock", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "device" },
    { no: 4, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "device" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncodeCardKeyRequest {
    return new EncodeCardKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncodeCardKeyRequest {
    return new EncodeCardKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncodeCardKeyRequest {
    return new EncodeCardKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EncodeCardKeyRequest | PlainMessage<EncodeCardKeyRequest> | undefined, b: EncodeCardKeyRequest | PlainMessage<EncodeCardKeyRequest> | undefined): boolean {
    return proto3.util.equals(EncodeCardKeyRequest, a, b);
  }
}

/**
 * The response message for [`EncodeCardKey`][salto.nebula.user.v1.UserService.EncodeCardKey]
 *
 * @generated from message salto.nebula.user.v1.EncodeCardKeyResponse
 */
export class EncodeCardKeyResponse extends Message<EncodeCardKeyResponse> {
  constructor(data?: PartialMessage<EncodeCardKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.EncodeCardKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncodeCardKeyResponse {
    return new EncodeCardKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncodeCardKeyResponse {
    return new EncodeCardKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncodeCardKeyResponse {
    return new EncodeCardKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EncodeCardKeyResponse | PlainMessage<EncodeCardKeyResponse> | undefined, b: EncodeCardKeyResponse | PlainMessage<EncodeCardKeyResponse> | undefined): boolean {
    return proto3.util.equals(EncodeCardKeyResponse, a, b);
  }
}

/**
 * The metadata message for [`EncodeCardKey`][salto.nebula.user.v1.UserService.EncodeCardKey]
 *
 * @generated from message salto.nebula.user.v1.EncodeCardKeyMetadata
 */
export class EncodeCardKeyMetadata extends Message<EncodeCardKeyMetadata> {
  constructor(data?: PartialMessage<EncodeCardKeyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.EncodeCardKeyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncodeCardKeyMetadata {
    return new EncodeCardKeyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncodeCardKeyMetadata {
    return new EncodeCardKeyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncodeCardKeyMetadata {
    return new EncodeCardKeyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: EncodeCardKeyMetadata | PlainMessage<EncodeCardKeyMetadata> | undefined, b: EncodeCardKeyMetadata | PlainMessage<EncodeCardKeyMetadata> | undefined): boolean {
    return proto3.util.equals(EncodeCardKeyMetadata, a, b);
  }
}

/**
 * The request message for [`AssignDigitalkey`][salto.nebula.user.v1.UserService.AssignDigitalkey]
 *
 * @generated from message salto.nebula.user.v1.AssignAppKeyRequest
 */
export class AssignAppKeyRequest extends Message<AssignAppKeyRequest> {
  /**
   * The name of the requested user's app key to be assigned. For example:
   * `installations/surelock-homes-hq/users/john-watson/app-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<AssignAppKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AssignAppKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignAppKeyRequest {
    return new AssignAppKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignAppKeyRequest {
    return new AssignAppKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignAppKeyRequest {
    return new AssignAppKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssignAppKeyRequest | PlainMessage<AssignAppKeyRequest> | undefined, b: AssignAppKeyRequest | PlainMessage<AssignAppKeyRequest> | undefined): boolean {
    return proto3.util.equals(AssignAppKeyRequest, a, b);
  }
}

/**
 * The request message for [`CancelAppKey`][salto.nebula.user.v1.UserService.CancelAppKey]
 *
 * @generated from message salto.nebula.user.v1.CancelAppKeyRequest
 */
export class CancelAppKeyRequest extends Message<CancelAppKeyRequest> {
  /**
   * The name of the requested user's app key to be canceled. For example:
   * `installations/surelock-homes-hq/users/john-watson/app-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<CancelAppKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CancelAppKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelAppKeyRequest {
    return new CancelAppKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelAppKeyRequest {
    return new CancelAppKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelAppKeyRequest {
    return new CancelAppKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelAppKeyRequest | PlainMessage<CancelAppKeyRequest> | undefined, b: CancelAppKeyRequest | PlainMessage<CancelAppKeyRequest> | undefined): boolean {
    return proto3.util.equals(CancelAppKeyRequest, a, b);
  }
}

/**
 * The request message for [`ComputeAppKeyData`][salto.nebula.user.v1.UserService.ComputeAppKeyData]
 *
 * @generated from message salto.nebula.user.v1.ComputeAppKeyDataRequest
 */
export class ComputeAppKeyDataRequest extends Message<ComputeAppKeyDataRequest> {
  /**
   * The name of the requested user's app key. For example:
   * `installations/surelock-homes-hq/users/john-watson/app-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<ComputeAppKeyDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.ComputeAppKeyDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComputeAppKeyDataRequest {
    return new ComputeAppKeyDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComputeAppKeyDataRequest {
    return new ComputeAppKeyDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComputeAppKeyDataRequest {
    return new ComputeAppKeyDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ComputeAppKeyDataRequest | PlainMessage<ComputeAppKeyDataRequest> | undefined, b: ComputeAppKeyDataRequest | PlainMessage<ComputeAppKeyDataRequest> | undefined): boolean {
    return proto3.util.equals(ComputeAppKeyDataRequest, a, b);
  }
}

/**
 * The response message for [`ComputeAppKeyData`][salto.nebula.user.v1.UserService.ComputeAppKeyData]
 *
 * @generated from message salto.nebula.user.v1.ComputeAppKeyDataResponse
 */
export class ComputeAppKeyDataResponse extends Message<ComputeAppKeyDataResponse> {
  /**
   * Computed data of the requested app key.
   *
   * @generated from field: bytes data = 1;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<ComputeAppKeyDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.ComputeAppKeyDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComputeAppKeyDataResponse {
    return new ComputeAppKeyDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComputeAppKeyDataResponse {
    return new ComputeAppKeyDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComputeAppKeyDataResponse {
    return new ComputeAppKeyDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ComputeAppKeyDataResponse | PlainMessage<ComputeAppKeyDataResponse> | undefined, b: ComputeAppKeyDataResponse | PlainMessage<ComputeAppKeyDataResponse> | undefined): boolean {
    return proto3.util.equals(ComputeAppKeyDataResponse, a, b);
  }
}

/**
 * The request message for [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey]
 *
 * @generated from message salto.nebula.user.v1.AssignWalletKeyRequest
 */
export class AssignWalletKeyRequest extends Message<AssignWalletKeyRequest> {
  /**
   * The name of the requested user's wallet key to be assigned. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<AssignWalletKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AssignWalletKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignWalletKeyRequest {
    return new AssignWalletKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignWalletKeyRequest {
    return new AssignWalletKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignWalletKeyRequest {
    return new AssignWalletKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssignWalletKeyRequest | PlainMessage<AssignWalletKeyRequest> | undefined, b: AssignWalletKeyRequest | PlainMessage<AssignWalletKeyRequest> | undefined): boolean {
    return proto3.util.equals(AssignWalletKeyRequest, a, b);
  }
}

/**
 * The response message for [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey]
 *
 * @generated from message salto.nebula.user.v1.AssignWalletKeyResponse
 */
export class AssignWalletKeyResponse extends Message<AssignWalletKeyResponse> {
  /**
   * The newly-assigned wallet key.
   *
   * @generated from field: salto.nebula.user.v1.WalletKey wallet_key = 1;
   */
  walletKey?: WalletKey;

  /**
   * The access URL which contains the data to allow end users to
   * sign in to SALTO Identity seamlessly and which is also used
   * in the add-to-wallet process.
   *
   * @generated from field: string access_uri = 2;
   */
  accessUri = "";

  constructor(data?: PartialMessage<AssignWalletKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AssignWalletKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "wallet_key", kind: "message", T: WalletKey },
    { no: 2, name: "access_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignWalletKeyResponse {
    return new AssignWalletKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignWalletKeyResponse {
    return new AssignWalletKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignWalletKeyResponse {
    return new AssignWalletKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AssignWalletKeyResponse | PlainMessage<AssignWalletKeyResponse> | undefined, b: AssignWalletKeyResponse | PlainMessage<AssignWalletKeyResponse> | undefined): boolean {
    return proto3.util.equals(AssignWalletKeyResponse, a, b);
  }
}

/**
 * The request message for [`CancelWalletKey`][salto.nebula.user.v1.UserService.CancelWalletKey]
 *
 * @generated from message salto.nebula.user.v1.CancelWalletKeyRequest
 */
export class CancelWalletKeyRequest extends Message<CancelWalletKeyRequest> {
  /**
   * The name of the requested user's wallet key to be canceled. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<CancelWalletKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CancelWalletKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelWalletKeyRequest {
    return new CancelWalletKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelWalletKeyRequest {
    return new CancelWalletKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelWalletKeyRequest {
    return new CancelWalletKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelWalletKeyRequest | PlainMessage<CancelWalletKeyRequest> | undefined, b: CancelWalletKeyRequest | PlainMessage<CancelWalletKeyRequest> | undefined): boolean {
    return proto3.util.equals(CancelWalletKeyRequest, a, b);
  }
}

/**
 * The response message for [`CancelWalletKey`][salto.nebula.user.v1.UserService.CancelWalletKey]
 *
 * @generated from message salto.nebula.user.v1.CancelWalletKeyResponse
 */
export class CancelWalletKeyResponse extends Message<CancelWalletKeyResponse> {
  /**
   * The canceled wallet key.
   *
   * @generated from field: salto.nebula.user.v1.WalletKey wallet_key = 1;
   */
  walletKey?: WalletKey;

  constructor(data?: PartialMessage<CancelWalletKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CancelWalletKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "wallet_key", kind: "message", T: WalletKey },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelWalletKeyResponse {
    return new CancelWalletKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelWalletKeyResponse {
    return new CancelWalletKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelWalletKeyResponse {
    return new CancelWalletKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CancelWalletKeyResponse | PlainMessage<CancelWalletKeyResponse> | undefined, b: CancelWalletKeyResponse | PlainMessage<CancelWalletKeyResponse> | undefined): boolean {
    return proto3.util.equals(CancelWalletKeyResponse, a, b);
  }
}

/**
 * The request message for [`AssignPasscode`][salto.nebula.user.v1.UserService.AssignPasscode]
 *
 * @generated from message salto.nebula.user.v1.AssignPasscodeRequest
 */
export class AssignPasscodeRequest extends Message<AssignPasscodeRequest> {
  /**
   * The name of the requested user's passcode to be assigned. For example:
   * `installations/surelock-homes-hq/users/john-watson/passcode`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<AssignPasscodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AssignPasscodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignPasscodeRequest {
    return new AssignPasscodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignPasscodeRequest {
    return new AssignPasscodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignPasscodeRequest {
    return new AssignPasscodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssignPasscodeRequest | PlainMessage<AssignPasscodeRequest> | undefined, b: AssignPasscodeRequest | PlainMessage<AssignPasscodeRequest> | undefined): boolean {
    return proto3.util.equals(AssignPasscodeRequest, a, b);
  }
}

/**
 * The response message for [`AssignPasscode`][salto.nebula.user.v1.UserService.AssignPasscode]
 *
 * @generated from message salto.nebula.user.v1.AssignPasscodeResponse
 */
export class AssignPasscodeResponse extends Message<AssignPasscodeResponse> {
  /**
   * The assigned passcode.
   *
   * @generated from field: salto.nebula.user.v1.Passcode passcode = 1;
   */
  passcode?: Passcode;

  /**
   * The passcode value.
   *
   * @generated from field: string value = 2;
   */
  value = "";

  constructor(data?: PartialMessage<AssignPasscodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.AssignPasscodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "passcode", kind: "message", T: Passcode },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignPasscodeResponse {
    return new AssignPasscodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignPasscodeResponse {
    return new AssignPasscodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignPasscodeResponse {
    return new AssignPasscodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AssignPasscodeResponse | PlainMessage<AssignPasscodeResponse> | undefined, b: AssignPasscodeResponse | PlainMessage<AssignPasscodeResponse> | undefined): boolean {
    return proto3.util.equals(AssignPasscodeResponse, a, b);
  }
}

/**
 * The request message for [`CancelPasscode`][salto.nebula.user.v1.UserService.CancelPasscode]
 *
 * @generated from message salto.nebula.user.v1.CancelPasscodeRequest
 */
export class CancelPasscodeRequest extends Message<CancelPasscodeRequest> {
  /**
   * The name of the requested user's passcode to be canceled. For example:
   * `installations/surelock-homes-hq/users/john-watson/passcode`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<CancelPasscodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CancelPasscodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelPasscodeRequest {
    return new CancelPasscodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelPasscodeRequest {
    return new CancelPasscodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelPasscodeRequest {
    return new CancelPasscodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelPasscodeRequest | PlainMessage<CancelPasscodeRequest> | undefined, b: CancelPasscodeRequest | PlainMessage<CancelPasscodeRequest> | undefined): boolean {
    return proto3.util.equals(CancelPasscodeRequest, a, b);
  }
}

/**
 * The response message for [`CancelPasscode`][salto.nebula.user.v1.UserService.CancelPasscode]
 *
 * @generated from message salto.nebula.user.v1.CancelPasscodeResponse
 */
export class CancelPasscodeResponse extends Message<CancelPasscodeResponse> {
  /**
   * The canceled passcode.
   *
   * @generated from field: salto.nebula.user.v1.Passcode passcode = 1;
   */
  passcode?: Passcode;

  constructor(data?: PartialMessage<CancelPasscodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.user.v1.CancelPasscodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "passcode", kind: "message", T: Passcode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelPasscodeResponse {
    return new CancelPasscodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelPasscodeResponse {
    return new CancelPasscodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelPasscodeResponse {
    return new CancelPasscodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CancelPasscodeResponse | PlainMessage<CancelPasscodeResponse> | undefined, b: CancelPasscodeResponse | PlainMessage<CancelPasscodeResponse> | undefined): boolean {
    return proto3.util.equals(CancelPasscodeResponse, a, b);
  }
}

