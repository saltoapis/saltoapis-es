// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/user/v1/user.proto (package salto.nebula.user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AppKey, AssignAppKeyRequest, AssignCardKeyRequest, AssignPasscodeRequest, AssignPasscodeResponse, AssignWalletKeyRequest, AssignWalletKeyResponse, BlockUserRequest, BlockUserResponse, CancelAppKeyRequest, CancelCardKeyRequest, CancelPasscodeRequest, CancelPasscodeResponse, CancelWalletKeyRequest, CancelWalletKeyResponse, CardKey, ComputeAppKeyDataRequest, ComputeAppKeyDataResponse, CreateUserAccessRightRequest, CreateUserRequest, DeleteUserAccessRightRequest, DeleteUserRequest, EncodeCardKeyRequest, GetUserAccessRightRequest, GetUserRequest, ListUserAccessRightsRequest, ListUserAccessRightsResponse, ListUsersRequest, ListUsersResponse, UnblockUserRequest, UnblockUserResponse, UpdateUserAccessRightRequest, UpdateUserRequest, User, UserAccessRight } from "./user_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { Operation } from "@saltoapis/longrunning-v1";

/**
 * A user can refer to both a holder of keys and a user with permissions to
 * manage other users. Users are eligible to access rights and may be assigned a
 * key. This service is responsible for managing user resources as well as
 * their associations with access rights.
 *
 * @generated from service salto.nebula.user.v1.UserService
 */
export const UserService = {
  typeName: "salto.nebula.user.v1.UserService",
  methods: {
    /**
     * Create a user
     *
     * Creates a new user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.CreateUser
     */
    createUser: {
      name: "CreateUser",
      I: CreateUserRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * Get a user
     *
     * Retrieves an existing user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * List users
     *
     * Returns a list of users that have been previously created.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.ListUsers
     */
    listUsers: {
      name: "ListUsers",
      I: ListUsersRequest,
      O: ListUsersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update a user
     *
     * Updates an existing user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.UpdateUser
     */
    updateUser: {
      name: "UpdateUser",
      I: UpdateUserRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a user
     *
     * Permanently deletes a user. This cannot be undone.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.DeleteUser
     */
    deleteUser: {
      name: "DeleteUser",
      I: DeleteUserRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Block a user
     *
     * Temporarily blocks an existing user. While blocked, the user cannot
     * perform any admin actions, that is, they have no management role.
     * Neither can they unlock any access point with any type of key.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.BlockUser
     */
    blockUser: {
      name: "BlockUser",
      I: BlockUserRequest,
      O: BlockUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Unblock a user
     *
     * Unblocks an already blocked user. Once unblocked, the user can
     * perform the admin actions they could previously, that is,
     * they once again have a management role.
     * They can also once again unlock the access points they previously
     * had access to.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.UnblockUser
     */
    unblockUser: {
      name: "UnblockUser",
      I: UnblockUserRequest,
      O: UnblockUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a user access right
     *
     * Creates a user's access right association.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.CreateUserAccessRight
     */
    createUserAccessRight: {
      name: "CreateUserAccessRight",
      I: CreateUserAccessRightRequest,
      O: UserAccessRight,
      kind: MethodKind.Unary,
    },
    /**
     * Get a user access right
     *
     * Gets an existing user's access right association.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.GetUserAccessRight
     */
    getUserAccessRight: {
      name: "GetUserAccessRight",
      I: GetUserAccessRightRequest,
      O: UserAccessRight,
      kind: MethodKind.Unary,
    },
    /**
     * List user access rights
     *
     * Lists an existing user's access right associations.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.ListUserAccessRights
     */
    listUserAccessRights: {
      name: "ListUserAccessRights",
      I: ListUserAccessRightsRequest,
      O: ListUserAccessRightsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update a user access right
     *
     * Updates an existing user's access right associations.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.UpdateUserAccessRight
     */
    updateUserAccessRight: {
      name: "UpdateUserAccessRight",
      I: UpdateUserAccessRightRequest,
      O: UserAccessRight,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a user access right
     *
     * Deletes a user's access right association. This cannot be undone.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.DeleteUserAccessRight
     */
    deleteUserAccessRight: {
      name: "DeleteUserAccessRight",
      I: DeleteUserAccessRightRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Assign a card key
     *
     * Assigns a card key to an existing user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.AssignCardKey
     */
    assignCardKey: {
      name: "AssignCardKey",
      I: AssignCardKeyRequest,
      O: CardKey,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel a card key
     *
     * Cancels an existing user's card key.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.CancelCardKey
     */
    cancelCardKey: {
      name: "CancelCardKey",
      I: CancelCardKeyRequest,
      O: CardKey,
      kind: MethodKind.Unary,
    },
    /**
     * Encode a card key
     *
     * Encodes an existing user's card key.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.EncodeCardKey
     */
    encodeCardKey: {
      name: "EncodeCardKey",
      I: EncodeCardKeyRequest,
      O: Operation,
      kind: MethodKind.Unary,
    },
    /**
     * Assign an app key
     *
     * Assigns an app key to an existing user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.AssignAppKey
     */
    assignAppKey: {
      name: "AssignAppKey",
      I: AssignAppKeyRequest,
      O: AppKey,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel an app key
     *
     * Cancels an existing user's app key.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.CancelAppKey
     */
    cancelAppKey: {
      name: "CancelAppKey",
      I: CancelAppKeyRequest,
      O: AppKey,
      kind: MethodKind.Unary,
    },
    /**
     * Compute data of an app key
     *
     * Compute an existing user's app key data. Data contains encoded access
     * rights of the user.
     * (-- api-linter: core::0136::http-name-variable=disabled --)
     *
     * @generated from rpc salto.nebula.user.v1.UserService.ComputeAppKeyData
     */
    computeAppKeyData: {
      name: "ComputeAppKeyData",
      I: ComputeAppKeyDataRequest,
      O: ComputeAppKeyDataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Assign a wallet key
     *
     * Assigns a wallet key to an existing user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.AssignWalletKey
     */
    assignWalletKey: {
      name: "AssignWalletKey",
      I: AssignWalletKeyRequest,
      O: AssignWalletKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel a wallet key
     *
     * Cancels an existing user's wallet key.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.CancelWalletKey
     */
    cancelWalletKey: {
      name: "CancelWalletKey",
      I: CancelWalletKeyRequest,
      O: CancelWalletKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Assign a passcode
     *
     * Assigns a passcode to an existing user.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.AssignPasscode
     */
    assignPasscode: {
      name: "AssignPasscode",
      I: AssignPasscodeRequest,
      O: AssignPasscodeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel a passcode
     *
     * Cancels an existing user's passcode.
     *
     * @generated from rpc salto.nebula.user.v1.UserService.CancelPasscode
     */
    cancelPasscode: {
      name: "CancelPasscode",
      I: CancelPasscodeRequest,
      O: CancelPasscodeResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

