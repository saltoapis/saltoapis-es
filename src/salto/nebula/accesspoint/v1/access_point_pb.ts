// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/accesspoint/v1/access_point.proto (package salto.nebula.accesspoint.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, FieldMask, Message, proto3 } from "@bufbuild/protobuf";
import { OpeningMode } from "@saltoapis/nebula-type";

/**
 * The access point object
 *
 * @generated from message salto.nebula.accesspoint.v1.AccessPoint
 */
export class AccessPoint extends Message<AccessPoint> {
  /**
   *  Resource name of the access point. It must have the format
   * `installations/*\/access-points/*`. For example:
   * `installations/surelock-homes-hq/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the access point.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Opening mode. This could be a fixed mode or a scheduled mode. The
   * schedule takes the form of a relative resource name of an opening mode
   * schedule.
   *
   * @generated from oneof salto.nebula.accesspoint.v1.AccessPoint.opening_mode
   */
  openingMode: {
    /**
     * The opening mode to be used permanently.
     *
     * @generated from field: salto.nebula.type.OpeningMode fixed = 3;
     */
    value: OpeningMode;
    case: "fixed";
  } | {
    /**
     * Reference to an opening mode schedule
     *
     * @generated from field: string schedule = 4;
     */
    value: string;
    case: "schedule";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Calendar reference assigned to this access point.
   * If not set, a calendar where all days are NORMAL will be used.
   * That's to say a regular calendar that doesn't have any
   * HOLIDAY or OTHER days added to it.
   *
   * @generated from field: optional string calendar = 5;
   */
  calendar?: string;

  /**
   * Enables or disables card key updates. This parameter doesn't have any
   * effect on access points where its associated device is offline.
   * This field is optional to maintain backward compatibility. The server
   * checks for its presence to determine if clients are not updated and
   * assigns a default value if it's missing.
   *
   * @generated from field: optional bool card_key_updater = 6;
   */
  cardKeyUpdater?: boolean;

  /**
   * The duration the access point remains unlocked. This field is optional
   * for the server to check for its presence and assign a default value if it's missing.
   *
   * @generated from field: optional google.protobuf.Duration unlock_duration = 7;
   */
  unlockDuration?: Duration;

  /**
   * Indicates whether the access point was left open.
   *
   * @generated from field: bool left_open = 8;
   */
  leftOpen = false;

  constructor(data?: PartialMessage<AccessPoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.AccessPoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "fixed", kind: "enum", T: proto3.getEnumType(OpeningMode), oneof: "opening_mode" },
    { no: 4, name: "schedule", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "opening_mode" },
    { no: 5, name: "calendar", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "card_key_updater", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "unlock_duration", kind: "message", T: Duration, opt: true },
    { no: 8, name: "left_open", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccessPoint {
    return new AccessPoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccessPoint {
    return new AccessPoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccessPoint {
    return new AccessPoint().fromJsonString(jsonString, options);
  }

  static equals(a: AccessPoint | PlainMessage<AccessPoint> | undefined, b: AccessPoint | PlainMessage<AccessPoint> | undefined): boolean {
    return proto3.util.equals(AccessPoint, a, b);
  }
}

/**
 * The request message for [`CreateAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.CreateAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.CreateAccessPointRequest
 */
export class CreateAccessPointRequest extends Message<CreateAccessPointRequest> {
  /**
   * Resource name of the parent resource under which the access point is created.
   * For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The access point id to use for this access point. If it's
   * empty the server will autogenerate a unique identifier.
   *
   * @generated from field: optional string access_point_id = 2;
   */
  accessPointId?: string;

  /**
   * The access point resource to be created. Client must not set the
   * `AccessPoint.name` field.
   *
   * @generated from field: salto.nebula.accesspoint.v1.AccessPoint access_point = 3;
   */
  accessPoint?: AccessPoint;

  constructor(data?: PartialMessage<CreateAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.CreateAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_point_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "access_point", kind: "message", T: AccessPoint },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccessPointRequest {
    return new CreateAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccessPointRequest {
    return new CreateAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccessPointRequest {
    return new CreateAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAccessPointRequest | PlainMessage<CreateAccessPointRequest> | undefined, b: CreateAccessPointRequest | PlainMessage<CreateAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(CreateAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`GetAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.GetAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.GetAccessPointRequest
 */
export class GetAccessPointRequest extends Message<GetAccessPointRequest> {
  /**
   * The name of the requested access point resource. For example:
   * `installations/surelock-homes-hq/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.GetAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccessPointRequest {
    return new GetAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccessPointRequest {
    return new GetAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccessPointRequest {
    return new GetAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccessPointRequest | PlainMessage<GetAccessPointRequest> | undefined, b: GetAccessPointRequest | PlainMessage<GetAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(GetAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessPoints`][salto.nebula.accesspoint.v1.AccessPointService.ListAccessPoints]
 *
 * @generated from message salto.nebula.accesspoint.v1.ListAccessPointsRequest
 */
export class ListAccessPointsRequest extends Message<ListAccessPointsRequest> {
  /**
   * The parent resource name. For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which access points to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListAccessPointsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.ListAccessPointsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessPointsRequest {
    return new ListAccessPointsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessPointsRequest {
    return new ListAccessPointsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessPointsRequest {
    return new ListAccessPointsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessPointsRequest | PlainMessage<ListAccessPointsRequest> | undefined, b: ListAccessPointsRequest | PlainMessage<ListAccessPointsRequest> | undefined): boolean {
    return proto3.util.equals(ListAccessPointsRequest, a, b);
  }
}

/**
 * The request message for [`ListAccessPoints`][salto.nebula.accesspoint.v1.AccessPointService.ListAccessPoints]
 *
 * @generated from message salto.nebula.accesspoint.v1.ListAccessPointsResponse
 */
export class ListAccessPointsResponse extends Message<ListAccessPointsResponse> {
  /**
   * The field name should match the noun `access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.accesspoint.v1.AccessPoint access_points = 1;
   */
  accessPoints: AccessPoint[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  /**
   * The total number of access points in all pages, irrespective of any pagination.
   * This is an estimated number based on the requested filter, and it may change in
   * subsequent pages.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize = 0;

  constructor(data?: PartialMessage<ListAccessPointsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.ListAccessPointsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_points", kind: "message", T: AccessPoint, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccessPointsResponse {
    return new ListAccessPointsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccessPointsResponse {
    return new ListAccessPointsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccessPointsResponse {
    return new ListAccessPointsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAccessPointsResponse | PlainMessage<ListAccessPointsResponse> | undefined, b: ListAccessPointsResponse | PlainMessage<ListAccessPointsResponse> | undefined): boolean {
    return proto3.util.equals(ListAccessPointsResponse, a, b);
  }
}

/**
 * The request message for [`UpdateAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.UpdateAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.UpdateAccessPointRequest
 */
export class UpdateAccessPointRequest extends Message<UpdateAccessPointRequest> {
  /**
   * The access point resource which replaces the resource on the server.
   *
   * @generated from field: salto.nebula.accesspoint.v1.AccessPoint access_point = 1;
   */
  accessPoint?: AccessPoint;

  /**
   * The update mask applied to the resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.UpdateAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_point", kind: "message", T: AccessPoint },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccessPointRequest {
    return new UpdateAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccessPointRequest {
    return new UpdateAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccessPointRequest {
    return new UpdateAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAccessPointRequest | PlainMessage<UpdateAccessPointRequest> | undefined, b: UpdateAccessPointRequest | PlainMessage<UpdateAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`DeleteAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.DeleteAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.DeleteAccessPointRequest
 */
export class DeleteAccessPointRequest extends Message<DeleteAccessPointRequest> {
  /**
   * The resource name of the access point to be deleted. For example:
   * `installations/surelock-homes-hq/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.DeleteAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccessPointRequest {
    return new DeleteAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccessPointRequest {
    return new DeleteAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccessPointRequest {
    return new DeleteAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAccessPointRequest | PlainMessage<DeleteAccessPointRequest> | undefined, b: DeleteAccessPointRequest | PlainMessage<DeleteAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAccessPointRequest, a, b);
  }
}

/**
 * The request message for [`UnlockAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.UnlockAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.UnlockAccessPointRequest
 */
export class UnlockAccessPointRequest extends Message<UnlockAccessPointRequest> {
  /**
   * The resource name of the access point to be unlocked. For example:
   * `installations/surelock-homes-hq/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<UnlockAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.UnlockAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockAccessPointRequest {
    return new UnlockAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockAccessPointRequest {
    return new UnlockAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockAccessPointRequest {
    return new UnlockAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockAccessPointRequest | PlainMessage<UnlockAccessPointRequest> | undefined, b: UnlockAccessPointRequest | PlainMessage<UnlockAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(UnlockAccessPointRequest, a, b);
  }
}

/**
 * The empty response message for [`UnlockAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.UnlockAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.UnlockAccessPointResponse
 */
export class UnlockAccessPointResponse extends Message<UnlockAccessPointResponse> {
  constructor(data?: PartialMessage<UnlockAccessPointResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.UnlockAccessPointResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockAccessPointResponse {
    return new UnlockAccessPointResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockAccessPointResponse {
    return new UnlockAccessPointResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockAccessPointResponse {
    return new UnlockAccessPointResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockAccessPointResponse | PlainMessage<UnlockAccessPointResponse> | undefined, b: UnlockAccessPointResponse | PlainMessage<UnlockAccessPointResponse> | undefined): boolean {
    return proto3.util.equals(UnlockAccessPointResponse, a, b);
  }
}

/**
 * The metadata message for [`UnlockAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.UnlockAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.UnlockAccessPointMetadata
 */
export class UnlockAccessPointMetadata extends Message<UnlockAccessPointMetadata> {
  constructor(data?: PartialMessage<UnlockAccessPointMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.UnlockAccessPointMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlockAccessPointMetadata {
    return new UnlockAccessPointMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlockAccessPointMetadata {
    return new UnlockAccessPointMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlockAccessPointMetadata {
    return new UnlockAccessPointMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: UnlockAccessPointMetadata | PlainMessage<UnlockAccessPointMetadata> | undefined, b: UnlockAccessPointMetadata | PlainMessage<UnlockAccessPointMetadata> | undefined): boolean {
    return proto3.util.equals(UnlockAccessPointMetadata, a, b);
  }
}

/**
 * The request message for [`LockAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.LockAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.LockAccessPointRequest
 */
export class LockAccessPointRequest extends Message<LockAccessPointRequest> {
  /**
   * The resource name of the access point to be locked. For example:
   * `installations/surelock-homes-hq/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<LockAccessPointRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.LockAccessPointRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockAccessPointRequest {
    return new LockAccessPointRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockAccessPointRequest {
    return new LockAccessPointRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockAccessPointRequest {
    return new LockAccessPointRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LockAccessPointRequest | PlainMessage<LockAccessPointRequest> | undefined, b: LockAccessPointRequest | PlainMessage<LockAccessPointRequest> | undefined): boolean {
    return proto3.util.equals(LockAccessPointRequest, a, b);
  }
}

/**
 * The empty response message for [`LockAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.LockAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.LockAccessPointResponse
 */
export class LockAccessPointResponse extends Message<LockAccessPointResponse> {
  constructor(data?: PartialMessage<LockAccessPointResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.LockAccessPointResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockAccessPointResponse {
    return new LockAccessPointResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockAccessPointResponse {
    return new LockAccessPointResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockAccessPointResponse {
    return new LockAccessPointResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LockAccessPointResponse | PlainMessage<LockAccessPointResponse> | undefined, b: LockAccessPointResponse | PlainMessage<LockAccessPointResponse> | undefined): boolean {
    return proto3.util.equals(LockAccessPointResponse, a, b);
  }
}

/**
 * The metadata message for [`LockAccessPoint`][salto.nebula.accesspoint.v1.AccessPointService.LockAccessPoint]
 *
 * @generated from message salto.nebula.accesspoint.v1.LockAccessPointMetadata
 */
export class LockAccessPointMetadata extends Message<LockAccessPointMetadata> {
  constructor(data?: PartialMessage<LockAccessPointMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.accesspoint.v1.LockAccessPointMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockAccessPointMetadata {
    return new LockAccessPointMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockAccessPointMetadata {
    return new LockAccessPointMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockAccessPointMetadata {
    return new LockAccessPointMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: LockAccessPointMetadata | PlainMessage<LockAccessPointMetadata> | undefined, b: LockAccessPointMetadata | PlainMessage<LockAccessPointMetadata> | undefined): boolean {
    return proto3.util.equals(LockAccessPointMetadata, a, b);
  }
}

