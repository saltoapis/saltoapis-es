// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/digitalkey/v1/digital_key.proto (package salto.nebula.digitalkey.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { OperationSchema } from "@saltoapis/longrunning-v1";
import { file_salto_longrunning_v1_operation } from "@saltoapis/longrunning-v1";
import type { Color } from "@saltoapis/type";
import { file_salto_type_color } from "@saltoapis/type";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file salto/nebula/digitalkey/v1/digital_key.proto.
 */
export const file_salto_nebula_digitalkey_v1_digital_key: GenFile = /*@__PURE__*/
  fileDesc("CixzYWx0by9uZWJ1bGEvZGlnaXRhbGtleS92MS9kaWdpdGFsX2tleS5wcm90bxIac2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEi9ggKCkRpZ2l0YWxLZXkSDAoEbmFtZRgBIAEoCRJACgdhcHBfa2V5GAIgASgLMi0uc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuRGlnaXRhbEtleS5BcHBLZXlIABJGCgp3YWxsZXRfa2V5GAMgASgLMjAuc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuRGlnaXRhbEtleS5XYWxsZXRLZXlIABp2CghNZXRhZGF0YRINCgV0aXRsZRgBIAEoCRIQCghzdWJ0aXRsZRgCIAEoCRIRCglwaG90b191cmkYAyABKAkSDwoHYWRkcmVzcxgEIAEoCRIlCgp0ZXh0X2NvbG9yGAUgASgLMhEuc2FsdG8udHlwZS5Db2xvchr/AwoGQXBwS2V5EkEKCG1ldGFkYXRhGAEgASgLMi8uc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuRGlnaXRhbEtleS5NZXRhZGF0YRIMCgRkYXRhGAIgASgMEhQKDGluc3RhbGxhdGlvbhgFIAEoCRIRCgR1bml0GAYgASgJSACIAQESFwoPaW5zdGFsbGF0aW9uX2lkGAMgASgJEhQKB3VuaXRfaWQYBCABKAlIAYgBARI7ChdhY2Nlc3NfcG9pbnRzX3N5bmNfdGltZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASZQoYYWNjZXNzX3BvaW50c19zeW5jX3N0YXRlGAggASgOMkMuc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuRGlnaXRhbEtleS5BcHBLZXkuQWNjZXNzUG9pbnRzU3luY1N0YXRlIpIBChVBY2Nlc3NQb2ludHNTeW5jU3RhdGUSKAokQUNDRVNTX1BPSU5UU19TWU5DX1NUQVRFX1VOU1BFQ0lGSUVEEAASDwoLSU5WQUxJREFURUQQAxILCgdTWU5DSU5HEAESCgoGU1lOQ0VEEAISEQoNTk9UX1NVUFBPUlRFRBAEEhIKDkxJTUlUX0VYQ0VFREVEEAVCBwoFX3VuaXRCCgoIX3VuaXRfaWQazQIKCVdhbGxldEtleRJBCghtZXRhZGF0YRgBIAEoCzIvLnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkRpZ2l0YWxLZXkuTWV0YWRhdGESWgoQaHlkcmFfY3JlZGVudGlhbBgCIAEoCzJALnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkRpZ2l0YWxLZXkuV2FsbGV0S2V5Lkh5ZHJhQ3JlZGVudGlhbBqgAQoPSHlkcmFDcmVkZW50aWFsEhUKDWNyZWRlbnRpYWxfaWQYASABKAkSGwoTc2hhcmluZ19pbnN0YW5jZV9pZBgCIAEoCRIUCgxhY2NvdW50X2hhc2gYAyABKAkSEwoLdGVtcGxhdGVfaWQYBCABKAkSGAoQcmVseWluZ19wYXJ0eV9pZBgFIAEoCRIUCgxyZWZlcmVuY2VfaWQYBiABKAlCBgoEdHlwZSIkChRHZXREaWdpdGFsS2V5UmVxdWVzdBIMCgRuYW1lGAEgASgJImEKFkxpc3REaWdpdGFsS2V5c1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgFEhIKCnBhZ2VfdG9rZW4YAiABKAkSDgoGZmlsdGVyGAMgASgJEhAKCG9yZGVyX2J5GAQgASgJInAKF0xpc3REaWdpdGFsS2V5c1Jlc3BvbnNlEjwKDGRpZ2l0YWxfa2V5cxgBIAMoCzImLnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkRpZ2l0YWxLZXkSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIk4KFURpZ2l0YWxLZXlBY2Nlc3NQb2ludBIMCgRuYW1lGAEgASgJEhQKDGRpc3BsYXlfbmFtZRgCIAEoCRIRCglkZXZpY2VfaWQYAyABKAkiLwofR2V0RGlnaXRhbEtleUFjY2Vzc1BvaW50UmVxdWVzdBIMCgRuYW1lGAEgASgJImoKIUxpc3REaWdpdGFsS2V5QWNjZXNzUG9pbnRzUmVxdWVzdBIOCgZwYXJlbnQYASABKAkSDgoGZmlsdGVyGAIgASgJEhEKCXBhZ2Vfc2l6ZRgDIAEoBRISCgpwYWdlX3Rva2VuGAQgASgJIpMBCiJMaXN0RGlnaXRhbEtleUFjY2Vzc1BvaW50c1Jlc3BvbnNlElQKGWRpZ2l0YWxfa2V5X2FjY2Vzc19wb2ludHMYASADKAsyMS5zYWx0by5uZWJ1bGEuZGlnaXRhbGtleS52MS5EaWdpdGFsS2V5QWNjZXNzUG9pbnQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIjEKIVN5bmNEaWdpdGFsS2V5QWNjZXNzUG9pbnRzUmVxdWVzdBIMCgRuYW1lGAEgASgJIiQKIlN5bmNEaWdpdGFsS2V5QWNjZXNzUG9pbnRzUmVzcG9uc2UiJAoiU3luY0RpZ2l0YWxLZXlBY2Nlc3NQb2ludHNNZXRhZGF0YSIyCiJVbmxvY2tEaWdpdGFsS2V5QWNjZXNzUG9pbnRSZXF1ZXN0EgwKBG5hbWUYASABKAkiJQojVW5sb2NrRGlnaXRhbEtleUFjY2Vzc1BvaW50UmVzcG9uc2UiJQojVW5sb2NrRGlnaXRhbEtleUFjY2Vzc1BvaW50TWV0YWRhdGEyowYKEURpZ2l0YWxLZXlTZXJ2aWNlEmkKDUdldERpZ2l0YWxLZXkSMC5zYWx0by5uZWJ1bGEuZGlnaXRhbGtleS52MS5HZXREaWdpdGFsS2V5UmVxdWVzdBomLnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkRpZ2l0YWxLZXkSegoPTGlzdERpZ2l0YWxLZXlzEjIuc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuTGlzdERpZ2l0YWxLZXlzUmVxdWVzdBozLnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkxpc3REaWdpdGFsS2V5c1Jlc3BvbnNlEooBChhHZXREaWdpdGFsS2V5QWNjZXNzUG9pbnQSOy5zYWx0by5uZWJ1bGEuZGlnaXRhbGtleS52MS5HZXREaWdpdGFsS2V5QWNjZXNzUG9pbnRSZXF1ZXN0GjEuc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuRGlnaXRhbEtleUFjY2Vzc1BvaW50EpsBChpMaXN0RGlnaXRhbEtleUFjY2Vzc1BvaW50cxI9LnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkxpc3REaWdpdGFsS2V5QWNjZXNzUG9pbnRzUmVxdWVzdBo+LnNhbHRvLm5lYnVsYS5kaWdpdGFsa2V5LnYxLkxpc3REaWdpdGFsS2V5QWNjZXNzUG9pbnRzUmVzcG9uc2USfAoaU3luY0RpZ2l0YWxLZXlBY2Nlc3NQb2ludHMSPS5zYWx0by5uZWJ1bGEuZGlnaXRhbGtleS52MS5TeW5jRGlnaXRhbEtleUFjY2Vzc1BvaW50c1JlcXVlc3QaHy5zYWx0by5sb25ncnVubmluZy52MS5PcGVyYXRpb24SfgobVW5sb2NrRGlnaXRhbEtleUFjY2Vzc1BvaW50Ej4uc2FsdG8ubmVidWxhLmRpZ2l0YWxrZXkudjEuVW5sb2NrRGlnaXRhbEtleUFjY2Vzc1BvaW50UmVxdWVzdBofLnNhbHRvLmxvbmdydW5uaW5nLnYxLk9wZXJhdGlvbkLyAQoiY29tLnNhbHRvYXBpcy5uZWJ1bGEuZGlnaXRhbGtleS52MUIPRGlnaXRhbEtleVByb3RvUAFaSmdpdGh1Yi5jb20vc2FsdG9hcGlzLWludGVybmFsL3NhbHRvYXBpcy1nby9uZWJ1bGEvZGlnaXRhbGtleS92MTtkaWdpdGFsa2V5qgIeU2FsdG9hcGlzLk5lYnVsYS5EaWdpdGFsS2V5LlYxygIeU2FsdG9hcGlzXE5lYnVsYVxEaWdpdGFsS2V5XFYx4gIqR1BCTWV0YWRhdGFcU2FsdG9hcGlzXE5lYnVsYVxEaWdpdGFsS2V5XFYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_salto_longrunning_v1_operation, file_salto_type_color]);

/**
 * The digital key object
 *
 * @generated from message salto.nebula.digitalkey.v1.DigitalKey
 */
export type DigitalKey = Message<"salto.nebula.digitalkey.v1.DigitalKey"> & {
  /**
   * Resource name of the digital key. It must have the format of
   * `digital-keys/*`. For example: `digital-keys/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A specific type of digital key.
   *
   * @generated from oneof salto.nebula.digitalkey.v1.DigitalKey.type
   */
  type: {
    /**
     * An app key.
     *
     * @generated from field: salto.nebula.digitalkey.v1.DigitalKey.AppKey app_key = 2;
     */
    value: DigitalKey_AppKey;
    case: "appKey";
  } | {
    /**
     * A wallet key.
     *
     * @generated from field: salto.nebula.digitalkey.v1.DigitalKey.WalletKey wallet_key = 3;
     */
    value: DigitalKey_WalletKey;
    case: "walletKey";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message salto.nebula.digitalkey.v1.DigitalKey.
 * Use `create(DigitalKeySchema)` to create a new message.
 */
export const DigitalKeySchema: GenMessage<DigitalKey> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 0);

/**
 * Metadata associated to the digital key.
 *
 * @generated from message salto.nebula.digitalkey.v1.DigitalKey.Metadata
 */
export type DigitalKey_Metadata = Message<"salto.nebula.digitalkey.v1.DigitalKey.Metadata"> & {
  /**
   * The title of the digital key.
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * The subtitle of the digital key.
   *
   * @generated from field: string subtitle = 2;
   */
  subtitle: string;

  /**
   * The URI to view the digital key photo.
   *
   * @generated from field: string photo_uri = 3;
   */
  photoUri: string;

  /**
   * Unstructured address of the digital key location.
   *
   * For example: "1600 Amphitheatre Pkwy, Mountain View, CA 94043,
   * Sunnyvale, California."
   *
   * @generated from field: string address = 4;
   */
  address: string;

  /**
   * The color used to display the text on top of the background image.
   *
   * @generated from field: salto.type.Color text_color = 5;
   */
  textColor?: Color;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.DigitalKey.Metadata.
 * Use `create(DigitalKey_MetadataSchema)` to create a new message.
 */
export const DigitalKey_MetadataSchema: GenMessage<DigitalKey_Metadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 0, 0);

/**
 * App key.
 *
 * @generated from message salto.nebula.digitalkey.v1.DigitalKey.AppKey
 */
export type DigitalKey_AppKey = Message<"salto.nebula.digitalkey.v1.DigitalKey.AppKey"> & {
  /**
   * Metadata associated to this app key.
   *
   * @generated from field: salto.nebula.digitalkey.v1.DigitalKey.Metadata metadata = 1;
   */
  metadata?: DigitalKey_Metadata;

  /**
   * An encrypted and authenticated data blob of the app key.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * The resource name of the installation this app key belong to.
   * For example: `installations/surelock-homes-hq`.
   *
   * @generated from field: string installation = 5;
   */
  installation: string;

  /**
   * The resource name of the unit this app key belong to.
   * For example: `installations/surelock-homes-hq/units/101`.
   *
   * @generated from field: optional string unit = 6;
   */
  unit?: string;

  /**
   * Installation identifier for low-level purposes.
   *
   * WARNING: This is going to be removed after the initial nebula release
   * as its only purpose is to ease the installation picking mechanism in
   * mobile apps.
   *
   * @generated from field: string installation_id = 3;
   */
  installationId: string;

  /**
   * Unit identifier for low-level purposes.
   *
   * WARNING: This is going to be removed after the initial nebula release
   * as its only purpose is to ease the unit picking mechanism in mobile
   * apps.
   *
   * @generated from field: optional string unit_id = 4;
   */
  unitId?: string;

  /**
   * Access points synchronization time.
   *
   * This data is populated with the user's access points sync time.
   * Indicates the last time the digital key's access points were synced.
   *
   * @generated from field: google.protobuf.Timestamp access_points_sync_time = 7;
   */
  accessPointsSyncTime?: Timestamp;

  /**
   * The sync state of the digital key's access points.
   *
   * @generated from field: salto.nebula.digitalkey.v1.DigitalKey.AppKey.AccessPointsSyncState access_points_sync_state = 8;
   */
  accessPointsSyncState: DigitalKey_AppKey_AccessPointsSyncState;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.DigitalKey.AppKey.
 * Use `create(DigitalKey_AppKeySchema)` to create a new message.
 */
export const DigitalKey_AppKeySchema: GenMessage<DigitalKey_AppKey> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 0, 1);

/**
 * Sync state of the digital key's access points.
 *
 * @generated from enum salto.nebula.digitalkey.v1.DigitalKey.AppKey.AccessPointsSyncState
 */
export enum DigitalKey_AppKey_AccessPointsSyncState {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted,
   * or is not applicable.
   *
   * @generated from enum value: ACCESS_POINTS_SYNC_STATE_UNSPECIFIED = 0;
   */
  ACCESS_POINTS_SYNC_STATE_UNSPECIFIED = 0,

  /**
   * The digital key's access points are invalidated.
   *
   * @generated from enum value: INVALIDATED = 3;
   */
  INVALIDATED = 3,

  /**
   * The digital key's access points are being synced.
   *
   * @generated from enum value: SYNCING = 1;
   */
  SYNCING = 1,

  /**
   * The digital key's access points are synced.
   *
   * @generated from enum value: SYNCED = 2;
   */
  SYNCED = 2,

  /**
   * The digital key's access points are not supported on the digital key's installation.
   *
   * @generated from enum value: NOT_SUPPORTED = 4;
   */
  NOT_SUPPORTED = 4,

  /**
   * The digital key's access points synchronization is skipped because the
   * number of access points associated with this digital key
   * exceeds the system's maximum allowed limit.
   *
   * @generated from enum value: LIMIT_EXCEEDED = 5;
   */
  LIMIT_EXCEEDED = 5,
}

/**
 * Describes the enum salto.nebula.digitalkey.v1.DigitalKey.AppKey.AccessPointsSyncState.
 */
export const DigitalKey_AppKey_AccessPointsSyncStateSchema: GenEnum<DigitalKey_AppKey_AccessPointsSyncState> = /*@__PURE__*/
  enumDesc(file_salto_nebula_digitalkey_v1_digital_key, 0, 1, 0);

/**
 * Wallet key.
 *
 * @generated from message salto.nebula.digitalkey.v1.DigitalKey.WalletKey
 */
export type DigitalKey_WalletKey = Message<"salto.nebula.digitalkey.v1.DigitalKey.WalletKey"> & {
  /**
   * Metadata associated to this wallet key.
   *
   * @generated from field: salto.nebula.digitalkey.v1.DigitalKey.Metadata metadata = 1;
   */
  metadata?: DigitalKey_Metadata;

  /**
   * Hydra credential of this user's wallet key.
   *
   * @generated from field: salto.nebula.digitalkey.v1.DigitalKey.WalletKey.HydraCredential hydra_credential = 2;
   */
  hydraCredential?: DigitalKey_WalletKey_HydraCredential;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.DigitalKey.WalletKey.
 * Use `create(DigitalKey_WalletKeySchema)` to create a new message.
 */
export const DigitalKey_WalletKeySchema: GenMessage<DigitalKey_WalletKey> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 0, 2);

/**
 * Representation of an Hydra credential
 *
 * @generated from message salto.nebula.digitalkey.v1.DigitalKey.WalletKey.HydraCredential
 */
export type DigitalKey_WalletKey_HydraCredential = Message<"salto.nebula.digitalkey.v1.DigitalKey.WalletKey.HydraCredential"> & {
  /**
   * Credential identifier created and managed by Wallet Hub.
   *
   * @generated from field: string credential_id = 1;
   */
  credentialId: string;

  /**
   * An identifier that helps mapping which devices are being provisioned
   * simultaneously as a result of user initiating an in-app provisioning
   * on the main device.
   *
   * @generated from field: string sharing_instance_id = 2;
   */
  sharingInstanceId: string;

  /**
   * An identifier that has a direct reference to user's account with the
   * issuer.
   *
   * @generated from field: string account_hash = 3;
   */
  accountHash: string;

  /**
   * Card template identifier. Identifies a combination of
   * card profile identifier, card configuration identifier and
   * card art bundle name.
   *
   * @generated from field: string template_id = 4;
   */
  templateId: string;

  /**
   * An identifier representing an entity that uses a FIDO protocol to
   * directly authenticate users.
   *
   * @generated from field: string relying_party_id = 5;
   */
  relyingPartyId: string;

  /**
   * Reference identifier for this card.
   *
   * @generated from field: string reference_id = 6;
   */
  referenceId: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.DigitalKey.WalletKey.HydraCredential.
 * Use `create(DigitalKey_WalletKey_HydraCredentialSchema)` to create a new message.
 */
export const DigitalKey_WalletKey_HydraCredentialSchema: GenMessage<DigitalKey_WalletKey_HydraCredential> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 0, 2, 0);

/**
 * The request message for [`GetDigitalKey`][salto.nebula.digitalkey.v1.DigitalKeyService.GetDigitalKey]
 *
 * @generated from message salto.nebula.digitalkey.v1.GetDigitalKeyRequest
 */
export type GetDigitalKeyRequest = Message<"salto.nebula.digitalkey.v1.GetDigitalKeyRequest"> & {
  /**
   * The name of the requested digital key resource. For example:
   * `digital-keys/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.GetDigitalKeyRequest.
 * Use `create(GetDigitalKeyRequestSchema)` to create a new message.
 */
export const GetDigitalKeyRequestSchema: GenMessage<GetDigitalKeyRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 1);

/**
 * The request message for [`ListDigitalKeys`][salto.nebula.digitalkey.v1.DigitalKeyService.ListDigitalKeys]
 *
 * @generated from message salto.nebula.digitalkey.v1.ListDigitalKeysRequest
 */
export type ListDigitalKeysRequest = Message<"salto.nebula.digitalkey.v1.ListDigitalKeysRequest"> & {
  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * A filter that chooses which digital keys to return.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.ListDigitalKeysRequest.
 * Use `create(ListDigitalKeysRequestSchema)` to create a new message.
 */
export const ListDigitalKeysRequestSchema: GenMessage<ListDigitalKeysRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 2);

/**
 * The response message for [`ListDigitalKeys`][salto.nebula.digitalkey.v1.DigitalKeyService.ListDigitalKeys]
 *
 * @generated from message salto.nebula.digitalkey.v1.ListDigitalKeysResponse
 */
export type ListDigitalKeysResponse = Message<"salto.nebula.digitalkey.v1.ListDigitalKeysResponse"> & {
  /**
   * The field name should match the noun `digital_keys` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.digitalkey.v1.DigitalKey digital_keys = 1;
   */
  digitalKeys: DigitalKey[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.ListDigitalKeysResponse.
 * Use `create(ListDigitalKeysResponseSchema)` to create a new message.
 */
export const ListDigitalKeysResponseSchema: GenMessage<ListDigitalKeysResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 3);

/**
 * The digital key's access point association
 *
 * @generated from message salto.nebula.digitalkey.v1.DigitalKeyAccessPoint
 */
export type DigitalKeyAccessPoint = Message<"salto.nebula.digitalkey.v1.DigitalKeyAccessPoint"> & {
  /**
   *  Resource name of the access point. It must have the format
   * `digital-keys/{digital-key}/access-points/*`. For example:
   * `digital-keys/baker-street-key/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Display name of the access point.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The device which gives coverage to the access point.
   *
   * @generated from field: string device_id = 3;
   */
  deviceId: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.DigitalKeyAccessPoint.
 * Use `create(DigitalKeyAccessPointSchema)` to create a new message.
 */
export const DigitalKeyAccessPointSchema: GenMessage<DigitalKeyAccessPoint> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 4);

/**
 * The request message for [`GetDigitalKeyAccessPoint`][salto.nebula.digitalkey.v1.DigitalKeyService.GetDigitalKeyAccessPoint]
 *
 * @generated from message salto.nebula.digitalkey.v1.GetDigitalKeyAccessPointRequest
 */
export type GetDigitalKeyAccessPointRequest = Message<"salto.nebula.digitalkey.v1.GetDigitalKeyAccessPointRequest"> & {
  /**
   * The name of the requested access point resource. For example:
   * `digital-keys/baker-street-key/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.GetDigitalKeyAccessPointRequest.
 * Use `create(GetDigitalKeyAccessPointRequestSchema)` to create a new message.
 */
export const GetDigitalKeyAccessPointRequestSchema: GenMessage<GetDigitalKeyAccessPointRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 5);

/**
 * The request message for [`ListDigitalKeyAccessPoints`][salto.nebula.digitalkey.v1.DigitalKeyService.ListDigitalKeyAccessPoints]
 *
 * @generated from message salto.nebula.digitalkey.v1.ListDigitalKeyAccessPointsRequest
 */
export type ListDigitalKeyAccessPointsRequest = Message<"salto.nebula.digitalkey.v1.ListDigitalKeyAccessPointsRequest"> & {
  /**
   * The parent resource name. For example, `digital-keys/baker-street-key`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A filter that chooses which access points to return.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   * Note: this field is not being used in the current implementation. It is being ignored.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.ListDigitalKeyAccessPointsRequest.
 * Use `create(ListDigitalKeyAccessPointsRequestSchema)` to create a new message.
 */
export const ListDigitalKeyAccessPointsRequestSchema: GenMessage<ListDigitalKeyAccessPointsRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 6);

/**
 * The request message for [`ListDigitalKeyAccessPoints`][salto.nebula.digitalkey.v1.DigitalKeyService.ListDigitalKeyAccessPoints]
 *
 * @generated from message salto.nebula.digitalkey.v1.ListDigitalKeyAccessPointsResponse
 */
export type ListDigitalKeyAccessPointsResponse = Message<"salto.nebula.digitalkey.v1.ListDigitalKeyAccessPointsResponse"> & {
  /**
   * The field name should match the noun `digital_key_access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   *
   * @generated from field: repeated salto.nebula.digitalkey.v1.DigitalKeyAccessPoint digital_key_access_points = 1;
   */
  digitalKeyAccessPoints: DigitalKeyAccessPoint[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   * Note: this field is not being used in the current implementation. It always returns an empty string.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.ListDigitalKeyAccessPointsResponse.
 * Use `create(ListDigitalKeyAccessPointsResponseSchema)` to create a new message.
 */
export const ListDigitalKeyAccessPointsResponseSchema: GenMessage<ListDigitalKeyAccessPointsResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 7);

/**
 * The request message for [`SyncDigitalKeyAccessPoints`][salto.nebula.digitalkey.v1.DigitalKeyService.SyncDigitalKeyAccessPointsRequest]
 *
 * @generated from message salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsRequest
 */
export type SyncDigitalKeyAccessPointsRequest = Message<"salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsRequest"> & {
  /**
   * The name of the requested digital key resource to compute its access points. For example:
   * `digital-keys/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsRequest.
 * Use `create(SyncDigitalKeyAccessPointsRequestSchema)` to create a new message.
 */
export const SyncDigitalKeyAccessPointsRequestSchema: GenMessage<SyncDigitalKeyAccessPointsRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 8);

/**
 * The empty response message for [`SyncDigitalKeyAccessPoints`][salto.nebula.digitalkey.v1.DigitalKeyService.SyncDigitalKeyAccessPoints]
 *
 * @generated from message salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsResponse
 */
export type SyncDigitalKeyAccessPointsResponse = Message<"salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsResponse"> & {
};

/**
 * Describes the message salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsResponse.
 * Use `create(SyncDigitalKeyAccessPointsResponseSchema)` to create a new message.
 */
export const SyncDigitalKeyAccessPointsResponseSchema: GenMessage<SyncDigitalKeyAccessPointsResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 9);

/**
 * The empty metadata message for [`SyncDigitalKeyAccessPoints`][salto.nebula.digitalkey.v1.DigitalKeyService.SyncDigitalKeyAccessPoints]
 *
 * @generated from message salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsMetadata
 */
export type SyncDigitalKeyAccessPointsMetadata = Message<"salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsMetadata"> & {
};

/**
 * Describes the message salto.nebula.digitalkey.v1.SyncDigitalKeyAccessPointsMetadata.
 * Use `create(SyncDigitalKeyAccessPointsMetadataSchema)` to create a new message.
 */
export const SyncDigitalKeyAccessPointsMetadataSchema: GenMessage<SyncDigitalKeyAccessPointsMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 10);

/**
 * The request message for [`UnlockDigitalKeyAccessPoint`][salto.nebula.digitalkey.v1.DigitalKeyService.UnlockDigitalKeyAccessPoint]
 *
 * @generated from message salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointRequest
 */
export type UnlockDigitalKeyAccessPointRequest = Message<"salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointRequest"> & {
  /**
   * The resource name of the access point to be unlocked. For example:
   * `digital-keys/baker-street-key/access-points/baker-street-entrance`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointRequest.
 * Use `create(UnlockDigitalKeyAccessPointRequestSchema)` to create a new message.
 */
export const UnlockDigitalKeyAccessPointRequestSchema: GenMessage<UnlockDigitalKeyAccessPointRequest> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 11);

/**
 * The empty response message for [`UnlockAccessPoint`][salto.nebula.digitalkey.v1.DigitalKeyService.UnlockDigitalKeyAccessPoint]
 *
 * @generated from message salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointResponse
 */
export type UnlockDigitalKeyAccessPointResponse = Message<"salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointResponse"> & {
};

/**
 * Describes the message salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointResponse.
 * Use `create(UnlockDigitalKeyAccessPointResponseSchema)` to create a new message.
 */
export const UnlockDigitalKeyAccessPointResponseSchema: GenMessage<UnlockDigitalKeyAccessPointResponse> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 12);

/**
 * The metadata message for [`UnlockAccessPoint`][salto.nebula.digitalkey.v1.DigitalKeyService.UnlockDigitalKeyAccessPoint]
 *
 * @generated from message salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointMetadata
 */
export type UnlockDigitalKeyAccessPointMetadata = Message<"salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointMetadata"> & {
};

/**
 * Describes the message salto.nebula.digitalkey.v1.UnlockDigitalKeyAccessPointMetadata.
 * Use `create(UnlockDigitalKeyAccessPointMetadataSchema)` to create a new message.
 */
export const UnlockDigitalKeyAccessPointMetadataSchema: GenMessage<UnlockDigitalKeyAccessPointMetadata> = /*@__PURE__*/
  messageDesc(file_salto_nebula_digitalkey_v1_digital_key, 13);

/**
 * DigitalKeyService is the service responsible for managing digital key
 * resources. This service manages resources for the different types of keys
 * that exist on mobile devices, such as app keys or wallet keys.
 *
 * @generated from service salto.nebula.digitalkey.v1.DigitalKeyService
 */
export const DigitalKeyService: GenService<{
  /**
   * Get a digital key
   *
   * Gets an existing digital key.
   *
   * @generated from rpc salto.nebula.digitalkey.v1.DigitalKeyService.GetDigitalKey
   */
  getDigitalKey: {
    methodKind: "unary";
    input: typeof GetDigitalKeyRequestSchema;
    output: typeof DigitalKeySchema;
  },
  /**
   * List digital keys
   *
   * Returns a list of digital keys that have been previously created.
   *
   * @generated from rpc salto.nebula.digitalkey.v1.DigitalKeyService.ListDigitalKeys
   */
  listDigitalKeys: {
    methodKind: "unary";
    input: typeof ListDigitalKeysRequestSchema;
    output: typeof ListDigitalKeysResponseSchema;
  },
  /**
   * Get an access point
   *
   * Gets an existing digital key's access point association.
   *
   * @generated from rpc salto.nebula.digitalkey.v1.DigitalKeyService.GetDigitalKeyAccessPoint
   */
  getDigitalKeyAccessPoint: {
    methodKind: "unary";
    input: typeof GetDigitalKeyAccessPointRequestSchema;
    output: typeof DigitalKeyAccessPointSchema;
  },
  /**
   * List access points
   *
   * Lists an existing digital key's access point associations.
   *
   * @generated from rpc salto.nebula.digitalkey.v1.DigitalKeyService.ListDigitalKeyAccessPoints
   */
  listDigitalKeyAccessPoints: {
    methodKind: "unary";
    input: typeof ListDigitalKeyAccessPointsRequestSchema;
    output: typeof ListDigitalKeyAccessPointsResponseSchema;
  },
  /**
   * Synchronize access points
   *
   * Synchronize the digital key's access point associations.
   * This methods asks the cloud to synchronize the access points for the given digital key.
   * The cloud will trigger the synchronization of the digital key's access points if needed.
   * (-- api-linter: core::0136::http-name-variable=disabled --)
   *
   * @generated from rpc salto.nebula.digitalkey.v1.DigitalKeyService.SyncDigitalKeyAccessPoints
   */
  syncDigitalKeyAccessPoints: {
    methodKind: "unary";
    input: typeof SyncDigitalKeyAccessPointsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Unlock an user access point
   *
   * Remotely unlocks an access point. This can be run against those access
   * points where their associated devices are online and connected.
   * The user related to the digital key must have the necessary access rights
   * and the access point has to include a permitted schedule to perform a remote unlock.
   *
   * @generated from rpc salto.nebula.digitalkey.v1.DigitalKeyService.UnlockDigitalKeyAccessPoint
   */
  unlockDigitalKeyAccessPoint: {
    methodKind: "unary";
    input: typeof UnlockDigitalKeyAccessPointRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_salto_nebula_digitalkey_v1_digital_key, 0);

