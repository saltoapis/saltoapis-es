// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file salto/nebula/device/v1/device.proto (package salto.nebula.device.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { DeviceType } from "@saltoapis/nebula-type";

/**
 * The device object
 *
 * @generated from message salto.nebula.device.v1.Device
 */
export class Device extends Message<Device> {
  /**
   * Output only. Resource name of the device. It must have the format of
   * `installations/*\/devices/*`. For example:
   * `installations/surelock-homes-hq/devices/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Display name of the device.
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, electronic locks and so on.
   *
   * @generated from field: optional string device_id = 3;
   */
  deviceId?: string;

  /**
   * Device type.
   *
   * @generated from field: salto.nebula.type.DeviceType device_type = 4;
   */
  deviceType = DeviceType.DEVICE_TYPE_UNSPECIFIED;

  /**
   * Resource name of the specific source device (gateway, extender, electronic_lock, encoder). For example:
   * `installations/surelock-homes-hq/electronic-locks/dancing-men` or
   * `installations/surelock-homes-hq/gateways/conan-doyle` or
   * `installations/surelock-homes-hq/extenders/elementary` or
   * `installations/surelock-homes-hq/encoders/dancing-men`.
   *
   * @generated from field: string source = 5;
   */
  source = "";

  /**
   * Parent device name, could be a `Gateway` or an `Extender` and takes the
   * form of a relative resource name:
   * `installations/surelock-homes-hq/gateways/conan-doyle` or
   * `installations/surelock-homes-hq/extenders/elementary`.
   *
   * @generated from oneof salto.nebula.device.v1.Device.parent_device
   */
  parentDevice: {
    /**
     * Parent name, when the device has a gateway relative
     *
     * @generated from field: string gateway = 6;
     */
    value: string;
    case: "gateway";
  } | {
    /**
     * Parent name, when the device has a extender relative
     *
     * @generated from field: string extender = 7;
     */
    value: string;
    case: "extender";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Indicates whether this device has pending updates or not. This
   * could be because there was a pending configuration or a firmware update
   * and is conditionally set based on the current installation settings.
   *
   * @generated from field: bool outdated = 8;
   */
  outdated = false;

  /**
   * Indicates whether this device is connected or not. The connectivity
   * detection policy could vary depending on the device. The property is
   * left unset if it is an offline device.
   *
   * @generated from field: optional bool connected = 9;
   */
  connected?: boolean;

  /**
   * Indicates whether the battery of this device is low, and needs
   * replacing, or is normal and doesn't need replacing. If unset it means
   * the device is mains powered. For example, the device could be a
   * gateway, an extender, or a control unit.
   *
   * @generated from field: optional bool low_battery = 10;
   */
  lowBattery?: boolean;

  /**
   * The last time an event was received.
   *
   * @generated from field: google.protobuf.Timestamp last_event_time = 11;
   */
  lastEventTime?: Timestamp;

  constructor(data?: PartialMessage<Device>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.device.v1.Device";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "device_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "device_type", kind: "enum", T: proto3.getEnumType(DeviceType) },
    { no: 5, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gateway", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parent_device" },
    { no: 7, name: "extender", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "parent_device" },
    { no: 8, name: "outdated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "connected", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "low_battery", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 11, name: "last_event_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Device {
    return new Device().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Device {
    return new Device().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Device {
    return new Device().fromJsonString(jsonString, options);
  }

  static equals(a: Device | PlainMessage<Device> | undefined, b: Device | PlainMessage<Device> | undefined): boolean {
    return proto3.util.equals(Device, a, b);
  }
}

/**
 * The request message for [GetDevice][salto.nebula.device.v1.DeviceService.GetDevice]
 *
 * @generated from message salto.nebula.device.v1.GetDeviceRequest
 */
export class GetDeviceRequest extends Message<GetDeviceRequest> {
  /**
   * The name of the requested device resource. For example:
   * `installations/surelock-homes-hq/devices/dancing-men`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetDeviceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.device.v1.GetDeviceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDeviceRequest {
    return new GetDeviceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDeviceRequest {
    return new GetDeviceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDeviceRequest {
    return new GetDeviceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDeviceRequest | PlainMessage<GetDeviceRequest> | undefined, b: GetDeviceRequest | PlainMessage<GetDeviceRequest> | undefined): boolean {
    return proto3.util.equals(GetDeviceRequest, a, b);
  }
}

/**
 * The request message for [ListDevices][salto.nebula.device.v1.DeviceService.ListDevice]
 *
 * @generated from message salto.nebula.device.v1.ListDevicesRequest
 */
export class ListDevicesRequest extends Message<ListDevicesRequest> {
  /**
   * The parent resource name. For example, `installations/surelock-homes-hq`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * The `next_page_token` value returned from a previous `List` request, if
   * any.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * A filter that chooses which devices to return.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  /**
   * How the results should be sorted.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListDevicesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.device.v1.ListDevicesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDevicesRequest {
    return new ListDevicesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDevicesRequest {
    return new ListDevicesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDevicesRequest {
    return new ListDevicesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListDevicesRequest | PlainMessage<ListDevicesRequest> | undefined, b: ListDevicesRequest | PlainMessage<ListDevicesRequest> | undefined): boolean {
    return proto3.util.equals(ListDevicesRequest, a, b);
  }
}

/**
 * The response message for [ListDevices][salto.nebula.device.v1.DeviceService.ListDevices]
 *
 * @generated from message salto.nebula.device.v1.ListDevicesResponse
 */
export class ListDevicesResponse extends Message<ListDevicesResponse> {
  /**
   * The field name should match the noun `devices` in the method name. There
   * will be a maximum number of items returned based on the `page_size` field
   * in the request.
   *
   * @generated from field: repeated salto.nebula.device.v1.Device devices = 1;
   */
  devices: Device[] = [];

  /**
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  /**
   * The total number of devices in all pages, irrespective of any pagination.
   * This is an estimated number based on the requested filter, and it may change in
   * subsequent pages.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize = 0;

  constructor(data?: PartialMessage<ListDevicesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "salto.nebula.device.v1.ListDevicesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "devices", kind: "message", T: Device, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDevicesResponse {
    return new ListDevicesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDevicesResponse {
    return new ListDevicesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDevicesResponse {
    return new ListDevicesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDevicesResponse | PlainMessage<ListDevicesResponse> | undefined, b: ListDevicesResponse | PlainMessage<ListDevicesResponse> | undefined): boolean {
    return proto3.util.equals(ListDevicesResponse, a, b);
  }
}

