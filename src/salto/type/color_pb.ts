// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=none"
// @generated from file salto/type/color.proto (package salto.type, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file salto/type/color.proto.
 */
export const file_salto_type_color: GenFile = /*@__PURE__*/
  fileDesc("ChZzYWx0by90eXBlL2NvbG9yLnByb3RvEgpzYWx0by50eXBlIk8KBUNvbG9yEgsKA3JlZBgBIAEoAhINCgVncmVlbhgCIAEoAhIMCgRibHVlGAMgASgCEhIKBWFscGhhGAQgASgCSACIAQFCCAoGX2FscGhhQp4BChJjb20uc2FsdG9hcGlzLnR5cGVCCkNvbG9yUHJvdG9QAVo7Z2l0aHViLmNvbS9zYWx0b2FwaXMtaW50ZXJuYWwvc2FsdG9hcGlzLWdvL3R5cGUvY29sb3I7Y29sb3KqAg5TYWx0b2FwaXMuVHlwZcoCDlNhbHRvYXBpc1xUeXBl4gIaR1BCTWV0YWRhdGFcU2FsdG9hcGlzXFR5cGViBnByb3RvMw");

/**
 * Represents a color in the RGBA color space.
 * By default, applications should assume the sRGB color space.
 *
 * When color equality needs to be decided, implementations, unless
 * documented otherwise, treat two colors as equal if all their red,
 * green, blue, and alpha values each differ by at most 1e-5.
 *
 * @generated from message salto.type.Color
 */
export type Color = Message<"salto.type.Color"> & {
  /**
   * The amount of red in the color as a value in the interval [0, 1].
   *
   * @generated from field: float red = 1;
   */
  red: number;

  /**
   * The amount of green in the color as a value in the interval [0, 1].
   *
   * @generated from field: float green = 2;
   */
  green: number;

  /**
   * The amount of blue in the color as a value in the interval [0, 1].
   *
   * @generated from field: float blue = 3;
   */
  blue: number;

  /**
   * The fraction of this color that should be applied to the pixel. That is,
   * the final pixel color is defined by the equation:
   *
   *   `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)`
   *
   * This means that a value of 1.0 corresponds to a solid color, whereas
   * a value of 0.0 corresponds to a completely transparent color.
   * If omitted, this color object is rendered as a solid color
   * (as if the alpha value had been explicitly given a value of 1.0).
   *
   * @generated from field: optional float alpha = 4;
   */
  alpha?: number;
};

/**
 * Describes the message salto.type.Color.
 * Use `create(ColorSchema)` to create a new message.
 */
export const ColorSchema: GenMessage<Color> = /*@__PURE__*/
  messageDesc(file_salto_type_color, 0);

